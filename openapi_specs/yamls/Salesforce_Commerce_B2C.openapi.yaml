openapi: 3.0.3
info:
  title: Salesforce Commerce B2C
  description: |-
    # Salesforce Commerce APIs

    ## SCAPI End2End Shopper Journey

    A set of API endpoint calls from all different commerce B2C API domains. Serves as a sample set of call for a shopper journey and is connected to a commerce B2C trial environment.

    ## Shopper Login and API Access Service (SLAS)

    This Postman collection contains 6 use cases that SLAS supports. This collection will show how to get an authorization code, access token, create a shopper basket, place an item in the basket, and then delete the basket using a private SLAS client and a SLAS public client.
  version: 1.0.0
  contact: {}
servers:
- url: https://account.demandware.com
- url: https://{{shortCode}}.api.commercecloud.salesforce.com
- url: https://<instance>-<realm>-<customer>.demandware.net or On-Demand Sandbox URI, like https://zzte-053.dx.commercecloud.salesforce.com
paths:
  /dwsso/oauth2/access_token:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: OAuth token from account manager
      description: OAuth token from account manager
      operationId: oauthTokenFromAccountManager
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  example: client_credentials
                scope:
                  type: string
                  example: SALESFORCE_COMMERCE_API:bbsv_150
            examples:
              OAuth token from account manager:
                value:
                  grant_type: client_credentials
                  scope: SALESFORCE_COMMERCE_API:bbsv_150
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
  /shopper/auth-admin/v1/tenants/{tenant}:
    get:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - retrieve tenant
      description: SLAS Admin - retrieve tenant
      operationId: slasAdminRetrieveTenant
      responses:
        '200':
          description: ''
      security:
      - {}
    put:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - create/update tenant
      description: SLAS Admin - create/update tenant
      operationId: slasAdminCreateUpdateTenant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: string
                  example: '{{tenantContact}}'
                description:
                  type: string
                  example: Tenant for API Access
                emailAddress:
                  type: string
                  example: '{{tenantEmail}}'
                instance:
                  type: string
                  example: '{{tenant}}'
                merchantName:
                  type: string
                  example: '{{tenantMerchantName}}'
            examples:
              SLAS Admin - create/update tenant:
                value:
                  contact: '{{tenantContact}}'
                  description: Tenant for API Access
                  emailAddress: '{{tenantEmail}}'
                  instance: '{{tenant}}'
                  merchantName: '{{tenantMerchantName}}'
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth-admin/v1/tenants/{tenant}/clients/{public_client_id}:
    get:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - retrieve client
      description: SLAS Admin - retrieve client
      operationId: slasAdminRetrieveClient
      responses:
        '200':
          description: ''
      security:
      - {}
    put:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - create/update public client
      description: SLAS Admin - create/update public client
      operationId: slasAdminCreateUpdatePublicClient
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackUri:
                  type: array
                  items: {}
                  example: []
                channels:
                  type: array
                  items:
                    type: string
                    example: RefArch
                  example:
                  - RefArch
                  - RefArchGlobal
                clientId:
                  type: string
                  example: '{{public_client_id}}'
                isPrivateClient:
                  type: string
                  example: 'false'
                name:
                  type: string
                  example: Public Client
                redirectUri:
                  type: array
                  items:
                    type: string
                    example: http://127.0.0.1:3000/callback
                  example:
                  - http://127.0.0.1:3000/callback
                  - http://localhost:3000/callback
                  - https://*.mobify-storefront.com/callback
                  - '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/{{locale}}/SLASCallback-RetrieveCode'
                scopes:
                  type: array
                  items:
                    type: string
                    example: sfcc.shopper-baskets-orders
                  example:
                  - sfcc.shopper-baskets-orders
                  - sfcc.shopper-baskets-orders.rw
                  - sfcc.shopper-categories
                  - sfcc.shopper-context.rw
                  - sfcc.shopper-customers.login
                  - sfcc.shopper-customers.register
                  - sfcc.shopper-discovery-search
                  - sfcc.shopper-experience
                  - sfcc.shopper-gift-certificates
                  - sfcc.shopper-myaccount
                  - sfcc.shopper-myaccount.addresses
                  - sfcc.shopper-myaccount.addresses.rw
                  - sfcc.shopper-myaccount.baskets
                  - sfcc.shopper-myaccount.orders
                  - sfcc.shopper-myaccount.paymentinstruments
                  - sfcc.shopper-myaccount.paymentinstruments.rw
                  - sfcc.shopper-myaccount.productlists
                  - sfcc.shopper-myaccount.productlists.rw
                  - sfcc.shopper-myaccount.rw
                  - sfcc.shopper-product-search
                  - sfcc.shopper-productlists
                  - sfcc.shopper-products
                  - sfcc.shopper-promotions
                  - sfcc.shopper.stores
                  - sfcc.pwdless_login
                  - sfcc.session_bridge
            examples:
              SLAS Admin - create/update public client:
                value:
                  callbackUri: []
                  channels:
                  - RefArch
                  - RefArchGlobal
                  clientId: '{{public_client_id}}'
                  isPrivateClient: 'false'
                  name: Public Client
                  redirectUri:
                  - http://127.0.0.1:3000/callback
                  - http://localhost:3000/callback
                  - https://*.mobify-storefront.com/callback
                  - '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/{{locale}}/SLASCallback-RetrieveCode'
                  scopes:
                  - sfcc.shopper-baskets-orders
                  - sfcc.shopper-baskets-orders.rw
                  - sfcc.shopper-categories
                  - sfcc.shopper-context.rw
                  - sfcc.shopper-customers.login
                  - sfcc.shopper-customers.register
                  - sfcc.shopper-discovery-search
                  - sfcc.shopper-experience
                  - sfcc.shopper-gift-certificates
                  - sfcc.shopper-myaccount
                  - sfcc.shopper-myaccount.addresses
                  - sfcc.shopper-myaccount.addresses.rw
                  - sfcc.shopper-myaccount.baskets
                  - sfcc.shopper-myaccount.orders
                  - sfcc.shopper-myaccount.paymentinstruments
                  - sfcc.shopper-myaccount.paymentinstruments.rw
                  - sfcc.shopper-myaccount.productlists
                  - sfcc.shopper-myaccount.productlists.rw
                  - sfcc.shopper-myaccount.rw
                  - sfcc.shopper-product-search
                  - sfcc.shopper-productlists
                  - sfcc.shopper-products
                  - sfcc.shopper-promotions
                  - sfcc.shopper.stores
                  - sfcc.pwdless_login
                  - sfcc.session_bridge
      responses:
        '200':
          description: ''
      security:
      - {}
    delete:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - delete client
      description: SLAS Admin - delete client
      operationId: slasAdminDeleteClient
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: public_client_id
      in: path
      required: true
      schema:
        type: string
  /shopper/auth-admin/v1/tenants/{tenant}/clients/{private_client_id}:
    put:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - create/update private client
      description: SLAS Admin - create/update private client
      operationId: slasAdminCreateUpdatePrivateClient
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackUri:
                  type: array
                  items:
                    type: string
                    example: '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/default/PasswordlessLogin-Callback'
                  example:
                  - '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/default/PasswordlessLogin-Callback'
                  - '{{callback_url}}'
                channels:
                  type: array
                  items:
                    type: string
                    example: RefArch
                  example:
                  - RefArch
                  - RefArchGlobal
                clientId:
                  type: string
                  example: '{{private_client_id}}'
                isPrivateClient:
                  type: string
                  example: 'true'
                name:
                  type: string
                  example: Private Client
                redirectUri:
                  type: array
                  items:
                    type: string
                    example: http://127.0.0.1:3000/callback
                  example:
                  - http://127.0.0.1:3000/callback
                  - http://localhost:3000/callback
                  - https://*.mobify-storefront.com/callback
                  - '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/{{locale}}/SLASCallback-RetrieveCode'
                scopes:
                  type: array
                  items:
                    type: string
                    example: sfcc.catalogs
                  example:
                  - sfcc.catalogs
                  - sfcc.customerlists.rw
                  - sfcc.orders.rw
                  - sfcc.products.rw
                  - sfcc.gift-certificates
                  - sfcc.gift-certificates.rw
                  - sfcc.shopper-baskets-orders
                  - sfcc.shopper-baskets-orders.rw
                  - sfcc.shopper-categories
                  - sfcc.shopper-context.rw
                  - sfcc.shopper-customers.login
                  - sfcc.shopper-customers.register
                  - sfcc.shopper-discovery-search
                  - sfcc.shopper-gift-certificates
                  - sfcc.shopper-myaccount
                  - sfcc.shopper-myaccount.addresses
                  - sfcc.shopper-myaccount.addresses.rw
                  - sfcc.shopper-myaccount.baskets
                  - sfcc.shopper-myaccount.orders
                  - sfcc.shopper-myaccount.paymentinstruments
                  - sfcc.shopper-myaccount.paymentinstruments.rw
                  - sfcc.shopper-myaccount.productlists
                  - sfcc.shopper-myaccount.productlists.rw
                  - sfcc.shopper-myaccount.rw
                  - sfcc.shopper-product-search
                  - sfcc.shopper-productlists
                  - sfcc.shopper-products
                  - sfcc.shopper-promotions
                  - sfcc.shopper.stores
                  - sfcc.inventory.impex-event-log
                  - sfcc.inventory.impex-graphs
                  - sfcc.inventory.impex-graphs.rw
                  - sfcc.inventory.impex-inventory.rw
                  - sfcc.inventory.impex-inventory
                  - sfcc.inventory.availability
                  - sfcc.inventory.availability.rw
                  - sfcc.inventory.reservations
                  - sfcc.inventory.reservations.rw
                  - sfcc.inventory.admin.rw
                  - sfcc.pwdless_login
                  - sfcc.session_bridge
                  - sfcc.ts_ext_on_behalf_of
                secret:
                  type: string
                  example: '{{private_client_secret}}'
            examples:
              SLAS Admin - create/update private client:
                value:
                  callbackUri:
                  - '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/default/PasswordlessLogin-Callback'
                  - '{{callback_url}}'
                  channels:
                  - RefArch
                  - RefArchGlobal
                  clientId: '{{private_client_id}}'
                  isPrivateClient: 'true'
                  name: Private Client
                  redirectUri:
                  - http://127.0.0.1:3000/callback
                  - http://localhost:3000/callback
                  - https://*.mobify-storefront.com/callback
                  - '{{ocapi_uri}}/on/demandware.store/Sites-{{ocapi_site}}-Site/{{locale}}/SLASCallback-RetrieveCode'
                  scopes:
                  - sfcc.catalogs
                  - sfcc.customerlists.rw
                  - sfcc.orders.rw
                  - sfcc.products.rw
                  - sfcc.gift-certificates
                  - sfcc.gift-certificates.rw
                  - sfcc.shopper-baskets-orders
                  - sfcc.shopper-baskets-orders.rw
                  - sfcc.shopper-categories
                  - sfcc.shopper-context.rw
                  - sfcc.shopper-customers.login
                  - sfcc.shopper-customers.register
                  - sfcc.shopper-discovery-search
                  - sfcc.shopper-gift-certificates
                  - sfcc.shopper-myaccount
                  - sfcc.shopper-myaccount.addresses
                  - sfcc.shopper-myaccount.addresses.rw
                  - sfcc.shopper-myaccount.baskets
                  - sfcc.shopper-myaccount.orders
                  - sfcc.shopper-myaccount.paymentinstruments
                  - sfcc.shopper-myaccount.paymentinstruments.rw
                  - sfcc.shopper-myaccount.productlists
                  - sfcc.shopper-myaccount.productlists.rw
                  - sfcc.shopper-myaccount.rw
                  - sfcc.shopper-product-search
                  - sfcc.shopper-productlists
                  - sfcc.shopper-products
                  - sfcc.shopper-promotions
                  - sfcc.shopper.stores
                  - sfcc.inventory.impex-event-log
                  - sfcc.inventory.impex-graphs
                  - sfcc.inventory.impex-graphs.rw
                  - sfcc.inventory.impex-inventory.rw
                  - sfcc.inventory.impex-inventory
                  - sfcc.inventory.availability
                  - sfcc.inventory.availability.rw
                  - sfcc.inventory.reservations
                  - sfcc.inventory.reservations.rw
                  - sfcc.inventory.admin.rw
                  - sfcc.pwdless_login
                  - sfcc.session_bridge
                  - sfcc.ts_ext_on_behalf_of
                  secret: '{{private_client_secret}}'
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: private_client_id
      in: path
      required: true
      schema:
        type: string
  /shopper/auth-admin/v1/tenants/{tenant}/clients:
    get:
      tags:
      - Salesforce Commerce API families
      - SLAS Admin
      summary: SLAS Admin - retrieve clients
      description: SLAS Admin - retrieve clients
      operationId: slasAdminRetrieveClients
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/token:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Ecom User • Public Client
      summary: SLAS - Private Client - Guest - Access Token
      description: SLAS - Private Client - Guest - Access Token
      operationId: slasPrivateClientGuestAccessToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  example: '{{public_client_id}}'
                grant_type:
                  type: string
                  example: refresh_token
                refresh_token:
                  type: string
                  example: '{{b2c_public_refresh_token}}'
            examples:
              SLAS - Private Client - Ecom User - Access Token:
                value:
                  channel_id: '{{ocapi_site}}'
                  code: '{{auth_code}}'
                  code_verifier: '{{ECOM_USER_CODE_VERIFIER}}'
                  grant_type: authorization_code_pkce
                  redirect_uri: '{{redirect_url}}'
                  usid: '{{usid}}'
              SLAS - Private Client - Ecom User - Get Refresh Access Token:
                value:
                  grant_type: refresh_token
                  refresh_token: '{{b2c_private_refresh_token}}'
              SLAS - Private Client - Guest - Access Token:
                value:
                  grant_type: client_credentials
                  redirect_uri: '{{redirect_url}}'
              SLAS - Private Client - Guest - Get Refresh Guest Access Token:
                value:
                  grant_type: refresh_token
                  refresh_token: '{{guest_private_refresh_token}}'
              SLAS - Public Client - Ecom User - Access Token:
                value:
                  channel_id: '{{ocapi_site}}'
                  client_id: '{{public_client_id}}'
                  code: '{{auth_code}}'
                  code_verifier: '{{PUBLIC_ECOM_CODE_VERIFIER}}'
                  grant_type: authorization_code_pkce
                  redirect_uri: '{{redirect_url}}'
                  usid: '{{usid}}'
              SLAS - Public Client - Ecom User - Get Refresh Access Token:
                value:
                  client_id: '{{public_client_id}}'
                  grant_type: refresh_token
                  refresh_token: '{{b2c_public_refresh_token}}'
              SLAS - Public Client - Guest - Access Token:
                value:
                  channel_id: '{{ocapi_site}}'
                  client_id: '{{public_client_id}}'
                  code: '{{auth_code}}'
                  code_verifier: '{{PUBLIC_GUEST_CODE_VERIFIER}}'
                  grant_type: authorization_code_pkce
                  redirect_uri: '{{redirect_url}}'
                  usid: '{{usid}}'
              SLAS - Public Client - Guest - Get Refresh Guest Access Token:
                value:
                  client_id: '{{public_client_id}}'
                  grant_type: refresh_token
                  refresh_token: '{{guest_public_refresh_token}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/authorize:
    get:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Session Bridge • Guest User • Public Client
      summary: SLAS - Public Client - Guest - Authorize
      description: SLAS - Public Client - Guest - Authorize
      operationId: slasPublicClientGuestAuthorize
      parameters:
      - name: redirect_uri
        in: query
        schema:
          type: string
          example: '{{redirect_url}}'
      - name: response_type
        in: query
        schema:
          type: string
          example: code
      - name: client_id
        in: query
        schema:
          type: string
          example: '{{public_client_id}}'
      - name: hint
        in: query
        schema:
          type: string
          example: guest
      - name: code_challenge
        in: query
        schema:
          type: string
          example: '{{PUBLIC_GUEST_CODE_CHALLENGE}}'
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/login:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Ecom User • Public Client
      summary: SLAS - Private Client - Ecom User - Authorize
      description: SLAS - Private Client - Ecom User - Authorize
      operationId: slasPrivateClientEcomUserAuthorize
      parameters:
      - name: client_id
        in: query
        schema:
          type: string
          example: '{{private_client_id}}'
      - name: channel_id
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: redirect_uri
        in: query
        schema:
          type: string
          example: '{{redirect_url}}'
      - name: code_challenge
        in: query
        schema:
          type: string
          example: '{{ECOM_USER_CODE_CHALLENGE}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/passwordless/login:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Passwordless Login
      summary: SLAS - Private Client - Request passwordless token
      description: SLAS - Private Client - Request passwordless token
      operationId: slasPrivateClientRequestPasswordlessToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                callback_uri:
                  type: string
                  example: '{{callback_url}}'
                channel_id:
                  type: string
                  example: '{{ocapi_site}}'
                mode:
                  type: string
                  example: callback
                user_id:
                  type: string
                  example: '{{ecom_customer_login}}'
                usid:
                  type: string
                  example: '{{usid}}'
            examples:
              SLAS - Private Client - Request passwordless token:
                value:
                  callback_uri: '{{callback_url}}'
                  channel_id: '{{ocapi_site}}'
                  mode: callback
                  user_id: '{{ecom_customer_login}}'
                  usid: '{{usid}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/passwordless/token:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Passwordless Login
      summary: SLAS - Private Client - Authenticate with passwordless token
      description: SLAS - Private Client - Authenticate with passwordless token
      operationId: slasPrivateClientAuthenticateWithPasswordlessToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  example: client_credentials
                hint:
                  type: string
                  example: pwdless_login
                pwdless_login_token:
                  type: string
                  example: ''
                redirect_uri:
                  type: string
                  example: '{{redirect_url}}'
            examples:
              SLAS - Private Client - Authenticate with passwordless token:
                value:
                  grant_type: client_credentials
                  hint: pwdless_login
                  pwdless_login_token: ''
                  redirect_uri: '{{redirect_url}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/trusted-agent/authorize:
    get:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Trusted Agent on Behalf (TAOB)
      summary: SLAS - Public Client - Get trusted agent authorization code
      description: SLAS - Public Client - Get trusted agent authorization code
      operationId: slasPublicClientGetTrustedAgentAuthorizationCode
      parameters:
      - name: client_id
        in: query
        schema:
          type: string
          example: '{{public_client_id}}'
      - name: channel_id
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: code_challenge
        in: query
        schema:
          type: string
          example: '{{ECOM_USER_CODE_CHALLENGE}}'
      - name: login_id
        in: query
        schema:
          type: string
          example: '{{ecom_customer_login}}'
      - name: idp_origin
        in: query
        schema:
          type: string
          example: ecom
      - name: redirect_uri
        in: query
        schema:
          type: string
          example: '{{callback_url}}'
      - name: response_type
        in: query
        schema:
          type: string
          example: code
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/trusted-agent/token:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Trusted Agent on Behalf (TAOB)
      summary: SLAS - Public Client - Request trusted agent access token
      description: SLAS - Public Client - Request trusted agent access token
      operationId: slasPublicClientRequestTrustedAgentAccessToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                agent_id:
                  type: string
                  example: ''
                channel_id:
                  type: string
                  example: '{{ocapi_site}}'
                client_id:
                  type: string
                  example: '{{public_client_id}}'
                code_verifier:
                  type: string
                  example: '{{ECOM_USER_CODE_VERIFIER}}'
                grant_type:
                  type: string
                  example: client_credentials
                idp_origin:
                  type: string
                  example: ecom
                login_id:
                  type: string
                  example: '{{ecom_customer_login}}'
            examples:
              SLAS - Public Client - Request trusted agent access token:
                value:
                  agent_id: ''
                  channel_id: '{{ocapi_site}}'
                  client_id: '{{public_client_id}}'
                  code_verifier: '{{ECOM_USER_CODE_VERIFIER}}'
                  grant_type: client_credentials
                  idp_origin: ecom
                  login_id: '{{ecom_customer_login}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/trusted-system/token:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Trusted System on Behalf (TSOB) - for external trusted system
      summary: SLAS - Get TSOB for external trusted systems for registered shoppers
      description: SLAS - Get TSOB for external trusted systems for registered shoppers
      operationId: slasGetTsobForExternalTrustedSystemsForRegisteredShoppers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  example: '{{ocapi_site}}'
                grant_type:
                  type: string
                  example: client_credentials
                hint:
                  type: string
                  example: ts_ext_on_behalf_of
                idp_origin:
                  type: string
                  example: okta
                login_id:
                  type: string
                  example: guest
            examples:
              SLAS - Get TSOB for external trusted systems for guest shoppers:
                value:
                  channel_id: '{{ocapi_site}}'
                  grant_type: client_credentials
                  hint: ts_ext_on_behalf_of
                  idp_origin: okta
                  login_id: guest
              SLAS - Get TSOB for external trusted systems for registered shoppers:
                value:
                  channel_id: '{{ocapi_site}}'
                  grant_type: client_credentials
                  hint: ts_ext_on_behalf_of
                  idp_origin: okta
                  login_id: '{{ecom_customer_login}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /on/demandware.store/Sites-{ocapi_site}-Site/en_US/Cart-AddProduct:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Session Bridge • Ecom User • Public Client
      summary: SFCC - Add to Cart, Get DWSID
      description: SFCC - Add to Cart, Get DWSID
      operationId: sfccAddToCartGetDwsid
      parameters:
      - name: format
        in: query
        schema:
          type: string
          example: ajax
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pid:
                  type: string
                  example: '{{product_id}}'
                quantity:
                  type: string
                  example: '1'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: ocapi_site
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/session-bridge/token:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Session Bridge • Ecom User • Public Client
      summary: SLAS - Session bridge - Get JWT for DWSID cookie
      description: SLAS - Session bridge - Get JWT for DWSID cookie
      operationId: slasSessionBridgeGetJwtForDwsidCookie
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  example: '{{ocapi_site}}'
                client_id:
                  type: string
                  example: '{{public_client_id}}'
                code:
                  type: string
                  example: '{{auth_code}}'
                code_verifier:
                  type: string
                  example: '{{PUBLIC_ECOM_CODE_VERIFIER}}'
                dwsid:
                  type: string
                  example: '{{dwsid}}'
                grant_type:
                  type: string
                  example: session_bridge
                login_id:
                  type: string
                  example: '{{ecom_customer_login}}'
                usid:
                  type: string
                  example: '{{usid}}'
            examples:
              SLAS - Session bridge - Get JWT for DWSID cookie:
                value:
                  channel_id: '{{ocapi_site}}'
                  client_id: '{{public_client_id}}'
                  code: '{{auth_code}}'
                  code_verifier: '{{PUBLIC_ECOM_CODE_VERIFIER}}'
                  dwsid: '{{dwsid}}'
                  grant_type: session_bridge
                  login_id: '{{ecom_customer_login}}'
                  usid: '{{usid}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /on/demandware.store/Sites-{ocapi_site}-Site/en_US/Login-Show:
    get:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Session Bridge • Ecom User • Public Client
      summary: SFCC - Login-Show, get CSRF
      description: SFCC - Login-Show, get CSRF
      operationId: sfccLoginShowGetCsrf
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: ocapi_site
      in: path
      required: true
      schema:
        type: string
  /on/demandware.store/Sites-{ocapi_site}-Site/en_US/Account-Login:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Session Bridge • Ecom User • Public Client
      summary: SFCC - Account-Login
      description: SFCC - Account-Login
      operationId: sfccAccountLogin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                csrf_token:
                  type: string
                  example: '{{csrf}}'
                loginEmail:
                  type: string
                  example: '{{ecom_customer_login}}'
                loginPassword:
                  type: string
                  example: '{{ecom_customer_pw}}'
            examples:
              SFCC - Account-Login:
                value:
                  csrf_token: '{{csrf}}'
                  loginEmail: '{{ecom_customer_login}}'
                  loginPassword: '{{ecom_customer_pw}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: ocapi_site
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/{tenant}/oauth2/login:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Session Bridge • Ecom User • Public Client
      summary: SLAS - Public Client - Ecom User - Authorize
      description: SLAS - Public Client - Ecom User - Authorize
      operationId: slasPublicClientEcomUserAuthorize
      parameters:
      - name: client_id
        in: query
        schema:
          type: string
          example: '{{public_client_id}}'
      - name: channel_id
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: redirect_uri
        in: query
        schema:
          type: string
          example: '{{redirect_url}}'
      - name: code_challenge
        in: query
        schema:
          type: string
          example: '{{PUBLIC_ECOM_CODE_CHALLENGE}}'
      - name: usid
        in: query
        schema:
          type: string
          example: '{{usid}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/password/reset:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Reset Password of a SLAS Shopper
      summary: SLAS - Get password reset token
      description: SLAS - Get password reset token
      operationId: slasGetPasswordResetToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                callback_uri:
                  type: string
                  example: '{{callback_url}}'
                channel_id:
                  type: string
                  example: '{{ocapi_site}}'
                client_id:
                  type: string
                  example: '{{private_client_id}}'
                code_challenge:
                  type: string
                  example: '{{ECOM_USER_CODE_CHALLENGE}}'
                mode:
                  type: string
                  example: callback
                user_id:
                  type: string
                  example: '{{ecom_customer_login}}'
            examples:
              SLAS - Get password reset token:
                value:
                  callback_uri: '{{callback_url}}'
                  channel_id: '{{ocapi_site}}'
                  client_id: '{{private_client_id}}'
                  code_challenge: '{{ECOM_USER_CODE_CHALLENGE}}'
                  mode: callback
                  user_id: '{{ecom_customer_login}}'
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /shopper/auth/v1/organizations/f_ecom_{{tenant}}/oauth2/password/action:
    post:
      tags:
      - Salesforce Commerce API families
      - SLAS
      - Reset Password of a SLAS Shopper
      summary: SLAS - Reset password
      description: SLAS - Reset password
      operationId: slasResetPassword
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  example: '{{ocapi_site}}'
                client_id:
                  type: string
                  example: '{{private_client_id}}'
                code_verifier:
                  type: string
                  example: '{{ECOM_USER_CODE_VERIFIER}}'
                new_password:
                  type: string
                  example: ''
                pwd_action_token:
                  type: string
                  example: ''
                user_id:
                  type: string
                  example: '{{ecom_customer_login}}'
            examples:
              SLAS - Reset password:
                value:
                  channel_id: '{{ocapi_site}}'
                  client_id: '{{private_client_id}}'
                  code_verifier: '{{ECOM_USER_CODE_VERIFIER}}'
                  new_password: ''
                  pwd_action_token: ''
                  user_id: '{{ecom_customer_login}}'
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets:
    post:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: SCAPI - Create basket
      description: SCAPI - Create basket
      operationId: scapiCreateBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      - name: sandbox
        in: header
        schema:
          type: string
          example: '{{sandbox}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              2c. Create Basket:
                value: {}
              SCAPI - Create basket:
                value:
                  customerInfo:
                    email: '{{CUSTOMER_EMAIL}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Get basket
      description: SCAPI - Get basket
      operationId: scapiGetBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Delete basket
      description: SCAPI - Delete basket
      operationId: scapiDeleteBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update basket
      description: SCAPI - Update basket
      operationId: scapiUpdateBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  example: EUR
            examples:
              SCAPI - Update basket:
                value:
                  currency: EUR
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/actions/merge:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Merge basket
      description: SCAPI - Merge basket
      operationId: scapiMergeBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      - name: createDestinationBasket
        in: query
        schema:
          type: string
          example: 'true'
      - name: productItemMergeMode
        in: query
        schema:
          type: string
          example: sum_quantities
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/billing-address:
    put:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update billing address on basket
      description: SCAPI - Update billing address on basket
      operationId: scapiUpdateBillingAddressOnBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address1:
                  type: string
                  example: 415 Mission St
                city:
                  type: string
                  example: San Francisco
                countryCode:
                  type: string
                  example: US
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                postalCode:
                  type: string
                  example: '94105'
                stateCode:
                  type: string
                  example: CA
            examples:
              SCAPI - Update billing address on basket:
                value:
                  address1: 415 Mission St
                  city: San Francisco
                  countryCode: US
                  firstName: John
                  lastName: Doe
                  postalCode: '94105'
                  stateCode: CA
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/customer:
    put:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update customer on basket
      description: SCAPI - Update customer on basket
      operationId: scapiUpdateCustomerOnBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: shopperUpdate@salesforce-test.com
            examples:
              SCAPI - Update customer on basket:
                value:
                  email: shopperUpdate@salesforce-test.com
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/coupons:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Add coupon to basket
      description: SCAPI - Add coupon to basket
      operationId: scapiAddCouponToBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 10_percent_off
            examples:
              SCAPI - Add coupon to basket:
                value:
                  code: 10_percent_off
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/coupons/test-couponItemId:
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Remove coupon from basket
      description: SCAPI - Remove coupon from basket
      operationId: scapiRemoveCouponFromBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/gift-certificate-items:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Add gift certificate item to basket
      description: SCAPI - Add gift certificate item to basket
      operationId: scapiAddGiftCertificateItemToBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 1
                recipientEmail:
                  type: string
                  example: miller@salesforce-test.com
                shipmentId:
                  type: string
                  example: me
            examples:
              SCAPI - Add gift certificate item to basket:
                value:
                  amount: 1
                  recipientEmail: miller@salesforce-test.com
                  shipmentId: me
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  ? /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/gift-certificate-items/test-giftCertificateItemId
  : delete:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Remove gift certificate item from basket
      description: SCAPI - Remove gift certificate item from basket
      operationId: scapiRemoveGiftCertificateItemFromBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/items:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Add item to basket
      description: SCAPI - Add item to basket
      operationId: scapiAddItemToBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: string
                    example: 750518699592M
                  quantity:
                    type: number
                    example: 1
              example:
              - productId: 750518699592M
                quantity: 1
            examples:
              SCAPI - Add item to basket:
                value:
                - productId: 750518699592M
                  quantity: 1
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/items/test-itemId:
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Remove item from basket
      description: SCAPI - Remove item from basket
      operationId: scapiRemoveItemFromBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update item in basket
      description: SCAPI - Update item in basket
      operationId: scapiUpdateItemInBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  quantity:
                    type: number
                    example: 2
              example:
              - quantity: 2
            examples:
              SCAPI - Update item in basket:
                value:
                - quantity: 2
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/payment-instruments:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Add CREDIT_CARD payment instrument to basket
      description: SCAPI - Add CREDIT_CARD payment instrument to basket
      operationId: scapiAddCreditCardPaymentInstrumentToBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 9.99
                paymentMethodId:
                  type: string
                  example: TEST_PAYPAL_PAYMENT_METHOD
            examples:
              SCAPI - Add CREDIT_CARD payment instrument to basket:
                value:
                  amount: 9.99
                  paymentCard:
                    cardType: Visa
                    expirationMonth: 7
                    expirationYear: 1990
                    holder: Miller
                    issueNumber: i117
                    maskedNumber: '*********1234'
                    validFromMonth: 8
                    validFromYear: 2007
                  paymentMethodId: CREDIT_CARD
              SCAPI - Add GIFT_CERTIFICATE payment instrument to basket:
                value:
                  amount: 9.99
                  giftCertificateCode: test-giftCertificateCode
                  paymentMethodId: GIFT_CERTIFICATE
              SCAPI - Add other payment instrument to basket:
                value:
                  amount: 9.99
                  paymentMethodId: TEST_PAYPAL_PAYMENT_METHOD
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/payment-instruments/test-paymentInstrumentId:
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Remove payment instrument from basket
      description: SCAPI - Remove payment instrument from basket
      operationId: scapiRemovePaymentInstrumentFromBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update payment instrument
      description: SCAPI - Update payment instrument
      operationId: scapiUpdatePaymentInstrument
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 10.34
                paymentMethodId:
                  type: string
                  example: CREDIT_CARD
            examples:
              SCAPI - Update payment instrument:
                value:
                  amount: 10.34
                  paymentMethodId: CREDIT_CARD
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/shipments:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Create shipment for basket
      description: SCAPI - Create shipment for basket
      operationId: scapiCreateShipmentForBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipmentId:
                  type: string
                  example: me2
                shippingAddress:
                  type: object
                  properties:
                    address1:
                      type: string
                      example: 415 Mission St
                    city:
                      type: string
                      example: Jena
                    countryCode:
                      type: string
                      example: US
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    postalCode:
                      type: string
                      example: '94105'
                    stateCode:
                      type: string
                      example: CA
                shippingMethod:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '001'
            examples:
              SCAPI - Create shipment for basket:
                value:
                  shipmentId: me2
                  shippingAddress:
                    address1: 415 Mission St
                    city: Jena
                    countryCode: US
                    firstName: John
                    lastName: Doe
                    postalCode: '94105'
                    stateCode: CA
                  shippingMethod:
                    id: '001'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/shipments/test-shpmentId:
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Remove shipment from basket
      description: SCAPI - Remove shipment from basket
      operationId: scapiRemoveShipmentFromBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update shipment
      description: SCAPI - Update shipment
      operationId: scapiUpdateShipment
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipmentId:
                  type: string
                  example: me
                shipmentNo:
                  type: string
                  example: ignored shipment no
                shippingAddress:
                  type: object
                  properties:
                    address1:
                      type: string
                      example: 415 Mission St
                    city:
                      type: string
                      example: San Francisco
                    countryCode:
                      type: string
                      example: US
                    firstName:
                      type: string
                      example: Jane
                    lastName:
                      type: string
                      example: Doe
                    postalCode:
                      type: string
                      example: '94105'
                    stateCode:
                      type: string
                      example: CA
                shippingMethod:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '003'
            examples:
              SCAPI - Update shipment:
                value:
                  shipmentId: me
                  shipmentNo: ignored shipment no
                  shippingAddress:
                    address1: 415 Mission St
                    city: San Francisco
                    countryCode: US
                    firstName: Jane
                    lastName: Doe
                    postalCode: '94105'
                    stateCode: CA
                  shippingMethod:
                    id: '003'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/shipments/test-shpmentId/shipping-address:
    put:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update shipping address on shipment
      description: SCAPI - Update shipping address on shipment
      operationId: scapiUpdateShippingAddressOnShipment
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address1:
                  type: string
                  example: 111 President Street
                city:
                  type: string
                  example: Washington D.C.
                countryCode:
                  type: string
                  example: US
                firstName:
                  type: string
                  example: Jane
                lastName:
                  type: string
                  example: Doe
                postalCode:
                  type: string
                  example: '12345'
                stateCode:
                  type: string
                  example: WA
            examples:
              SCAPI - Update shipping address on shipment:
                value:
                  address1: 111 President Street
                  city: Washington D.C.
                  countryCode: US
                  firstName: Jane
                  lastName: Doe
                  postalCode: '12345'
                  stateCode: WA
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/shipments/test-shpmentId/shipping-method:
    put:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Update shipping method on shipment
      description: SCAPI - Update shipping method on shipment
      operationId: scapiUpdateShippingMethodOnShipment
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: test-shippingMethodId
            examples:
              SCAPI - Update shipping method on shipment:
                value:
                  id: test-shippingMethodId
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basket_id}/shipments/test-shpmentId/shipping-methods:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-baskets
      summary: SCAPI - Get shipping methods for shipment
      description: SCAPI - Get shipping methods for shipment
      operationId: scapiGetShippingMethodsForShipment
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basket_id
      in: path
      required: true
      schema:
        type: string
  /shopper/shopper-context/v1/organizations/f_ecom_{{tenant}}/shopper-context/test-shoppersUniqueIdentifier:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-context
      summary: SCAPI - Get shopper context
      description: SCAPI - Get shopper context
      operationId: scapiGetShopperContext
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customQualifiers:
                  type: object
                  properties:
                    authenticated:
                      type: string
                      example: no
                    city:
                      type: string
                      example: SLC
                    country:
                      type: string
                      example: US
                    currency:
                      type: string
                      example: USD
                    customergroupId:
                      type: string
                      example: ''
                    deviceType:
                      type: string
                      example: mobile
                    ipAddress:
                      type: string
                      example: 189.0.0.0
                    operatingSystem:
                      type: string
                      example: Android
                    referrerHost:
                      type: string
                      example: google
                    referrerURL:
                      type: string
                      example: https://www.google.com
                    region:
                      type: string
                      example: West
                    sourceCodeGroup:
                      type: string
                      example: Sale
                    zipCode:
                      type: string
                      example: '11111'
                effectiveDateTime:
                  type: string
                  example: 2020-12-20T00:00:00Z
            examples:
              SCAPI - Get shopper context:
                value:
                  customQualifiers:
                    authenticated: no
                    city: SLC
                    country: US
                    currency: USD
                    customergroupId: ''
                    deviceType: mobile
                    ipAddress: 189.0.0.0
                    operatingSystem: Android
                    referrerHost: google
                    referrerURL: https://www.google.com
                    region: West
                    sourceCodeGroup: Sale
                    zipCode: '11111'
                  effectiveDateTime: 2020-12-20T00:00:00Z
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    put:
      tags:
      - Salesforce Commerce API families
      - shopper-context
      summary: SCAPI - Create shopper context
      description: SCAPI - Create shopper context
      operationId: scapiCreateShopperContext
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customQualifiers:
                  type: object
                  properties:
                    authenticated:
                      type: string
                      example: no
                    city:
                      type: string
                      example: SLC
                    country:
                      type: string
                      example: US
                    currency:
                      type: string
                      example: USD
                    customergroupId:
                      type: string
                      example: ''
                    deviceType:
                      type: string
                      example: mobile
                    ipAddress:
                      type: string
                      example: 189.0.0.0
                    operatingSystem:
                      type: string
                      example: Android
                    referrerHost:
                      type: string
                      example: google
                    referrerURL:
                      type: string
                      example: https://www.google.com
                    region:
                      type: string
                      example: West
                    sourceCodeGroup:
                      type: string
                      example: Sale
                    zipCode:
                      type: string
                      example: '11111'
                effectiveDateTime:
                  type: string
                  example: 2020-12-20T00:00:00Z
            examples:
              SCAPI - Create shopper context:
                value:
                  customQualifiers:
                    authenticated: no
                    city: SLC
                    country: US
                    currency: USD
                    customergroupId: ''
                    deviceType: mobile
                    ipAddress: 189.0.0.0
                    operatingSystem: Android
                    referrerHost: google
                    referrerURL: https://www.google.com
                    region: West
                    sourceCodeGroup: Sale
                    zipCode: '11111'
                  effectiveDateTime: 2020-12-20T00:00:00Z
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-context
      summary: SCAPI - Delete shopper context
      description: SCAPI - Delete shopper context
      operationId: scapiDeleteShopperContext
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-context
      summary: SCAPI - Update shopper context
      description: SCAPI - Update shopper context
      operationId: scapiUpdateShopperContext
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customQualifiers:
                  type: object
                  properties:
                    authenticated:
                      type: string
                      example: no
                    city:
                      type: string
                      example: SLC
                    country:
                      type: string
                      example: US
                    currency:
                      type: string
                      example: USD
                    customergroupId:
                      type: string
                      example: ''
                    deviceType:
                      type: string
                      example: mobile
                    ipAddress:
                      type: string
                      example: 189.0.0.0
                    operatingSystem:
                      type: string
                      example: Android
                    referrerHost:
                      type: string
                      example: google
                    referrerURL:
                      type: string
                      example: https://www.google.com
                    region:
                      type: string
                      example: West
                    sourceCodeGroup:
                      type: string
                      example: Sale
                    zipCode:
                      type: string
                      example: '11111'
                effectiveDateTime:
                  type: string
                  example: 2020-12-20T00:00:00Z
            examples:
              SCAPI - Update shopper context:
                value:
                  customQualifiers:
                    authenticated: no
                    city: SLC
                    country: US
                    currency: USD
                    customergroupId: ''
                    deviceType: mobile
                    ipAddress: 189.0.0.0
                    operatingSystem: Android
                    referrerHost: google
                    referrerURL: https://www.google.com
                    region: West
                    sourceCodeGroup: Sale
                    zipCode: '11111'
                  effectiveDateTime: 2020-12-20T00:00:00Z
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Register new customer
      description: SCAPI - Register new customer
      operationId: scapiRegisterNewCustomer
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    email:
                      type: string
                      example: jsmith@test.com
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Smith
                    login:
                      type: string
                      example: jsmith
                password:
                  type: string
                  example: 12345!aBcD
            examples:
              SCAPI - Register new customer:
                value:
                  customer:
                    email: jsmith@test.com
                    firstName: John
                    lastName: Smith
                    login: jsmith
                  password: 12345!aBcD
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/password/actions/create-reset-token:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get reset password token
      description: SCAPI - Get reset password token
      operationId: scapiGetResetPasswordToken
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  example: janedoe@test.com
            examples:
              SCAPI - Get reset password token:
                value:
                  login: janedoe@test.com
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/password/actions/reset:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Reset customer password
      description: SCAPI - Reset customer password
      operationId: scapiResetCustomerPassword
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  example: janedoe@test.com
                newPassword:
                  type: string
                  example: p@assword2
                resetToken:
                  type: string
                  example: R1e2s3e4t5T6o7k8e9n0
            examples:
              SCAPI - Reset customer password:
                value:
                  login: janedoe@test.com
                  newPassword: p@assword2
                  resetToken: R1e2s3e4t5T6o7k8e9n0
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer
      description: SCAPI - Get customer
      operationId: scapiGetCustomer
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Update customer
      description: SCAPI - Update customer
      operationId: scapiUpdateCustomer
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    value:
                      type: object
                      properties:
                        customerNo:
                          type: string
                          example: '00010009'
                        email:
                          type: string
                          example: jwild@yourstore.com
                        fax:
                          type: string
                          example: +49 03641 78393 346
                        firstName:
                          type: string
                          example: John
                        lastName:
                          type: string
                          example: Wild
            examples:
              SCAPI - Update customer:
                value:
                  customer:
                    value:
                      customerNo: '00010009'
                      email: jwild@yourstore.com
                      fax: +49 03641 78393 346
                      firstName: John
                      lastName: Wild
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/addresses:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Create customer address
      description: SCAPI - Create customer address
      operationId: scapiCreateCustomerAddress
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address1:
                  type: string
                  example: 5 Wall St
                address2:
                  type: string
                  example: 24 Presidential Way
                addressId:
                  type: string
                  example: home_address
                city:
                  type: string
                  example: Burlington
                companyName:
                  type: string
                  example: Salesforce Commerce Cloud
                countryCode:
                  type: string
                  example: US
                firstName:
                  type: string
                  example: John
                jobTitle:
                  type: string
                  example: Developer
                lastName:
                  type: string
                  example: Murphy
                phone:
                  type: string
                  example: 408-555-1212
                postBox:
                  type: string
                  example: 12a
                postalCode:
                  type: string
                  example: '01805'
                preferred:
                  type: boolean
                  example: false
                salutation:
                  type: string
                  example: Mr.
                secondName:
                  type: string
                  example: Jim
                stateCode:
                  type: string
                  example: MA
                title:
                  type: string
                  example: Dr.
            examples:
              SCAPI - Create customer address:
                value:
                  address1: 5 Wall St
                  address2: 24 Presidential Way
                  addressId: home_address
                  city: Burlington
                  companyName: Salesforce Commerce Cloud
                  countryCode: US
                  firstName: John
                  jobTitle: Developer
                  lastName: Murphy
                  phone: 408-555-1212
                  postBox: 12a
                  postalCode: '01805'
                  preferred: false
                  salutation: Mr.
                  secondName: Jim
                  stateCode: MA
                  title: Dr.
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/addresses/test-addressId:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer address
      description: SCAPI - Get customer address
      operationId: scapiGetCustomerAddress
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Remove customer address
      description: SCAPI - Remove customer address
      operationId: scapiRemoveCustomerAddress
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Update customer address
      description: SCAPI - Update customer address
      operationId: scapiUpdateCustomerAddress
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address1:
                  type: string
                  example: 5 Wall St
                address2:
                  type: string
                  example: 24 Presidential Way
                addressId:
                  type: string
                  example: home_address
                city:
                  type: string
                  example: Burlington
                companyName:
                  type: string
                  example: Salesforce Commerce Cloud
                countryCode:
                  type: string
                  example: US
                firstName:
                  type: string
                  example: John
                jobTitle:
                  type: string
                  example: Developer
                lastName:
                  type: string
                  example: Murphy
                phone:
                  type: string
                  example: 408-555-1212
                postBox:
                  type: string
                  example: 12a
                postalCode:
                  type: string
                  example: '01805'
                preferred:
                  type: boolean
                  example: false
                salutation:
                  type: string
                  example: Mr.
                secondName:
                  type: string
                  example: Jim
                stateCode:
                  type: string
                  example: MA
                title:
                  type: string
                  example: Dr.
            examples:
              SCAPI - Update customer address:
                value:
                  address1: 5 Wall St
                  address2: 24 Presidential Way
                  addressId: home_address
                  city: Burlington
                  companyName: Salesforce Commerce Cloud
                  countryCode: US
                  firstName: John
                  jobTitle: Developer
                  lastName: Murphy
                  phone: 408-555-1212
                  postBox: 12a
                  postalCode: '01805'
                  preferred: false
                  salutation: Mr.
                  secondName: Jim
                  stateCode: MA
                  title: Dr.
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/baskets:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer baskets
      description: SCAPI - Get customer baskets
      operationId: scapiGetCustomerBaskets
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/orders:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer orders
      description: SCAPI - Get customer orders
      operationId: scapiGetCustomerOrders
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/password:
    put:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Update customer password
      description: SCAPI - Update customer password
      operationId: scapiUpdateCustomerPassword
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  example: 01dpass
                password:
                  type: string
                  example: newpass
            examples:
              SCAPI - Update customer password:
                value:
                  currentPassword: 01dpass
                  password: newpass
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/payment-instruments:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Create CREDIT_CARD customer payment instrument
      description: SCAPI - Create CREDIT_CARD customer payment instrument
      operationId: scapiCreateCreditCardCustomerPaymentInstrument
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethodId:
                  type: string
                  example: OTHER_PAYMENT_METHOD
            examples:
              SCAPI - Create CREDIT_CARD customer payment instrument:
                value:
                  paymentCard:
                    cardType: MasterCard
                    expirationMonth: 7
                    expirationYear: 2027
                    holder: John Smith
                    issueNumber: i117
                    number: '1234567'
                    validFromMonth: 8
                    validFromYear: 2007
                  paymentMethodId: CREDIT_CARD
              SCAPI - Create GIFT_CERTIFICATE customer payment instrument:
                value:
                  giftCertificateCode: gift_code7
                  paymentMethodId: GIFT_CERTIFICATE
              SCAPI - Create other customer payment instrument:
                value:
                  paymentMethodId: OTHER_PAYMENT_METHOD
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  ? /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/payment-instruments/test-paymentInstrumentId
  : get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer payment instrument
      description: SCAPI - Get customer payment instrument
      operationId: scapiGetCustomerPaymentInstrument
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Delete customer payment instrument
      description: SCAPI - Delete customer payment instrument
      operationId: scapiDeleteCustomerPaymentInstrument
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/product-lists:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer product lists
      description: SCAPI - Get customer product lists
      operationId: scapiGetCustomerProductLists
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Create customer product list
      description: SCAPI - Create customer product list
      operationId: scapiCreateCustomerProductList
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coRegistrant:
                  type: object
                  properties:
                    email:
                      type: string
                      example: janedoe@example.com
                    firstName:
                      type: string
                      example: Jane
                    lastName:
                      type: string
                      example: Doe
                    role:
                      type: string
                      example: Bride
                creationDate:
                  type: string
                  example: 2019-10-18T22:06:28.965Z
                description:
                  type: string
                  example: our productlist
                event:
                  type: object
                  properties:
                    city:
                      type: string
                      example: Washington
                    country:
                      type: string
                      example: US
                    date:
                      type: string
                      example: 2019-09-05T17:12:56.670Z
                    state:
                      type: string
                      example: DC
                    type:
                      type: string
                      example: Wedding
                id:
                  type: string
                  example: bcedkiWbxCM2MaaadkRhB2IBzM
                lastModified:
                  type: string
                  example: 2019-10-18T22:06:28.971Z
                name:
                  type: string
                  example: OurProductList
                public:
                  type: boolean
                  example: true
                registrant:
                  type: object
                  properties:
                    email:
                      type: string
                      example: johndoe@example.com
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    role:
                      type: string
                      example: Groom
                type:
                  type: string
                  example: wish_list
            examples:
              SCAPI - Create customer product list:
                value:
                  coRegistrant:
                    email: janedoe@example.com
                    firstName: Jane
                    lastName: Doe
                    role: Bride
                  creationDate: 2019-10-18T22:06:28.965Z
                  description: our productlist
                  event:
                    city: Washington
                    country: US
                    date: 2019-09-05T17:12:56.670Z
                    state: DC
                    type: Wedding
                  id: bcedkiWbxCM2MaaadkRhB2IBzM
                  lastModified: 2019-10-18T22:06:28.971Z
                  name: OurProductList
                  public: true
                  registrant:
                    email: johndoe@example.com
                    firstName: John
                    lastName: Doe
                    role: Groom
                  type: wish_list
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/product-lists/bcedkiWbxCM2MaaadkRhB2IBzM:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer product list
      description: SCAPI - Get customer product list
      operationId: scapiGetCustomerProductList
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Delete customer product list
      description: SCAPI - Delete customer product list
      operationId: scapiDeleteCustomerProductList
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Update customer product list
      description: SCAPI - Update customer product list
      operationId: scapiUpdateCustomerProductList
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: productlist2
            examples:
              SCAPI - Update customer product list:
                value:
                  description: productlist2
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  ? /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/product-lists/bcedkiWbxCM2MaaadkRhB2IBzM/items
  : post:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Create customer product list item
      description: SCAPI - Create customer product list item
      operationId: scapiCreateCustomerProductListItem
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 1d447daa4d25805fd682bd4ce1
                priority:
                  type: number
                  example: 4
                productId:
                  type: string
                  example: RedDress1
                public:
                  type: boolean
                  example: true
                purchasedQuantity:
                  type: number
                  example: 0
                quantity:
                  type: number
                  example: 2
                type:
                  type: string
                  example: product
            examples:
              SCAPI - Create customer product list item:
                value:
                  id: 1d447daa4d25805fd682bd4ce1
                  priority: 4
                  productId: RedDress1
                  public: true
                  purchasedQuantity: 0
                  quantity: 2
                  type: product
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  ? /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customer_id}/product-lists/bcedkiWbxCM2MaaadkRhB2IBzM/items/1d447daa4d25805fd682bd4ce1
  : get:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Get customer product list item
      description: SCAPI - Get customer product list item
      operationId: scapiGetCustomerProductListItem
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Delete customer product list item
      description: SCAPI - Delete customer product list item
      operationId: scapiDeleteCustomerProductListItem
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-customers
      summary: SCAPI - Update customer product list item
      description: SCAPI - Update customer product list item
      operationId: scapiUpdateCustomerProductListItem
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: '1'
                priority:
                  type: number
                  example: 3
                productId:
                  type: string
                  example: RedDress1
                public:
                  type: boolean
                  example: false
                purchasedQuantity:
                  type: number
                  example: 0
                quantity:
                  type: number
                  example: 4
                type:
                  type: string
                  example: product
            examples:
              SCAPI - Update customer product list item:
                value:
                  id: '1'
                  priority: 3
                  productId: RedDress1
                  public: false
                  purchasedQuantity: 0
                  quantity: 4
                  type: product
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customer_id
      in: path
      required: true
      schema:
        type: string
  /experience/shopper-experience/v1/organizations/f_ecom_{{tenant}}/pages:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-experience (turn off storefront pw protection)
      summary: SCAPI - Get Pages (PLP)
      description: SCAPI - Get Pages (PLP)
      operationId: scapiGetPagesPlp
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: aspectTypeId
        in: query
        schema:
          type: string
          example: plp
      - name: categoryId
        in: query
        schema:
          type: string
          example: mens
      - name: aspectAttributes
        in: query
        schema:
          type: string
          example: '{"category":"mens"}'
      - name: locale
        in: query
        schema:
          type: string
          example: en_US
      - name: parameters
        in: query
        schema:
          type: string
          example: refine=color,size;currency=USD;showNavigation=false
      - name: productId
        in: query
        schema:
          type: string
          example: 750518699592M
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /experience/shopper-experience/v1/organizations/f_ecom_{{tenant}}/pages/homepage-example:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-experience (turn off storefront pw protection)
      summary: SCAPI - Get Page
      description: SCAPI - Get Page
      operationId: scapiGetPage
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: locale
        in: query
        schema:
          type: string
          example: en_US
      - name: parameters
        in: query
        schema:
          type: string
          example: refine=color,size;currency=USD;showNavigation=false
      - name: aspectAttributes
        in: query
        schema:
          type: string
          example: '{"product":"iphone11","breadcrumbCategory":"home-clearance"}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-orders/v1/organizations/f_ecom_{{tenant}}/orders:
    post:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: SCAPI - Create order
      description: SCAPI - Create order
      operationId: scapiCreateOrder
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                basketId:
                  type: string
                  example: '{{basketId}}'
            examples:
              3a. CREATE ORDER:
                value:
                  basketId: '{{basketId}}'
              SCAPI - Create order:
                value:
                  basketId: '{{basket_id}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-orders/v1/organizations/f_ecom_{{tenant}}/orders/test-orderId:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-orders
      summary: SCAPI - Get order
      description: SCAPI - Get order
      operationId: scapiGetOrder
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-orders/v1/organizations/f_ecom_{{tenant}}/orders/test-orderId/payment-instruments:
    post:
      tags:
      - Salesforce Commerce API families
      - shopper-orders
      summary: SCAPI - Create CREDIT_CARD payment instrument for order
      description: SCAPI - Create CREDIT_CARD payment instrument for order
      operationId: scapiCreateCreditCardPaymentInstrumentForOrder
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 700
                giftCertificateCode:
                  type: string
                  example: gift_code7
                paymentMethodId:
                  type: string
                  example: GIFT_CERTIFICATE
            examples:
              SCAPI - Create CREDIT_CARD payment instrument for order:
                value:
                  amount: 700
                  paymentCard:
                    cardType: Visa
                    expirationMonth: 7
                    expirationYear: 1990
                    holder: Miller
                    issueNumber: i117
                    maskedNumber: '************4567'
                    validFromMonth: 8
                    validFromYear: 2007
                  paymentMethodId: CREDIT_CARD
              SCAPI - Create GIFT_CERTIFICATE payment instrument for order:
                value:
                  amount: 700
                  giftCertificateCode: gift_code7
                  paymentMethodId: GIFT_CERTIFICATE
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-orders/v1/organizations/f_ecom_{{tenant}}/orders/test-orderId/payment-instruments/test-paymentInstrumentId:
    delete:
      tags:
      - Salesforce Commerce API families
      - shopper-orders
      summary: SCAPI - Remove payment instrument from order
      description: SCAPI - Remove payment instrument from order
      operationId: scapiRemovePaymentInstrumentFromOrder
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    patch:
      tags:
      - Salesforce Commerce API families
      - shopper-orders
      summary: SCAPI - Update payment instrument of order
      description: SCAPI - Update payment instrument of order
      operationId: scapiUpdatePaymentInstrumentOfOrder
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 2
                paymentCard:
                  type: object
                  properties:
                    cardType:
                      type: string
                      example: Visa
                    maskedNumber:
                      type: string
                      example: '****-****-****-4567'
                paymentMethodId:
                  type: string
                  example: CREDIT_CARD
            examples:
              SCAPI - Update payment instrument of order:
                value:
                  amount: 2
                  paymentCard:
                    cardType: Visa
                    maskedNumber: '****-****-****-4567'
                  paymentMethodId: CREDIT_CARD
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-orders/v1/organizations/f_ecom_{{tenant}}/orders/test-orderId/payment-methods:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-orders
      summary: SCAPI - Get payment methods for order
      description: SCAPI - Get payment methods for order
      operationId: scapiGetPaymentMethodsForOrder
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /product/shopper-products/v1/organizations/f_ecom_{{tenant}}/products:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: SCAPI - Get products
      description: SCAPI - Get products
      operationId: scapiGetProducts
      parameters:
      - name: ids
        in: query
        schema:
          type: string
          example: test-productId1,test-productId2
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /product/shopper-products/v1/organizations/f_ecom_{{tenant}}/products/test-productId:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-products
      summary: SCAPI - Get product
      description: SCAPI - Get product
      operationId: scapiGetProduct
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /product/shopper-products/v1/organizations/f_ecom_{{tenant}}/categories:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-products
      summary: SCAPI - Get categories
      description: SCAPI - Get categories
      operationId: scapiGetCategories
      parameters:
      - name: ids
        in: query
        schema:
          type: string
          example: test-categoryId1,test-categoryId2
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /product/shopper-products/v1/organizations/f_ecom_{{tenant}}/categories/test-categoryId:
    get:
      tags:
      - Salesforce Commerce API families
      - shopper-products
      summary: SCAPI - Get category
      description: SCAPI - Get category
      operationId: scapiGetCategory
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /search/shopper-search/v1/organizations/f_ecom_{{tenant}}/product-search:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: SCAPI - Perform product search
      description: SCAPI - Perform product search
      operationId: scapiPerformProductSearch
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: q
        in: query
        schema:
          type: string
          example: shirt
      - name: refine
        in: query
        schema:
          type: string
          example: price=(0..100)
      - name: expand
        in: query
        schema:
          type: string
          example: (availability,prices)
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /search/shopper-search/v1/organizations/f_ecom_{{tenant}}/search-suggestions:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: SCAPI - Get search suggestions
      description: SCAPI - Get search suggestions
      operationId: scapiGetSearchSuggestions
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: '{{ocapi_site}}'
      - name: q
        in: query
        schema:
          type: string
          example: son
      responses:
        '200':
          description: ''
      security:
      - bearerAuth: []
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /customer/shopper-customers/v1/organizations/f_ecom_{{tenant}}/customers/{customerId}:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: Registered customer details
      description: Registered customer details
      operationId: registeredCustomerDetails
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: credentials
            examples:
              Registered customer details:
                value:
                  type: credentials
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: customerId
      in: path
      required: true
      schema:
        type: string
  /pricing/shopper-promotions/v1/organizations/f_ecom_{{tenant}}/promotions:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 1d. Promotion Details
      description: 1d. Promotion Details
      operationId: 1dPromotionDetails
      parameters:
      - name: ids
        in: query
        schema:
          type: string
          example: '{{promoId}}'
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basketId}:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2c-2. Get Basket
      description: 2c-2. Get Basket
      operationId: 2c2GetBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      - name: sandbox
        in: header
        schema:
          type: string
          example: '{{sandbox}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              2c-2. Get Basket:
                value: {}
      responses:
        '200':
          description: ''
    delete:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2c-1. Delete Baskets (if needed)
      description: 2c-1. Delete Baskets (if needed)
      operationId: 2c1DeleteBasketsIfNeeded
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      - name: sandbox
        in: header
        schema:
          type: string
          example: '{{sandbox}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              2c-1. Delete Baskets (if needed):
                value: {}
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basketId
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basketId}/items:
    post:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2d. Add Item To Basket
      description: 2d. Add Item To Basket
      operationId: 2dAddItemToBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: string
                    example: '{{productId}}'
                  quantity:
                    type: number
                    example: 1
              example:
              - productId: '{{productId}}'
                quantity: 1
            examples:
              2d. Add Item To Basket:
                value:
                - productId: '{{productId}}'
                  quantity: 1
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basketId
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basketId}/billing-address:
    put:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2d-1. Add Billing Address
      description: 2d-1. Add Billing Address
      operationId: 2d1AddBillingAddress
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address1:
                  type: string
                  example: 104 Presidential Way
                city:
                  type: string
                  example: Woburn
                countryCode:
                  type: string
                  example: US
                firstName:
                  type: string
                  example: Stephanie
                lastName:
                  type: string
                  example: Miller
                postalCode:
                  type: string
                  example: '01801'
                stateCode:
                  type: string
                  example: MA
            examples:
              2d-1. Add Billing Address:
                value:
                  address1: 104 Presidential Way
                  city: Woburn
                  countryCode: US
                  firstName: Stephanie
                  lastName: Miller
                  postalCode: '01801'
                  stateCode: MA
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basketId
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basketId}/customer:
    put:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2d-2. Add Customer Info
      description: 2d-2. Add Customer Info
      operationId: 2d2AddCustomerInfo
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: clavery@salesforce.com
            examples:
              2d-2. Add Customer Info:
                value:
                  email: clavery@salesforce.com
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basketId
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basketId}/shipments/me:
    patch:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2e. Update Shipment for Basket
      description: 2e. Update Shipment for Basket
      operationId: 2eUpdateShipmentForBasket
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingAddress:
                  type: object
                  properties:
                    address1:
                      type: string
                      example: 18911 marathon Rd
                    city:
                      type: string
                      example: Austin
                    countryCode:
                      type: string
                      example: US
                    firstName:
                      type: string
                      example: Terrance
                    lastName:
                      type: string
                      example: Grahn
                    postalCode:
                      type: string
                      example: '78758'
                    stateCode:
                      type: string
                      example: TX
                shippingMethod:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '001'
            examples:
              2e. Update Shipment for Basket:
                value:
                  shippingAddress:
                    address1: 18911 marathon Rd
                    city: Austin
                    countryCode: US
                    firstName: Terrance
                    lastName: Grahn
                    postalCode: '78758'
                    stateCode: TX
                  shippingMethod:
                    id: '001'
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basketId
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-baskets/v1/organizations/f_ecom_{{tenant}}/baskets/{basketId}/payment-instruments:
    post:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: 2f. Add Payment
      description: 2f. Add Payment
      operationId: 2fAddPayment
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentCard:
                  type: object
                  properties:
                    cardType:
                      type: string
                      example: Visa
                paymentMethodId:
                  type: string
                  example: CREDIT_CARD
            examples:
              2f. Add Payment:
                value:
                  paymentCard:
                    cardType: Visa
                  paymentMethodId: CREDIT_CARD
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: basketId
      in: path
      required: true
      schema:
        type: string
  /checkout/shopper-orders/v1/organizations/f_ecom_{{tenant}}/orders/{orderNo}:
    get:
      tags:
      - Salesforce Commerce APIs - end-to-end use cases and samples
      - SCAPI End2End Shopper Journey
      summary: Get Orders
      description: Get Orders
      operationId: getOrders
      parameters:
      - name: siteId
        in: query
        schema:
          type: string
          example: RefArch
      responses:
        '200':
          description: ''
    parameters:
    - name: tenant
      in: path
      required: true
      schema:
        type: string
    - name: orderNo
      in: path
      required: true
      schema:
        type: string
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
tags:
- name: Salesforce Commerce API families
- name: SLAS Admin
- name: SLAS
- name: Guest User • Private Client
- name: Guest User • Public Client
- name: Ecom User • Private Client
- name: Ecom User • Public Client
- name: Passwordless Login
- name: Trusted Agent on Behalf (TAOB)
  description: |-
    Perform "SLAS - Public Client - Get trusted agent authorization code" call, authorize in Account Manager and fetch the code from the URL of the callback URL.

    Use this ocde as the bearer token for the call "SLAS - Public client - Request trusted agent access token".
- name: Trusted System on Behalf (TSOB) - for external trusted system
  description: |-
    This folder contains requests to get a "Trusted System on Behalf" (TSOB) token.

    You can get such a token for external and internal trusted systems.
- name: Session Bridge • Guest User • Private Client
- name: Session Bridge • Guest User • Public Client
- name: Session Bridge • Ecom User • Private Client
- name: Session Bridge • Ecom User • Public Client
- name: Reset Password of a SLAS Shopper
- name: shopper-baskets
- name: shopper-context
  description: |-
    As of September 22 2022, these API endpoints are in Beta status!

    Please have a look at [https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-context?meta=Summary](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-context?meta=Summary) to get the latest status of the API endpoints and to understand how the overall use-cases are working.
- name: shopper-customers
- name: shopper-experience (turn off storefront pw protection)
- name: shopper-orders
- name: shopper-products
- name: shopper-search
- name: Salesforce Commerce APIs - end-to-end use cases and samples
- name: SCAPI End2End Shopper Journey
  description: "# Shopper Login and API Access Service (SLAS) Use Case Scenarios Using Postman\n\nThe SCAPI end-to-end shopper journey utilizes selected API endpoint calls from different SCAPI domains. Goal is to show in a sample how those different endpoints can work together to form a typical shopper use case.\n\nThe collection connects to a commerce B2c trial environment to retrieve meaningful results as responses.\n\n**⚠️ Disclaimers:**\n\n- This collection is provided as-is. It's not officially supported by Salesforce or covered by SLAs.\n- API documentation is not provided with the collection. Please refer to the [official documentation](https://developer.commercecloud.com/s/api-details/a003k00000VzoEyAAJ/commerce-cloud-developer-centershopperloginandapiaccessadmin).\n    \n\nℹ️ Report issues and ask questions [here](https://github.com/forcedotcom/postman-commerce-cloud-apis/issues).\n\n## Get started\n\nFollow [this startup guide](https://github.com/forcedotcom/postman-commerce-cloud-apis) to get started with the collection."
- name: SLAS Use Cases - (wip)

