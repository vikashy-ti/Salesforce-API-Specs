{
  "openapi": "3.0.3",
  "info": {
    "title": "Salesforce Data Cloud Connect APIs",
    "description": "Data Cloud Connect REST API creates business value by organizing and simplifying interactions with Data Cloud services. It is the preferred platform for customers to construct solutions on top of Data Cloud, offering uniform implementation and testing practices.\n\nThe Data Cloud Connect API Postman Collection allows users to make the same API calls directly from Salesforceâ€™s Connect interface, providing seamless integration of data across systems. This integration allows for these APIs to be called in flows, as well.\n\nCalling APIs directly using the non-Connect method typically offers the best performance. However, there are use cases where that doesn't make sense. Therefore, calling Connect APIs directly does not conform to the same SLAs that calling the API directly offers. Refer to the [documentation for more details](https://developer.salesforce.com/docs/atlas.en-us.c360a_api.meta/c360a_api/c360a_api_quick_start.htm).\n\n## Get Started\n\nFollow the [instructions in the documentation](https://developer.salesforce.com/docs/platform/connectapi/guide) to get started with the collection.",
    "version": "1.0.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "{{dne_cdpInstanceUrl}}"
    },
    {
      "url": "{{dne_cdpInstanceUrl}}/services/data/v{{version}}"
    }
  ],
  "paths": {
    "/services/oauth2/userinfo": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Info",
        "description": "User Info",
        "operationId": "userInfo",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/ssot/calculated-insights/{apiName}": {
      "get": {
        "tags": [
          "Calculated Insights",
          "by API Name"
        ],
        "summary": "getCalculatedInsight",
        "description": "Get a calculated insight in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "getcalculatedinsight",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "calculatedInsightStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "creationType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataSpace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "definitionStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "definitionType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dimensions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "creationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSource": {
                            "type": "object",
                            "properties": {
                              "sourceApiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "dataType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dateGranularity": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldRole": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "formula": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    },
                    "displayName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "expression": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "isEnabled": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "lastCalcInsightStatusDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastCalcInsightStatusErrorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatusDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatusErrorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "measures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "creationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSource": {
                            "type": "object",
                            "properties": {
                              "sourceApiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "dataType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldAggregationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldRole": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "formula": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "apiName": "<string>",
                      "calculatedInsightStatus": "<string>",
                      "creationType": "<string>",
                      "dataSpace": "<string>",
                      "definitionStatus": "<string>",
                      "definitionType": "<string>",
                      "description": "<string>",
                      "dimensions": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ],
                      "displayName": "<string>",
                      "expression": "<string>",
                      "isEnabled": "<boolean>",
                      "lastCalcInsightStatusDateTime": "<string>",
                      "lastCalcInsightStatusErrorCode": "<string>",
                      "lastRunDateTime": "<string>",
                      "lastRunStatus": "<string>",
                      "lastRunStatusDateTime": "<string>",
                      "lastRunStatusErrorCode": "<string>",
                      "measures": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calculated Insights",
          "by API Name"
        ],
        "summary": "deleteCalculatedInsight",
        "description": "Delete a calculated insight in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "deletecalculatedinsight",
        "responses": {
          "204": {
            "description": "204",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Calculated Insights",
          "by API Name"
        ],
        "summary": "updateCalculatedInsight",
        "description": "Update a calculated insight in Data Cloud.\n\n**Available Version:** 57.0\n\n**Root XML tag:** `<cdpCalculatedInsightInput>`\n",
        "operationId": "updatecalculatedinsight",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiName": {
                    "type": "string",
                    "example": "dev1__demo_draft_ci_6__cio"
                  },
                  "createdFromPackage": {
                    "type": "boolean",
                    "example": false
                  },
                  "dataSpaceName": {
                    "type": "string",
                    "example": ""
                  },
                  "definitionType": {
                    "type": "string",
                    "example": "CalculatedMetric"
                  },
                  "description": {
                    "type": "string",
                    "example": ""
                  },
                  "displayName": {
                    "type": "string",
                    "example": "dev1__demo_draft_ci_6__cio"
                  },
                  "draft": {
                    "type": "boolean",
                    "example": true
                  },
                  "expression": {
                    "type": "string",
                    "example": "SELECT count(ssot__Individual__dlm.ssot__DataSourceId__c) as dev1__m1__c, ssot__Individual__dlm.ssot__Id__c as dev1__d1__c FROM ssot__Individual__dlm WHERE ssot__Individual__dlm.ssot__InternalOrganizationId__c= 'test name' GROUP BY dev1__d1__c"
                  },
                  "packagedCalculatedInsightApiName": {
                    "type": "string",
                    "example": ""
                  }
                }
              },
              "examples": {
                "updateCalculatedInsight": {
                  "value": {
                    "apiName": "dev1__demo_draft_ci_6__cio",
                    "createdFromPackage": false,
                    "dataSpaceName": "",
                    "definitionType": "CalculatedMetric",
                    "description": "",
                    "displayName": "dev1__demo_draft_ci_6__cio",
                    "draft": true,
                    "expression": "SELECT count(ssot__Individual__dlm.ssot__DataSourceId__c) as dev1__m1__c, ssot__Individual__dlm.ssot__Id__c as dev1__d1__c FROM ssot__Individual__dlm WHERE ssot__Individual__dlm.ssot__InternalOrganizationId__c= 'test name' GROUP BY dev1__d1__c",
                    "packagedCalculatedInsightApiName": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "calculatedInsightStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "creationType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataSpace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "definitionStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "definitionType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dimensions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "creationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSource": {
                            "type": "object",
                            "properties": {
                              "sourceApiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "dataType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dateGranularity": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldRole": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "formula": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    },
                    "displayName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "expression": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "isEnabled": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "lastCalcInsightStatusDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastCalcInsightStatusErrorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatusDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatusErrorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "measures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "creationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSource": {
                            "type": "object",
                            "properties": {
                              "sourceApiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "dataType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldAggregationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldRole": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "formula": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "apiName": "<string>",
                      "calculatedInsightStatus": "<string>",
                      "creationType": "<string>",
                      "dataSpace": "<string>",
                      "definitionStatus": "<string>",
                      "definitionType": "<string>",
                      "description": "<string>",
                      "dimensions": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ],
                      "displayName": "<string>",
                      "expression": "<string>",
                      "isEnabled": "<boolean>",
                      "lastCalcInsightStatusDateTime": "<string>",
                      "lastCalcInsightStatusErrorCode": "<string>",
                      "lastRunDateTime": "<string>",
                      "lastRunStatus": "<string>",
                      "lastRunStatusDateTime": "<string>",
                      "lastRunStatusErrorCode": "<string>",
                      "measures": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "apiName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "API name of the calculated insight with suffix __cio.\n\n**Available Version:** 57.0\n"
        }
      ]
    },
    "/ssot/calculated-insights/{apiName}/{apiName}/actions/run": {
      "post": {
        "tags": [
          "Calculated Insights",
          "by API Name"
        ],
        "summary": "runCalculatedInsight",
        "description": "Trigger a run on the calculated insight in Data Cloud.\n\n**Available Version:** 57.0\n\n>**Note**\n>\n>POST doesn't take request parameters or a request body.\n",
        "operationId": "runcalculatedinsight",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "message": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ]
                    },
                    "success": {
                      "type": "string",
                      "example": "<boolean>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errors": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ],
                      "success": "<boolean>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "apiName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "API name of the calculated insight with suffix __cio.\n\n**Available Version:** 57.0\n"
        },
        {
          "name": "apiName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "API name of the calculated insight with suffix __cio.\n\n**Available Version:** 57.0\n"
        }
      ]
    },
    "/ssot/calculated-insights": {
      "get": {
        "tags": [
          "Calculated Insights"
        ],
        "summary": "getCalculatedInsights",
        "description": "Get calculated insights in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "getcalculatedinsights",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1-300. If unspecified, the default value is `25`.\n\n**Available Version:** 57.0\n"
          },
          {
            "name": "dataspace",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Name of the dataspace. \n\n**Available Version:** 57.0\n"
          },
          {
            "name": "definitionType",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Definition type of the calculated insight. Values are:\n  - `CalculatedMetric`\n  - `ExternalMetric`\n  - `StreamingMetric`\n\n**Available Version:** 57.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 57.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, seuch as `GenderId__c.ASC, Occupation__c.DESC`. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 57.0\n"
          },
          {
            "name": "pageToken",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Specifies the page token to use to view a page of information. Page tokens are returned as part of the response, such as `currentPageToken` or `nextPageToken`. If unspecified, the first page is returned.\n\n**Available Version:** 57.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "string",
                          "example": "<integer>"
                        },
                        "currentPageToken": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "currentPageUrl": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "calculatedInsightStatus": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "creationType": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "dataSpace": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "definitionStatus": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "definitionType": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "description": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "dimensions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "apiName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "creationType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "dataSource": {
                                      "type": "object",
                                      "properties": {
                                        "sourceApiName": {
                                          "type": "string",
                                          "example": "<string>"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "<string>"
                                        }
                                      }
                                    },
                                    "dataType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "dateGranularity": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "fieldRole": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "formula": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "apiName": "<string>",
                                    "creationType": "<string>",
                                    "dataSource": {
                                      "sourceApiName": "<string>",
                                      "type": "<string>"
                                    },
                                    "dataType": "<string>",
                                    "dateGranularity": "<string>",
                                    "displayName": "<string>",
                                    "fieldRole": "<string>",
                                    "formula": "<string>"
                                  },
                                  {
                                    "apiName": "<string>",
                                    "creationType": "<string>",
                                    "dataSource": {
                                      "sourceApiName": "<string>",
                                      "type": "<string>"
                                    },
                                    "dataType": "<string>",
                                    "dateGranularity": "<string>",
                                    "displayName": "<string>",
                                    "fieldRole": "<string>",
                                    "formula": "<string>"
                                  }
                                ]
                              },
                              "displayName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "expression": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "isEnabled": {
                                "type": "string",
                                "example": "<boolean>"
                              },
                              "lastCalcInsightStatusDateTime": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "lastCalcInsightStatusErrorCode": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "lastRunDateTime": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "lastRunStatus": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "lastRunStatusDateTime": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "lastRunStatusErrorCode": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "measures": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "apiName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "creationType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "dataSource": {
                                      "type": "object",
                                      "properties": {
                                        "sourceApiName": {
                                          "type": "string",
                                          "example": "<string>"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "<string>"
                                        }
                                      }
                                    },
                                    "dataType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "fieldAggregationType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "fieldRole": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "formula": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "apiName": "<string>",
                                    "creationType": "<string>",
                                    "dataSource": {
                                      "sourceApiName": "<string>",
                                      "type": "<string>"
                                    },
                                    "dataType": "<string>",
                                    "displayName": "<string>",
                                    "fieldAggregationType": "<string>",
                                    "fieldRole": "<string>",
                                    "formula": "<string>"
                                  },
                                  {
                                    "apiName": "<string>",
                                    "creationType": "<string>",
                                    "dataSource": {
                                      "sourceApiName": "<string>",
                                      "type": "<string>"
                                    },
                                    "dataType": "<string>",
                                    "displayName": "<string>",
                                    "fieldAggregationType": "<string>",
                                    "fieldRole": "<string>",
                                    "formula": "<string>"
                                  }
                                ]
                              }
                            }
                          },
                          "example": [
                            {
                              "apiName": "<string>",
                              "calculatedInsightStatus": "<string>",
                              "creationType": "<string>",
                              "dataSpace": "<string>",
                              "definitionStatus": "<string>",
                              "definitionType": "<string>",
                              "description": "<string>",
                              "dimensions": [
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "dateGranularity": "<string>",
                                  "displayName": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                },
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "dateGranularity": "<string>",
                                  "displayName": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                }
                              ],
                              "displayName": "<string>",
                              "expression": "<string>",
                              "isEnabled": "<boolean>",
                              "lastCalcInsightStatusDateTime": "<string>",
                              "lastCalcInsightStatusErrorCode": "<string>",
                              "lastRunDateTime": "<string>",
                              "lastRunStatus": "<string>",
                              "lastRunStatusDateTime": "<string>",
                              "lastRunStatusErrorCode": "<string>",
                              "measures": [
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "displayName": "<string>",
                                  "fieldAggregationType": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                },
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "displayName": "<string>",
                                  "fieldAggregationType": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                }
                              ]
                            },
                            {
                              "apiName": "<string>",
                              "calculatedInsightStatus": "<string>",
                              "creationType": "<string>",
                              "dataSpace": "<string>",
                              "definitionStatus": "<string>",
                              "definitionType": "<string>",
                              "description": "<string>",
                              "dimensions": [
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "dateGranularity": "<string>",
                                  "displayName": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                },
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "dateGranularity": "<string>",
                                  "displayName": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                }
                              ],
                              "displayName": "<string>",
                              "expression": "<string>",
                              "isEnabled": "<boolean>",
                              "lastCalcInsightStatusDateTime": "<string>",
                              "lastCalcInsightStatusErrorCode": "<string>",
                              "lastRunDateTime": "<string>",
                              "lastRunStatus": "<string>",
                              "lastRunStatusDateTime": "<string>",
                              "lastRunStatusErrorCode": "<string>",
                              "measures": [
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "displayName": "<string>",
                                  "fieldAggregationType": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                },
                                {
                                  "apiName": "<string>",
                                  "creationType": "<string>",
                                  "dataSource": {
                                    "sourceApiName": "<string>",
                                    "type": "<string>"
                                  },
                                  "dataType": "<string>",
                                  "displayName": "<string>",
                                  "fieldAggregationType": "<string>",
                                  "fieldRole": "<string>",
                                  "formula": "<string>"
                                }
                              ]
                            }
                          ]
                        },
                        "nextPageToken": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "nextPageUrl": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "previousPageToken": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "previousPageUrl": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "total": {
                          "type": "string",
                          "example": "<integer>"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "collection": {
                        "count": "<integer>",
                        "currentPageToken": "<string>",
                        "currentPageUrl": "<string>",
                        "items": [
                          {
                            "apiName": "<string>",
                            "calculatedInsightStatus": "<string>",
                            "creationType": "<string>",
                            "dataSpace": "<string>",
                            "definitionStatus": "<string>",
                            "definitionType": "<string>",
                            "description": "<string>",
                            "dimensions": [
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "dateGranularity": "<string>",
                                "displayName": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              },
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "dateGranularity": "<string>",
                                "displayName": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              }
                            ],
                            "displayName": "<string>",
                            "expression": "<string>",
                            "isEnabled": "<boolean>",
                            "lastCalcInsightStatusDateTime": "<string>",
                            "lastCalcInsightStatusErrorCode": "<string>",
                            "lastRunDateTime": "<string>",
                            "lastRunStatus": "<string>",
                            "lastRunStatusDateTime": "<string>",
                            "lastRunStatusErrorCode": "<string>",
                            "measures": [
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "displayName": "<string>",
                                "fieldAggregationType": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              },
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "displayName": "<string>",
                                "fieldAggregationType": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              }
                            ]
                          },
                          {
                            "apiName": "<string>",
                            "calculatedInsightStatus": "<string>",
                            "creationType": "<string>",
                            "dataSpace": "<string>",
                            "definitionStatus": "<string>",
                            "definitionType": "<string>",
                            "description": "<string>",
                            "dimensions": [
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "dateGranularity": "<string>",
                                "displayName": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              },
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "dateGranularity": "<string>",
                                "displayName": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              }
                            ],
                            "displayName": "<string>",
                            "expression": "<string>",
                            "isEnabled": "<boolean>",
                            "lastCalcInsightStatusDateTime": "<string>",
                            "lastCalcInsightStatusErrorCode": "<string>",
                            "lastRunDateTime": "<string>",
                            "lastRunStatus": "<string>",
                            "lastRunStatusDateTime": "<string>",
                            "lastRunStatusErrorCode": "<string>",
                            "measures": [
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "displayName": "<string>",
                                "fieldAggregationType": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              },
                              {
                                "apiName": "<string>",
                                "creationType": "<string>",
                                "dataSource": {
                                  "sourceApiName": "<string>",
                                  "type": "<string>"
                                },
                                "dataType": "<string>",
                                "displayName": "<string>",
                                "fieldAggregationType": "<string>",
                                "fieldRole": "<string>",
                                "formula": "<string>"
                              }
                            ]
                          }
                        ],
                        "nextPageToken": "<string>",
                        "nextPageUrl": "<string>",
                        "previousPageToken": "<string>",
                        "previousPageUrl": "<string>",
                        "total": "<integer>"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calculated Insights"
        ],
        "summary": "createCalculatedInsights",
        "description": "Create a calculated insight in Data Cloud.\n\n**Available Version:** 57.0\n\n**Root XML tag:** `<cdpCalculatedInsightInput>`\n",
        "operationId": "createcalculatedinsights",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiName": {
                    "type": "string",
                    "example": "dev1__demo_draft_ci_6__cio"
                  },
                  "createdFromPackage": {
                    "type": "boolean",
                    "example": false
                  },
                  "dataSpaceName": {
                    "type": "string",
                    "example": ""
                  },
                  "definitionType": {
                    "type": "string",
                    "example": "CalculatedMetric"
                  },
                  "description": {
                    "type": "string",
                    "example": ""
                  },
                  "displayName": {
                    "type": "string",
                    "example": "dev1__demo_draft_ci_6__cio"
                  },
                  "draft": {
                    "type": "boolean",
                    "example": true
                  },
                  "expression": {
                    "type": "string",
                    "example": "SELECT count(ssot__Individual__dlm.ssot__DataSourceId__c) as dev1__m1__c, ssot__Individual__dlm.ssot__Id__c as dev1__d1__c FROM ssot__Individual__dlm WHERE ssot__Individual__dlm.ssot__InternalOrganizationId__c= 'test name' GROUP BY dev1__d1__c"
                  },
                  "packagedCalculatedInsightApiName": {
                    "type": "string",
                    "example": ""
                  }
                }
              },
              "examples": {
                "createCalculatedInsights": {
                  "value": {
                    "apiName": "dev1__demo_draft_ci_6__cio",
                    "createdFromPackage": false,
                    "dataSpaceName": "",
                    "definitionType": "CalculatedMetric",
                    "description": "",
                    "displayName": "dev1__demo_draft_ci_6__cio",
                    "draft": true,
                    "expression": "SELECT count(ssot__Individual__dlm.ssot__DataSourceId__c) as dev1__m1__c, ssot__Individual__dlm.ssot__Id__c as dev1__d1__c FROM ssot__Individual__dlm WHERE ssot__Individual__dlm.ssot__InternalOrganizationId__c= 'test name' GROUP BY dev1__d1__c",
                    "packagedCalculatedInsightApiName": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "calculatedInsightStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "creationType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataSpace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "definitionStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "definitionType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dimensions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "creationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSource": {
                            "type": "object",
                            "properties": {
                              "sourceApiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "dataType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dateGranularity": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldRole": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "formula": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    },
                    "displayName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "expression": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "isEnabled": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "lastCalcInsightStatusDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastCalcInsightStatusErrorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatusDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastRunStatusErrorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "measures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "creationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSource": {
                            "type": "object",
                            "properties": {
                              "sourceApiName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "dataType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldAggregationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fieldRole": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "formula": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "apiName": "<string>",
                      "calculatedInsightStatus": "<string>",
                      "creationType": "<string>",
                      "dataSpace": "<string>",
                      "definitionStatus": "<string>",
                      "definitionType": "<string>",
                      "description": "<string>",
                      "dimensions": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "dateGranularity": "<string>",
                          "displayName": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ],
                      "displayName": "<string>",
                      "expression": "<string>",
                      "isEnabled": "<boolean>",
                      "lastCalcInsightStatusDateTime": "<string>",
                      "lastCalcInsightStatusErrorCode": "<string>",
                      "lastRunDateTime": "<string>",
                      "lastRunStatus": "<string>",
                      "lastRunStatusDateTime": "<string>",
                      "lastRunStatusErrorCode": "<string>",
                      "measures": [
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "creationType": "<string>",
                          "dataSource": {
                            "sourceApiName": "<string>",
                            "type": "<string>"
                          },
                          "dataType": "<string>",
                          "displayName": "<string>",
                          "fieldAggregationType": "<string>",
                          "fieldRole": "<string>",
                          "formula": "<string>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/data-graphs/data/{dataGraphEntityName}/{id}": {
      "get": {
        "tags": [
          "Data Graphs",
          "data",
          "{dataGraphEntityName}"
        ],
        "summary": "getDataGraphDataById",
        "description": "Query data graph data by ID.\n\n**Available Version:** 59.0\n",
        "operationId": "getdatagraphdatabyid",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "json_blob__c": {
                            "type": "string",
                            "example": "{\"ssot__Id__c\":\"100005\",\"UnifiedLinkssotIndividualIr1__dlm\":[{\"SourceRecordId__c\":\"10000001\",\"UnifiedRecordId__c\":\"100005\",\"ssot__Individual__dlm\":[{\"ssot__FirstName__c\":\"Jean\",\"ssot__Id__c\":\"10000001\",\"ssot__LastName__c\":\"Johnson\",\"ssot__SalesOrder__dlm\":[{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T07:37:57.927Z\",\"ssot__Id__c\":\"100002\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":557.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T19:52:26.525Z\",\"ssot__Id__c\":\"100001\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":192.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-06T20:30:18.255Z\",\"ssot__Id__c\":\"100005\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":590.000000000000000000}]}]}]}"
                          }
                        }
                      },
                      "example": [
                        {
                          "json_blob__c": "{\"ssot__Id__c\":\"100005\",\"UnifiedLinkssotIndividualIr1__dlm\":[{\"SourceRecordId__c\":\"10000001\",\"UnifiedRecordId__c\":\"100005\",\"ssot__Individual__dlm\":[{\"ssot__FirstName__c\":\"Jean\",\"ssot__Id__c\":\"10000001\",\"ssot__LastName__c\":\"Johnson\",\"ssot__SalesOrder__dlm\":[{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T07:37:57.927Z\",\"ssot__Id__c\":\"100002\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":557.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T19:52:26.525Z\",\"ssot__Id__c\":\"100001\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":192.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-06T20:30:18.255Z\",\"ssot__Id__c\":\"100005\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":590.000000000000000000}]}]}]}"
                        }
                      ]
                    },
                    "done": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "data": [
                        {
                          "json_blob__c": "{\"ssot__Id__c\":\"100005\",\"UnifiedLinkssotIndividualIr1__dlm\":[{\"SourceRecordId__c\":\"10000001\",\"UnifiedRecordId__c\":\"100005\",\"ssot__Individual__dlm\":[{\"ssot__FirstName__c\":\"Jean\",\"ssot__Id__c\":\"10000001\",\"ssot__LastName__c\":\"Johnson\",\"ssot__SalesOrder__dlm\":[{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T07:37:57.927Z\",\"ssot__Id__c\":\"100002\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":557.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T19:52:26.525Z\",\"ssot__Id__c\":\"100001\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":192.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-06T20:30:18.255Z\",\"ssot__Id__c\":\"100005\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":590.000000000000000000}]}]}]}"
                        }
                      ],
                      "done": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataGraphEntityName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "API name of the data graph to query."
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Record ID to query for, which is matched against the primary key field of the primary DMO (data model object) in the data graph."
        }
      ]
    },
    "/ssot/data-graphs/data/{dataGraphEntityName}": {
      "get": {
        "tags": [
          "Data Graphs",
          "data"
        ],
        "summary": "getDataGraphDataByLookup",
        "description": "Fetches data of a data graph by primary key of the primary DMO or the primary key of the Individual linked DMO.\n\n**Available Version:** 59.0\n",
        "operationId": "getdatagraphdatabylookup",
        "parameters": [
          {
            "name": "lookupKeys",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Lookup key and value to search on. This API currently supports the primary key of the primary DMO (for example, `lookupKeys=[id__c=def]`) or the primary key of the Individual linked DMO (for example, `lookupKeys=[IndividualLink__dlm.SourceRecordId__c=1111111]`)."
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "json_blob__c": {
                            "type": "string",
                            "example": "{\"ssot__Id__c\":\"100005\",\"UnifiedLinkssotIndividualIr1__dlm\":[{\"SourceRecordId__c\":\"10000001\",\"UnifiedRecordId__c\":\"100005\",\"ssot__Individual__dlm\":[{\"ssot__FirstName__c\":\"Jean\",\"ssot__Id__c\":\"10000001\",\"ssot__LastName__c\":\"Johnson\",\"ssot__SalesOrder__dlm\":[{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T07:37:57.927Z\",\"ssot__Id__c\":\"100002\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":557.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T19:52:26.525Z\",\"ssot__Id__c\":\"100001\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":192.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-06T20:30:18.255Z\",\"ssot__Id__c\":\"100005\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":590.000000000000000000}]}]}]}"
                          }
                        }
                      },
                      "example": [
                        {
                          "json_blob__c": "{\"ssot__Id__c\":\"100005\",\"UnifiedLinkssotIndividualIr1__dlm\":[{\"SourceRecordId__c\":\"10000001\",\"UnifiedRecordId__c\":\"100005\",\"ssot__Individual__dlm\":[{\"ssot__FirstName__c\":\"Jean\",\"ssot__Id__c\":\"10000001\",\"ssot__LastName__c\":\"Johnson\",\"ssot__SalesOrder__dlm\":[{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T07:37:57.927Z\",\"ssot__Id__c\":\"100002\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":557.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T19:52:26.525Z\",\"ssot__Id__c\":\"100001\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":192.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-06T20:30:18.255Z\",\"ssot__Id__c\":\"100005\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":590.000000000000000000}]}]}]}"
                        }
                      ]
                    },
                    "done": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "data": [
                        {
                          "json_blob__c": "{\"ssot__Id__c\":\"100005\",\"UnifiedLinkssotIndividualIr1__dlm\":[{\"SourceRecordId__c\":\"10000001\",\"UnifiedRecordId__c\":\"100005\",\"ssot__Individual__dlm\":[{\"ssot__FirstName__c\":\"Jean\",\"ssot__Id__c\":\"10000001\",\"ssot__LastName__c\":\"Johnson\",\"ssot__SalesOrder__dlm\":[{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T07:37:57.927Z\",\"ssot__Id__c\":\"100002\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":557.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-26T19:52:26.525Z\",\"ssot__Id__c\":\"100001\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":192.000000000000000000},{\"ssot__PurchaseOrderDate__c\":\"2023-07-06T20:30:18.255Z\",\"ssot__Id__c\":\"100005\",\"ssot__SoldToCustomerId__c\":\"10000001\",\"ssot__TotalProductAmount__c\":590.000000000000000000}]}]}]}"
                        }
                      ],
                      "done": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataGraphEntityName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "API name of the data graph to query."
        }
      ]
    },
    "/ssot/data-graphs/{dataGraphName}": {
      "get": {
        "tags": [
          "Data Graphs",
          "{dataGraphName}"
        ],
        "summary": "getDataGraph",
        "description": "Query a data graph.\n\n**Available Version:** 59.0\n",
        "operationId": "getdatagraph",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataspaceName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "name": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "createdBy": "<string>",
                      "createdDate": "<string>",
                      "dataspaceName": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "label": "<string>",
                      "modifiedBy": "<string>",
                      "modifiedDate": "<string>",
                      "name": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Graphs",
          "{dataGraphName}"
        ],
        "summary": "deleteDataGraph",
        "description": "Delete a data graph.\n\n**Available Version:** 59.0\n",
        "operationId": "deletedatagraph",
        "responses": {
          "200": {
            "description": "200",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "dataGraphName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data graph."
        }
      ]
    },
    "/ssot/data-graphs": {
      "post": {
        "tags": [
          "Data Graphs"
        ],
        "summary": "createDataGraph",
        "description": "Create a data graph.\n\n**Available Version:** 59.0\n",
        "operationId": "createdatagraph",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataspaceName": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "description": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "label": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "name": {
                    "type": "string",
                    "example": "<string>"
                  }
                }
              },
              "examples": {
                "createDataGraph": {
                  "value": {
                    "dataspaceName": "<string>",
                    "description": "<string>",
                    "label": "<string>",
                    "name": "<string>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataspaceName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "name": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "createdBy": "<string>",
                      "createdDate": "<string>",
                      "dataspaceName": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "label": "<string>",
                      "modifiedBy": "<string>",
                      "modifiedDate": "<string>",
                      "name": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/data-graphs/metadata": {
      "get": {
        "tags": [
          "Data Graphs"
        ],
        "summary": "getDataGraphMetadata",
        "description": "Query data graph metadata.\n\n**Available Version:** 59.0\n",
        "operationId": "getdatagraphmetadata",
        "parameters": [
          {
            "name": "dataspace",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Name of the dataspace to query. If unspecified, default is the `default` dataspace."
          },
          {
            "name": "dataGraphEntityName",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "API name of the data graph to query. If unspecified, metadata for all datagraphs is returned."
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dataGraphMetadata": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dataspaceName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "description": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "developerName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dgObject": {
                            "type": "object",
                            "properties": {
                              "developerName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "fields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "dataType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "developerName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "keyCol": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "length": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "lookupCol": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ]
                              },
                              "filterCriteria": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "memberDmoName": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "paths": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cardinality": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "fieldName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "parentFieldName": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ]
                              },
                              "recencyCriteria": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fieldName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "valueType": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "valueUnit": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ]
                              },
                              "relatedObjects": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "developerName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "fields": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "dataType": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "developerName": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "keyCol": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "length": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "lookupCol": {
                                            "type": "string",
                                            "example": "<string>"
                                          }
                                        }
                                      },
                                      "example": [
                                        {
                                          "dataType": "<string>",
                                          "developerName": "<string>",
                                          "keyCol": "<string>",
                                          "length": "<string>",
                                          "lookupCol": "<string>"
                                        },
                                        {
                                          "dataType": "<string>",
                                          "developerName": "<string>",
                                          "keyCol": "<string>",
                                          "length": "<string>",
                                          "lookupCol": "<string>"
                                        }
                                      ]
                                    },
                                    "filterCriteria": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "memberDmoName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "paths": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "cardinality": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "fieldName": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "parentFieldName": {
                                            "type": "string",
                                            "example": "<string>"
                                          }
                                        }
                                      },
                                      "example": [
                                        {
                                          "cardinality": "<string>",
                                          "fieldName": "<string>",
                                          "parentFieldName": "<string>"
                                        },
                                        {
                                          "cardinality": "<string>",
                                          "fieldName": "<string>",
                                          "parentFieldName": "<string>"
                                        }
                                      ]
                                    },
                                    "recencyCriteria": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "fieldName": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "valueType": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "valueUnit": {
                                            "type": "string",
                                            "example": "<string>"
                                          }
                                        }
                                      },
                                      "example": [
                                        {
                                          "fieldName": "<string>",
                                          "value": "<string>",
                                          "valueType": "<string>",
                                          "valueUnit": "<string>"
                                        },
                                        {
                                          "fieldName": "<string>",
                                          "value": "<string>",
                                          "valueType": "<string>",
                                          "valueUnit": "<string>"
                                        }
                                      ]
                                    },
                                    "relatedObjects": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "developerName": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "fields": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dataType": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "developerName": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "keyCol": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "length": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "lookupCol": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ]
                                          },
                                          "filterCriteria": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "memberDmoName": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "paths": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "cardinality": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "fieldName": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "parentFieldName": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ]
                                          },
                                          "recencyCriteria": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "fieldName": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "valueType": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "valueUnit": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ]
                                          },
                                          "relatedObjects": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "developerName": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "fields": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "dataType": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "developerName": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "keyCol": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "length": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "lookupCol": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      }
                                                    }
                                                  },
                                                  "example": [
                                                    {
                                                      "dataType": "<string>",
                                                      "developerName": "<string>",
                                                      "keyCol": "<string>",
                                                      "length": "<string>",
                                                      "lookupCol": "<string>"
                                                    },
                                                    {
                                                      "dataType": "<string>",
                                                      "developerName": "<string>",
                                                      "keyCol": "<string>",
                                                      "length": "<string>",
                                                      "lookupCol": "<string>"
                                                    }
                                                  ]
                                                },
                                                "filterCriteria": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "memberDmoName": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                },
                                                "paths": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "cardinality": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "fieldName": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "parentFieldName": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      }
                                                    }
                                                  },
                                                  "example": [
                                                    {
                                                      "cardinality": "<string>",
                                                      "fieldName": "<string>",
                                                      "parentFieldName": "<string>"
                                                    },
                                                    {
                                                      "cardinality": "<string>",
                                                      "fieldName": "<string>",
                                                      "parentFieldName": "<string>"
                                                    }
                                                  ]
                                                },
                                                "recencyCriteria": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "fieldName": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "value": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "valueType": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "valueUnit": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      }
                                                    }
                                                  },
                                                  "example": [
                                                    {
                                                      "fieldName": "<string>",
                                                      "value": "<string>",
                                                      "valueType": "<string>",
                                                      "valueUnit": "<string>"
                                                    },
                                                    {
                                                      "fieldName": "<string>",
                                                      "value": "<string>",
                                                      "valueType": "<string>",
                                                      "valueUnit": "<string>"
                                                    }
                                                  ]
                                                },
                                                "relatedObjects": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "developerName": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "fields": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "value": {
                                                              "type": "string",
                                                              "example": "<Error: Too many levels of nesting to fake this schema>"
                                                            }
                                                          }
                                                        },
                                                        "example": [
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          },
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          }
                                                        ]
                                                      },
                                                      "filterCriteria": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "memberDmoName": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      },
                                                      "paths": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "value": {
                                                              "type": "string",
                                                              "example": "<Error: Too many levels of nesting to fake this schema>"
                                                            }
                                                          }
                                                        },
                                                        "example": [
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          },
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          }
                                                        ]
                                                      },
                                                      "recencyCriteria": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "value": {
                                                              "type": "string",
                                                              "example": "<Error: Too many levels of nesting to fake this schema>"
                                                            }
                                                          }
                                                        },
                                                        "example": [
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          },
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          }
                                                        ]
                                                      },
                                                      "relatedObjects": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "value": {
                                                              "type": "string",
                                                              "example": "<Error: Too many levels of nesting to fake this schema>"
                                                            }
                                                          }
                                                        },
                                                        "example": [
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          },
                                                          {
                                                            "value": "<Error: Too many levels of nesting to fake this schema>"
                                                          }
                                                        ]
                                                      },
                                                      "type": {
                                                        "type": "string",
                                                        "example": "<string>"
                                                      }
                                                    }
                                                  },
                                                  "example": [
                                                    {
                                                      "developerName": "<string>",
                                                      "fields": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "filterCriteria": "<string>",
                                                      "memberDmoName": "<string>",
                                                      "paths": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "recencyCriteria": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "relatedObjects": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "type": "<string>"
                                                    },
                                                    {
                                                      "developerName": "<string>",
                                                      "fields": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "filterCriteria": "<string>",
                                                      "memberDmoName": "<string>",
                                                      "paths": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "recencyCriteria": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "relatedObjects": [
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        },
                                                        {
                                                          "value": "<Error: Too many levels of nesting to fake this schema>"
                                                        }
                                                      ],
                                                      "type": "<string>"
                                                    }
                                                  ]
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "example": "<string>"
                                                }
                                              }
                                            },
                                            "example": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "dataType": "<string>",
                                                    "developerName": "<string>",
                                                    "keyCol": "<string>",
                                                    "length": "<string>",
                                                    "lookupCol": "<string>"
                                                  },
                                                  {
                                                    "dataType": "<string>",
                                                    "developerName": "<string>",
                                                    "keyCol": "<string>",
                                                    "length": "<string>",
                                                    "lookupCol": "<string>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "cardinality": "<string>",
                                                    "fieldName": "<string>",
                                                    "parentFieldName": "<string>"
                                                  },
                                                  {
                                                    "cardinality": "<string>",
                                                    "fieldName": "<string>",
                                                    "parentFieldName": "<string>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "fieldName": "<string>",
                                                    "value": "<string>",
                                                    "valueType": "<string>",
                                                    "valueUnit": "<string>"
                                                  },
                                                  {
                                                    "fieldName": "<string>",
                                                    "value": "<string>",
                                                    "valueType": "<string>",
                                                    "valueUnit": "<string>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "developerName": "<string>",
                                                    "fields": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "filterCriteria": "<string>",
                                                    "memberDmoName": "<string>",
                                                    "paths": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "recencyCriteria": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "relatedObjects": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "type": "<string>"
                                                  },
                                                  {
                                                    "developerName": "<string>",
                                                    "fields": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "filterCriteria": "<string>",
                                                    "memberDmoName": "<string>",
                                                    "paths": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "recencyCriteria": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "relatedObjects": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "type": "<string>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "dataType": "<string>",
                                                    "developerName": "<string>",
                                                    "keyCol": "<string>",
                                                    "length": "<string>",
                                                    "lookupCol": "<string>"
                                                  },
                                                  {
                                                    "dataType": "<string>",
                                                    "developerName": "<string>",
                                                    "keyCol": "<string>",
                                                    "length": "<string>",
                                                    "lookupCol": "<string>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "cardinality": "<string>",
                                                    "fieldName": "<string>",
                                                    "parentFieldName": "<string>"
                                                  },
                                                  {
                                                    "cardinality": "<string>",
                                                    "fieldName": "<string>",
                                                    "parentFieldName": "<string>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "fieldName": "<string>",
                                                    "value": "<string>",
                                                    "valueType": "<string>",
                                                    "valueUnit": "<string>"
                                                  },
                                                  {
                                                    "fieldName": "<string>",
                                                    "value": "<string>",
                                                    "valueType": "<string>",
                                                    "valueUnit": "<string>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "developerName": "<string>",
                                                    "fields": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "filterCriteria": "<string>",
                                                    "memberDmoName": "<string>",
                                                    "paths": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "recencyCriteria": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "relatedObjects": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "type": "<string>"
                                                  },
                                                  {
                                                    "developerName": "<string>",
                                                    "fields": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "filterCriteria": "<string>",
                                                    "memberDmoName": "<string>",
                                                    "paths": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "recencyCriteria": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "relatedObjects": [
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      },
                                                      {
                                                        "value": "<Error: Too many levels of nesting to fake this schema>"
                                                      }
                                                    ],
                                                    "type": "<string>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ]
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "<string>"
                                          }
                                        }
                                      },
                                      "example": [
                                        {
                                          "developerName": "<string>",
                                          "fields": [
                                            {
                                              "dataType": "<string>",
                                              "developerName": "<string>",
                                              "keyCol": "<string>",
                                              "length": "<string>",
                                              "lookupCol": "<string>"
                                            },
                                            {
                                              "dataType": "<string>",
                                              "developerName": "<string>",
                                              "keyCol": "<string>",
                                              "length": "<string>",
                                              "lookupCol": "<string>"
                                            }
                                          ],
                                          "filterCriteria": "<string>",
                                          "memberDmoName": "<string>",
                                          "paths": [
                                            {
                                              "cardinality": "<string>",
                                              "fieldName": "<string>",
                                              "parentFieldName": "<string>"
                                            },
                                            {
                                              "cardinality": "<string>",
                                              "fieldName": "<string>",
                                              "parentFieldName": "<string>"
                                            }
                                          ],
                                          "recencyCriteria": [
                                            {
                                              "fieldName": "<string>",
                                              "value": "<string>",
                                              "valueType": "<string>",
                                              "valueUnit": "<string>"
                                            },
                                            {
                                              "fieldName": "<string>",
                                              "value": "<string>",
                                              "valueType": "<string>",
                                              "valueUnit": "<string>"
                                            }
                                          ],
                                          "relatedObjects": [
                                            {
                                              "developerName": "<string>",
                                              "fields": [
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                },
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                }
                                              ],
                                              "filterCriteria": "<string>",
                                              "memberDmoName": "<string>",
                                              "paths": [
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                },
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                }
                                              ],
                                              "recencyCriteria": [
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                },
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                }
                                              ],
                                              "relatedObjects": [
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                },
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                }
                                              ],
                                              "type": "<string>"
                                            },
                                            {
                                              "developerName": "<string>",
                                              "fields": [
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                },
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                }
                                              ],
                                              "filterCriteria": "<string>",
                                              "memberDmoName": "<string>",
                                              "paths": [
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                },
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                }
                                              ],
                                              "recencyCriteria": [
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                },
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                }
                                              ],
                                              "relatedObjects": [
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                },
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                }
                                              ],
                                              "type": "<string>"
                                            }
                                          ],
                                          "type": "<string>"
                                        },
                                        {
                                          "developerName": "<string>",
                                          "fields": [
                                            {
                                              "dataType": "<string>",
                                              "developerName": "<string>",
                                              "keyCol": "<string>",
                                              "length": "<string>",
                                              "lookupCol": "<string>"
                                            },
                                            {
                                              "dataType": "<string>",
                                              "developerName": "<string>",
                                              "keyCol": "<string>",
                                              "length": "<string>",
                                              "lookupCol": "<string>"
                                            }
                                          ],
                                          "filterCriteria": "<string>",
                                          "memberDmoName": "<string>",
                                          "paths": [
                                            {
                                              "cardinality": "<string>",
                                              "fieldName": "<string>",
                                              "parentFieldName": "<string>"
                                            },
                                            {
                                              "cardinality": "<string>",
                                              "fieldName": "<string>",
                                              "parentFieldName": "<string>"
                                            }
                                          ],
                                          "recencyCriteria": [
                                            {
                                              "fieldName": "<string>",
                                              "value": "<string>",
                                              "valueType": "<string>",
                                              "valueUnit": "<string>"
                                            },
                                            {
                                              "fieldName": "<string>",
                                              "value": "<string>",
                                              "valueType": "<string>",
                                              "valueUnit": "<string>"
                                            }
                                          ],
                                          "relatedObjects": [
                                            {
                                              "developerName": "<string>",
                                              "fields": [
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                },
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                }
                                              ],
                                              "filterCriteria": "<string>",
                                              "memberDmoName": "<string>",
                                              "paths": [
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                },
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                }
                                              ],
                                              "recencyCriteria": [
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                },
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                }
                                              ],
                                              "relatedObjects": [
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                },
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                }
                                              ],
                                              "type": "<string>"
                                            },
                                            {
                                              "developerName": "<string>",
                                              "fields": [
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                },
                                                {
                                                  "dataType": "<string>",
                                                  "developerName": "<string>",
                                                  "keyCol": "<string>",
                                                  "length": "<string>",
                                                  "lookupCol": "<string>"
                                                }
                                              ],
                                              "filterCriteria": "<string>",
                                              "memberDmoName": "<string>",
                                              "paths": [
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                },
                                                {
                                                  "cardinality": "<string>",
                                                  "fieldName": "<string>",
                                                  "parentFieldName": "<string>"
                                                }
                                              ],
                                              "recencyCriteria": [
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                },
                                                {
                                                  "fieldName": "<string>",
                                                  "value": "<string>",
                                                  "valueType": "<string>",
                                                  "valueUnit": "<string>"
                                                }
                                              ],
                                              "relatedObjects": [
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                },
                                                {
                                                  "developerName": "<string>",
                                                  "fields": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "filterCriteria": "<string>",
                                                  "memberDmoName": "<string>",
                                                  "paths": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "recencyCriteria": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "relatedObjects": [
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    },
                                                    {
                                                      "value": "<Error: Too many levels of nesting to fake this schema>"
                                                    }
                                                  ],
                                                  "type": "<string>"
                                                }
                                              ],
                                              "type": "<string>"
                                            }
                                          ],
                                          "type": "<string>"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              },
                                              {
                                                "dataType": "<string>",
                                                "developerName": "<string>",
                                                "keyCol": "<string>",
                                                "length": "<string>",
                                                "lookupCol": "<string>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              },
                                              {
                                                "cardinality": "<string>",
                                                "fieldName": "<string>",
                                                "parentFieldName": "<string>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              },
                                              {
                                                "fieldName": "<string>",
                                                "value": "<string>",
                                                "valueType": "<string>",
                                                "valueUnit": "<string>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              },
                                              {
                                                "developerName": "<string>",
                                                "fields": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "filterCriteria": "<string>",
                                                "memberDmoName": "<string>",
                                                "paths": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "recencyCriteria": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "relatedObjects": [
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  },
                                                  {
                                                    "value": "<Error: Too many levels of nesting to fake this schema>"
                                                  }
                                                ],
                                                "type": "<string>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "extendedProperties": {
                            "type": "string",
                            "example": "<object>"
                          },
                          "idDmoName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "primaryObjectName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "primaryObjectType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "status": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "valuesDmoName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "version": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "dataspaceName": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "dgObject": {
                            "developerName": "<string>",
                            "fields": [
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              },
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              }
                            ],
                            "filterCriteria": "<string>",
                            "memberDmoName": "<string>",
                            "paths": [
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              },
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              }
                            ],
                            "recencyCriteria": [
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              },
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              }
                            ],
                            "relatedObjects": [
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              },
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              }
                            ],
                            "type": "<string>"
                          },
                          "extendedProperties": "<object>",
                          "idDmoName": "<string>",
                          "primaryObjectName": "<string>",
                          "primaryObjectType": "<string>",
                          "status": "<string>",
                          "valuesDmoName": "<string>",
                          "version": "<string>"
                        },
                        {
                          "dataspaceName": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "dgObject": {
                            "developerName": "<string>",
                            "fields": [
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              },
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              }
                            ],
                            "filterCriteria": "<string>",
                            "memberDmoName": "<string>",
                            "paths": [
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              },
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              }
                            ],
                            "recencyCriteria": [
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              },
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              }
                            ],
                            "relatedObjects": [
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              },
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              }
                            ],
                            "type": "<string>"
                          },
                          "extendedProperties": "<object>",
                          "idDmoName": "<string>",
                          "primaryObjectName": "<string>",
                          "primaryObjectType": "<string>",
                          "status": "<string>",
                          "valuesDmoName": "<string>",
                          "version": "<string>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "dataGraphMetadata": [
                        {
                          "dataspaceName": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "dgObject": {
                            "developerName": "<string>",
                            "fields": [
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              },
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              }
                            ],
                            "filterCriteria": "<string>",
                            "memberDmoName": "<string>",
                            "paths": [
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              },
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              }
                            ],
                            "recencyCriteria": [
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              },
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              }
                            ],
                            "relatedObjects": [
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              },
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              }
                            ],
                            "type": "<string>"
                          },
                          "extendedProperties": "<object>",
                          "idDmoName": "<string>",
                          "primaryObjectName": "<string>",
                          "primaryObjectType": "<string>",
                          "status": "<string>",
                          "valuesDmoName": "<string>",
                          "version": "<string>"
                        },
                        {
                          "dataspaceName": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "dgObject": {
                            "developerName": "<string>",
                            "fields": [
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              },
                              {
                                "dataType": "<string>",
                                "developerName": "<string>",
                                "keyCol": "<string>",
                                "length": "<string>",
                                "lookupCol": "<string>"
                              }
                            ],
                            "filterCriteria": "<string>",
                            "memberDmoName": "<string>",
                            "paths": [
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              },
                              {
                                "cardinality": "<string>",
                                "fieldName": "<string>",
                                "parentFieldName": "<string>"
                              }
                            ],
                            "recencyCriteria": [
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              },
                              {
                                "fieldName": "<string>",
                                "value": "<string>",
                                "valueType": "<string>",
                                "valueUnit": "<string>"
                              }
                            ],
                            "relatedObjects": [
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              },
                              {
                                "developerName": "<string>",
                                "fields": [
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  },
                                  {
                                    "dataType": "<string>",
                                    "developerName": "<string>",
                                    "keyCol": "<string>",
                                    "length": "<string>",
                                    "lookupCol": "<string>"
                                  }
                                ],
                                "filterCriteria": "<string>",
                                "memberDmoName": "<string>",
                                "paths": [
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  },
                                  {
                                    "cardinality": "<string>",
                                    "fieldName": "<string>",
                                    "parentFieldName": "<string>"
                                  }
                                ],
                                "recencyCriteria": [
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "value": "<string>",
                                    "valueType": "<string>",
                                    "valueUnit": "<string>"
                                  }
                                ],
                                "relatedObjects": [
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  },
                                  {
                                    "developerName": "<string>",
                                    "fields": [
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      },
                                      {
                                        "dataType": "<string>",
                                        "developerName": "<string>",
                                        "keyCol": "<string>",
                                        "length": "<string>",
                                        "lookupCol": "<string>"
                                      }
                                    ],
                                    "filterCriteria": "<string>",
                                    "memberDmoName": "<string>",
                                    "paths": [
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      },
                                      {
                                        "cardinality": "<string>",
                                        "fieldName": "<string>",
                                        "parentFieldName": "<string>"
                                      }
                                    ],
                                    "recencyCriteria": [
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      },
                                      {
                                        "fieldName": "<string>",
                                        "value": "<string>",
                                        "valueType": "<string>",
                                        "valueUnit": "<string>"
                                      }
                                    ],
                                    "relatedObjects": [
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      },
                                      {
                                        "developerName": "<string>",
                                        "fields": [
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          },
                                          {
                                            "dataType": "<string>",
                                            "developerName": "<string>",
                                            "keyCol": "<string>",
                                            "length": "<string>",
                                            "lookupCol": "<string>"
                                          }
                                        ],
                                        "filterCriteria": "<string>",
                                        "memberDmoName": "<string>",
                                        "paths": [
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          },
                                          {
                                            "cardinality": "<string>",
                                            "fieldName": "<string>",
                                            "parentFieldName": "<string>"
                                          }
                                        ],
                                        "recencyCriteria": [
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          },
                                          {
                                            "fieldName": "<string>",
                                            "value": "<string>",
                                            "valueType": "<string>",
                                            "valueUnit": "<string>"
                                          }
                                        ],
                                        "relatedObjects": [
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          },
                                          {
                                            "developerName": "<string>",
                                            "fields": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "filterCriteria": "<string>",
                                            "memberDmoName": "<string>",
                                            "paths": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "recencyCriteria": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "relatedObjects": [
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              },
                                              {
                                                "value": "<Error: Too many levels of nesting to fake this schema>"
                                              }
                                            ],
                                            "type": "<string>"
                                          }
                                        ],
                                        "type": "<string>"
                                      }
                                    ],
                                    "type": "<string>"
                                  }
                                ],
                                "type": "<string>"
                              }
                            ],
                            "type": "<string>"
                          },
                          "extendedProperties": "<object>",
                          "idDmoName": "<string>",
                          "primaryObjectName": "<string>",
                          "primaryObjectType": "<string>",
                          "status": "<string>",
                          "valuesDmoName": "<string>",
                          "version": "<string>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/data-transforms/data-transforms/{dataTransformNameOrId}/actions/cancel": {
      "post": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}",
          "actions"
        ],
        "summary": "cancelDataTransform",
        "description": "Cancel a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "canceldatatransform",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "message": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ]
                    },
                    "success": {
                      "type": "string",
                      "example": "<boolean>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errors": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ],
                      "success": "<boolean>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataTransformNameOrId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name or ID of the data transform to update.\n\n**Available Version:** 60.0\n"
        }
      ]
    },
    "/ssot/data-transforms/data-transforms/{dataTransformNameOrId}/actions/refresh-status": {
      "post": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}",
          "actions"
        ],
        "summary": "refreshDataTransformStatus",
        "description": "Refresh the status of a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "refreshdatatransformstatus",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "message": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ]
                    },
                    "success": {
                      "type": "string",
                      "example": "<boolean>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errors": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ],
                      "success": "<boolean>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataTransformNameOrId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name or ID of the data transform to update.\n\n**Available Version:** 60.0\n"
        }
      ]
    },
    "/ssot/data-transforms/data-transforms/{dataTransformNameOrId}/actions/retry": {
      "post": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}",
          "actions"
        ],
        "summary": "retryDataTransform",
        "description": "Retry a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "retrydatatransform",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "message": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ]
                    },
                    "success": {
                      "type": "string",
                      "example": "<boolean>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errors": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ],
                      "success": "<boolean>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataTransformNameOrId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name or ID of the data transform to update.\n\n**Available Version:** 60.0\n"
        }
      ]
    },
    "/ssot/data-transforms/data-transforms/{dataTransformNameOrId}/actions/run": {
      "post": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}",
          "actions"
        ],
        "summary": "runDataTransform",
        "description": "Run a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "rundatatransform",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "message": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ]
                    },
                    "success": {
                      "type": "string",
                      "example": "<boolean>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errors": [
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        },
                        {
                          "errorCode": "<string>",
                          "message": "<string>"
                        }
                      ],
                      "success": "<boolean>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataTransformNameOrId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name or ID of the data transform to update.\n\n**Available Version:** 60.0\n"
        }
      ]
    },
    "/ssot/data-transforms/data-transforms/{dataTransformNameOrId}/schedule": {
      "get": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}",
          "schedule"
        ],
        "summary": "getDataTransformSchedule",
        "description": "Get a data transform's schedule.\n\n**Available Version:** 60.0\n",
        "operationId": "getdatatransformschedule",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "frequency": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "nextScheduledDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "time": {
                      "type": "object",
                      "properties": {
                        "hour": {
                          "type": "string",
                          "example": "<integer>"
                        },
                        "minute": {
                          "type": "string",
                          "example": "<integer>"
                        },
                        "timezone": {
                          "type": "object",
                          "properties": {
                            "gmtOffset": {
                              "type": "string",
                              "example": "<double>"
                            },
                            "name": {
                              "type": "string",
                              "example": "<string>"
                            },
                            "zoneId": {
                              "type": "string",
                              "example": "<string>"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "frequency": "<string>",
                      "nextScheduledDate": "<string>",
                      "time": {
                        "hour": "<integer>",
                        "minute": "<integer>",
                        "timezone": {
                          "gmtOffset": "<double>",
                          "name": "<string>",
                          "zoneId": "<string>"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}",
          "schedule"
        ],
        "summary": "updateDataTransformSchedule",
        "description": "Update a data transform's schedule.\n\n**Available Version:** 60.0\n",
        "operationId": "updatedatatransformschedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "frequency": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "time": {
                    "type": "object",
                    "properties": {
                      "hour": {
                        "type": "string",
                        "example": "<integer>"
                      },
                      "minute": {
                        "type": "string",
                        "example": "<integer>"
                      },
                      "timeZone": {
                        "type": "string",
                        "example": "<string>"
                      }
                    }
                  }
                }
              },
              "examples": {
                "updateDataTransformSchedule": {
                  "value": {
                    "frequency": "<string>",
                    "time": {
                      "hour": "<integer>",
                      "minute": "<integer>",
                      "timeZone": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "frequency": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "nextScheduledDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "time": {
                      "type": "object",
                      "properties": {
                        "hour": {
                          "type": "string",
                          "example": "<integer>"
                        },
                        "minute": {
                          "type": "string",
                          "example": "<integer>"
                        },
                        "timezone": {
                          "type": "object",
                          "properties": {
                            "gmtOffset": {
                              "type": "string",
                              "example": "<double>"
                            },
                            "name": {
                              "type": "string",
                              "example": "<string>"
                            },
                            "zoneId": {
                              "type": "string",
                              "example": "<string>"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "frequency": "<string>",
                      "nextScheduledDate": "<string>",
                      "time": {
                        "hour": "<integer>",
                        "minute": "<integer>",
                        "timezone": {
                          "gmtOffset": "<double>",
                          "name": "<string>",
                          "zoneId": "<string>"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataTransformNameOrId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name or ID of the data transform to update.\n\n**Available Version:** 60.0\n"
        }
      ]
    },
    "/ssot/data-transforms/data-transforms/{dataTransformNameOrId}": {
      "get": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}"
        ],
        "summary": "getDataTransform",
        "description": "Get a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "getdatatransform",
        "parameters": [
          {
            "name": "filterGroup",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Group to filter on.\n\n**Available Version:** 60.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "name": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profilePhotoUrl": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastModifiedBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "name": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profilePhotoUrl": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "name": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "namespace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "url": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "createdBy": {
                        "id": "<string>",
                        "name": "<string>",
                        "profilePhotoUrl": "<string>"
                      },
                      "createdDate": "<string>",
                      "id": "<string>",
                      "label": "<string>",
                      "lastModifiedBy": {
                        "id": "<string>",
                        "name": "<string>",
                        "profilePhotoUrl": "<string>"
                      },
                      "lastModifiedDate": "<string>",
                      "name": "<string>",
                      "namespace": "<string>",
                      "url": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}"
        ],
        "summary": "updateDataTransform",
        "description": "Update a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "updatedatatransform",
        "parameters": [
          {
            "name": "filterGroup",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Group to filter on.\n\n**Available Version:** 60.0\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataSpaceName": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "definition": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "<string>"
                      },
                      "version": {
                        "type": "string",
                        "example": "<string>"
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "label": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "name": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "type": {
                    "type": "string",
                    "example": "<string>"
                  }
                }
              },
              "examples": {
                "updateDataTransform": {
                  "value": {
                    "dataSpaceName": "<string>",
                    "definition": {
                      "type": "<string>",
                      "version": "<string>"
                    },
                    "description": "<string>",
                    "label": "<string>",
                    "name": "<string>",
                    "type": "<string>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "name": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profilePhotoUrl": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastModifiedBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "name": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profilePhotoUrl": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "name": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "namespace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "url": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "createdBy": {
                        "id": "<string>",
                        "name": "<string>",
                        "profilePhotoUrl": "<string>"
                      },
                      "createdDate": "<string>",
                      "id": "<string>",
                      "label": "<string>",
                      "lastModifiedBy": {
                        "id": "<string>",
                        "name": "<string>",
                        "profilePhotoUrl": "<string>"
                      },
                      "lastModifiedDate": "<string>",
                      "name": "<string>",
                      "namespace": "<string>",
                      "url": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Transforms",
          "{dataTransformNameOrId}"
        ],
        "summary": "deleteDataTransform",
        "description": "Initiate the deletion of a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "deletedatatransform",
        "responses": {
          "200": {
            "description": "200",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "dataTransformNameOrId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name or ID of the data transform to update.\n\n**Available Version:** 60.0\n"
        }
      ]
    },
    "/ssot/data-transforms": {
      "get": {
        "tags": [
          "Data Transforms"
        ],
        "summary": "getDataTransforms",
        "description": "Get a list of data transforms.\n\n**Available Version:** 60.0\n",
        "operationId": "getdatatransforms",
        "parameters": [
          {
            "name": "filterGroup",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Group to filter on.\n\n**Available Version:** 60.0\n"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Maximum number of rows to return from `1`â€“`20`. If unspecified, the default number of rows is `20`.\n\n**Available Version:** 60.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. Must be an integer greater than zero. If unspecified, no rows are skipped.\n\n**Available Version:** 60.0\n"
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 60.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currentPageUrl": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "nextPageUrl": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "totalSize": {
                      "type": "string",
                      "example": "<integer>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "currentPageUrl": "<string>",
                      "nextPageUrl": "<string>",
                      "totalSize": "<integer>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Data Transforms"
        ],
        "summary": "createDataTransform",
        "description": "Create a data transform.\n\n**Available Version:** 60.0\n",
        "operationId": "createdatatransform",
        "parameters": [
          {
            "name": "filterGroup",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Group to filter on.\n\n**Available Version:** 60.0\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataSpaceName": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "definition": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "<string>"
                      },
                      "version": {
                        "type": "string",
                        "example": "<string>"
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "label": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "name": {
                    "type": "string",
                    "example": "<string>"
                  },
                  "type": {
                    "type": "string",
                    "example": "<string>"
                  }
                }
              },
              "examples": {
                "createDataTransform": {
                  "value": {
                    "dataSpaceName": "<string>",
                    "definition": {
                      "type": "<string>",
                      "version": "<string>"
                    },
                    "description": "<string>",
                    "label": "<string>",
                    "name": "<string>",
                    "type": "<string>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "name": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profilePhotoUrl": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastModifiedBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "name": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profilePhotoUrl": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "name": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "namespace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "url": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "createdBy": {
                        "id": "<string>",
                        "name": "<string>",
                        "profilePhotoUrl": "<string>"
                      },
                      "createdDate": "<string>",
                      "id": "<string>",
                      "label": "<string>",
                      "lastModifiedBy": {
                        "id": "<string>",
                        "name": "<string>",
                        "profilePhotoUrl": "<string>"
                      },
                      "lastModifiedDate": "<string>",
                      "name": "<string>",
                      "namespace": "<string>",
                      "url": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/identity-resolutions/identity-resolutions/{identityResolution}/actions/run-now": {
      "post": {
        "tags": [
          "Identity Resolution Rulesets",
          "by Identity Resolution",
          "actions1"
        ],
        "summary": "runIdentityResolutionRulesetNow",
        "description": "Run an identity resolution ruleset job on demand in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "runidentityresolutionrulesetnow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callingApp": {
                    "type": "string",
                    "example": "Flow"
                  },
                  "callingAppInfo": {
                    "type": "string",
                    "example": "10"
                  }
                }
              },
              "examples": {
                "runIdentityResolutionRulesetNow": {
                  "value": {
                    "callingApp": "Flow",
                    "callingAppInfo": "10"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "resultCode": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "identityResolution",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Developer name or ID of the ruleset."
        }
      ]
    },
    "/ssot/identity-resolutions/identity-resolutions/{identityResolution}": {
      "get": {
        "tags": [
          "Identity Resolution Rulesets",
          "by Identity Resolution"
        ],
        "summary": "getIdentityResolutionRuleset",
        "description": "Get an identity resolution ruleset in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "getidentityresolutionruleset",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "anonymousUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "configurationType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "consolidationRate": {
                      "type": "string",
                      "example": "<double>"
                    },
                    "dataSpaceName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "doesRunAutomatically": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "knownUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastJobCompleted": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastJobStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "matchRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "criteria": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "caseSensitiveMatch": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "entityName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "fieldName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "matchMethodType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "partyIdentificationInfo": {
                                  "type": "object",
                                  "properties": {
                                    "partyName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "partyType": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "shouldMatchOnBlank": {
                                  "type": "string",
                                  "example": "<boolean>"
                                }
                              }
                            },
                            "example": [
                              {
                                "caseSensitiveMatch": "<boolean>",
                                "entityName": "<string>",
                                "fieldName": "<string>",
                                "matchMethodType": "<string>",
                                "partyIdentificationInfo": {
                                  "partyName": "<string>",
                                  "partyType": "<string>"
                                },
                                "shouldMatchOnBlank": "<boolean>"
                              },
                              {
                                "caseSensitiveMatch": "<boolean>",
                                "entityName": "<string>",
                                "fieldName": "<string>",
                                "matchMethodType": "<string>",
                                "partyIdentificationInfo": {
                                  "partyName": "<string>",
                                  "partyType": "<string>"
                                },
                                "shouldMatchOnBlank": "<boolean>"
                              }
                            ]
                          },
                          "label": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        },
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        }
                      ]
                    },
                    "matchedSourceProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "objectApiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "reconciliationRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entityName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fieldName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "ruleType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "shouldIgnoreEmptyValue": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "sources": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "<string>"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "fieldName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ]
                              },
                              {
                                "fieldName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ]
                              }
                            ]
                          },
                          "linkDmoName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "ruleType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "shouldIgnoreEmptyValue": {
                            "type": "string",
                            "example": "<boolean>"
                          },
                          "sources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "<string>"
                                }
                              }
                            },
                            "example": [
                              {
                                "name": "<string>"
                              },
                              {
                                "name": "<string>"
                              }
                            ]
                          },
                          "unifiedDmoName": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        },
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        }
                      ]
                    },
                    "rulesetId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rulesetStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "sourceProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "totalUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "anonymousUnifiedProfiles": "<int64>",
                      "configurationType": "<string>",
                      "consolidationRate": "<double>",
                      "dataSpaceName": "<string>",
                      "description": "<string>",
                      "doesRunAutomatically": "<boolean>",
                      "id": "<string>",
                      "knownUnifiedProfiles": "<int64>",
                      "label": "<string>",
                      "lastJobCompleted": "<string>",
                      "lastJobStatus": "<string>",
                      "matchRules": [
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        },
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        }
                      ],
                      "matchedSourceProfiles": "<int64>",
                      "objectApiName": "<string>",
                      "reconciliationRules": [
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        },
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        }
                      ],
                      "rulesetId": "<string>",
                      "rulesetStatus": "<string>",
                      "sourceProfiles": "<int64>",
                      "totalUnifiedProfiles": "<int64>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Identity Resolution Rulesets",
          "by Identity Resolution"
        ],
        "summary": "deleteIdentityResolutionRuleset",
        "description": "Delete an identity resolution ruleset in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "deleteidentityresolutionruleset",
        "responses": {
          "204": {
            "description": "204",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Identity Resolution Rulesets",
          "by Identity Resolution"
        ],
        "summary": "updateIdentityResolutionRuleset",
        "description": "Update an identity resolution ruleset in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "updateidentityresolutionruleset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "description"
                  },
                  "doesRunAutomatically": {
                    "type": "boolean",
                    "example": false
                  },
                  "label": {
                    "type": "string",
                    "example": "some label"
                  },
                  "matchRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "criteria": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entityName": {
                                "type": "string",
                                "example": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm"
                              },
                              "fieldName": {
                                "type": "string",
                                "example": "orgnamespace__*EmailAddress*__c"
                              },
                              "matchMethodType": {
                                "type": "string",
                                "example": "EXACT_NORMALIZED"
                              },
                              "shouldMatchOnBlank": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          },
                          "example": [
                            {
                              "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm",
                              "fieldName": "orgnamespace__*EmailAddress*__c",
                              "matchMethodType": "EXACT_NORMALIZED",
                              "shouldMatchOnBlank": false
                            }
                          ]
                        },
                        "label": {
                          "type": "string",
                          "example": "Normalized Email"
                        }
                      }
                    },
                    "example": [
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*EmailAddress*__c",
                            "matchMethodType": "EXACT_NORMALIZED",
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Normalized Email"
                      },
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*LastName*__c",
                            "matchMethodType": "EXACT",
                            "partyIdentificationInfo": {
                              "partyName": "SomeID"
                            },
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Last Name and PartyId"
                      }
                    ]
                  },
                  "reconciliationRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entityName": {
                          "type": "string",
                          "example": "orgnamespace__*Individual*MyDataSpace__dlm"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldName": {
                                "type": "string",
                                "example": "orgnamespace__*Id*__c"
                              },
                              "ruleType": {
                                "type": "string",
                                "example": "SOURCE_SEQUENCE"
                              },
                              "shouldIgnoreEmptyValue": {
                                "type": "boolean",
                                "example": true
                              },
                              "sources": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "Patients__dll"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "name": "Patients__dll"
                                  },
                                  {
                                    "name": "SomeAnother__dll"
                                  }
                                ]
                              }
                            }
                          },
                          "example": [
                            {
                              "fieldName": "orgnamespace__*Id*__c",
                              "ruleType": "SOURCE_SEQUENCE",
                              "shouldIgnoreEmptyValue": true,
                              "sources": [
                                {
                                  "name": "Patients__dll"
                                },
                                {
                                  "name": "SomeAnother__dll"
                                }
                              ]
                            }
                          ]
                        },
                        "ruleType": {
                          "type": "string",
                          "example": "LAST_UPDATED"
                        },
                        "shouldIgnoreEmptyValue": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "example": [
                      {
                        "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                        "fields": [
                          {
                            "fieldName": "orgnamespace__*Id*__c",
                            "ruleType": "SOURCE_SEQUENCE",
                            "shouldIgnoreEmptyValue": true,
                            "sources": [
                              {
                                "name": "Patients__dll"
                              },
                              {
                                "name": "SomeAnother__dll"
                              }
                            ]
                          }
                        ],
                        "ruleType": "LAST_UPDATED",
                        "shouldIgnoreEmptyValue": true
                      },
                      {
                        "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "updateIdentityResolutionRuleset": {
                  "value": {
                    "description": "description",
                    "doesRunAutomatically": false,
                    "label": "some label",
                    "matchRules": [
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*EmailAddress*__c",
                            "matchMethodType": "EXACT_NORMALIZED",
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Normalized Email"
                      },
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*LastName*__c",
                            "matchMethodType": "EXACT",
                            "partyIdentificationInfo": {
                              "partyName": "SomeID"
                            },
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Last Name and PartyId"
                      }
                    ],
                    "reconciliationRules": [
                      {
                        "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                        "fields": [
                          {
                            "fieldName": "orgnamespace__*Id*__c",
                            "ruleType": "SOURCE_SEQUENCE",
                            "shouldIgnoreEmptyValue": true,
                            "sources": [
                              {
                                "name": "Patients__dll"
                              },
                              {
                                "name": "SomeAnother__dll"
                              }
                            ]
                          }
                        ],
                        "ruleType": "LAST_UPDATED",
                        "shouldIgnoreEmptyValue": true
                      },
                      {
                        "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "anonymousUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "configurationType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "consolidationRate": {
                      "type": "string",
                      "example": "<double>"
                    },
                    "dataSpaceName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "doesRunAutomatically": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "knownUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastJobCompleted": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastJobStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "matchRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "criteria": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "caseSensitiveMatch": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "entityName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "fieldName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "matchMethodType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "partyIdentificationInfo": {
                                  "type": "object",
                                  "properties": {
                                    "partyName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "partyType": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "shouldMatchOnBlank": {
                                  "type": "string",
                                  "example": "<boolean>"
                                }
                              }
                            },
                            "example": [
                              {
                                "caseSensitiveMatch": "<boolean>",
                                "entityName": "<string>",
                                "fieldName": "<string>",
                                "matchMethodType": "<string>",
                                "partyIdentificationInfo": {
                                  "partyName": "<string>",
                                  "partyType": "<string>"
                                },
                                "shouldMatchOnBlank": "<boolean>"
                              },
                              {
                                "caseSensitiveMatch": "<boolean>",
                                "entityName": "<string>",
                                "fieldName": "<string>",
                                "matchMethodType": "<string>",
                                "partyIdentificationInfo": {
                                  "partyName": "<string>",
                                  "partyType": "<string>"
                                },
                                "shouldMatchOnBlank": "<boolean>"
                              }
                            ]
                          },
                          "label": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        },
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        }
                      ]
                    },
                    "matchedSourceProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "objectApiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "reconciliationRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entityName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fieldName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "ruleType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "shouldIgnoreEmptyValue": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "sources": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "<string>"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "fieldName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ]
                              },
                              {
                                "fieldName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ]
                              }
                            ]
                          },
                          "linkDmoName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "ruleType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "shouldIgnoreEmptyValue": {
                            "type": "string",
                            "example": "<boolean>"
                          },
                          "sources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "<string>"
                                }
                              }
                            },
                            "example": [
                              {
                                "name": "<string>"
                              },
                              {
                                "name": "<string>"
                              }
                            ]
                          },
                          "unifiedDmoName": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        },
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        }
                      ]
                    },
                    "rulesetId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rulesetStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "sourceProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "totalUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "anonymousUnifiedProfiles": "<int64>",
                      "configurationType": "<string>",
                      "consolidationRate": "<double>",
                      "dataSpaceName": "<string>",
                      "description": "<string>",
                      "doesRunAutomatically": "<boolean>",
                      "id": "<string>",
                      "knownUnifiedProfiles": "<int64>",
                      "label": "<string>",
                      "lastJobCompleted": "<string>",
                      "lastJobStatus": "<string>",
                      "matchRules": [
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        },
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        }
                      ],
                      "matchedSourceProfiles": "<int64>",
                      "objectApiName": "<string>",
                      "reconciliationRules": [
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        },
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        }
                      ],
                      "rulesetId": "<string>",
                      "rulesetStatus": "<string>",
                      "sourceProfiles": "<int64>",
                      "totalUnifiedProfiles": "<int64>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "identityResolution",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Developer name or ID of the ruleset."
        }
      ]
    },
    "/ssot/identity-resolutions": {
      "get": {
        "tags": [
          "Identity Resolution Rulesets"
        ],
        "summary": "getIdentityResolutionRulesets",
        "description": "Get identity resolution rulesets in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "getidentityresolutionrulesets",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "identityResolutions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "anonymousUnifiedProfiles": {
                            "type": "string",
                            "example": "<int64>"
                          },
                          "configurationType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "consolidationRate": {
                            "type": "string",
                            "example": "<double>"
                          },
                          "dataSpaceName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "description": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "doesRunAutomatically": {
                            "type": "string",
                            "example": "<boolean>"
                          },
                          "id": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "knownUnifiedProfiles": {
                            "type": "string",
                            "example": "<int64>"
                          },
                          "label": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "lastJobCompleted": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "lastJobStatus": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "matchRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "criteria": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "caseSensitiveMatch": {
                                        "type": "string",
                                        "example": "<boolean>"
                                      },
                                      "entityName": {
                                        "type": "string",
                                        "example": "<string>"
                                      },
                                      "fieldName": {
                                        "type": "string",
                                        "example": "<string>"
                                      },
                                      "matchMethodType": {
                                        "type": "string",
                                        "example": "<string>"
                                      },
                                      "partyIdentificationInfo": {
                                        "type": "object",
                                        "properties": {
                                          "partyName": {
                                            "type": "string",
                                            "example": "<string>"
                                          },
                                          "partyType": {
                                            "type": "string",
                                            "example": "<string>"
                                          }
                                        }
                                      },
                                      "shouldMatchOnBlank": {
                                        "type": "string",
                                        "example": "<boolean>"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "caseSensitiveMatch": "<boolean>",
                                      "entityName": "<string>",
                                      "fieldName": "<string>",
                                      "matchMethodType": "<string>",
                                      "partyIdentificationInfo": {
                                        "partyName": "<string>",
                                        "partyType": "<string>"
                                      },
                                      "shouldMatchOnBlank": "<boolean>"
                                    },
                                    {
                                      "caseSensitiveMatch": "<boolean>",
                                      "entityName": "<string>",
                                      "fieldName": "<string>",
                                      "matchMethodType": "<string>",
                                      "partyIdentificationInfo": {
                                        "partyName": "<string>",
                                        "partyType": "<string>"
                                      },
                                      "shouldMatchOnBlank": "<boolean>"
                                    }
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "example": "<string>"
                                }
                              }
                            },
                            "example": [
                              {
                                "criteria": [
                                  {
                                    "caseSensitiveMatch": "<boolean>",
                                    "entityName": "<string>",
                                    "fieldName": "<string>",
                                    "matchMethodType": "<string>",
                                    "partyIdentificationInfo": {
                                      "partyName": "<string>",
                                      "partyType": "<string>"
                                    },
                                    "shouldMatchOnBlank": "<boolean>"
                                  },
                                  {
                                    "caseSensitiveMatch": "<boolean>",
                                    "entityName": "<string>",
                                    "fieldName": "<string>",
                                    "matchMethodType": "<string>",
                                    "partyIdentificationInfo": {
                                      "partyName": "<string>",
                                      "partyType": "<string>"
                                    },
                                    "shouldMatchOnBlank": "<boolean>"
                                  }
                                ],
                                "label": "<string>"
                              },
                              {
                                "criteria": [
                                  {
                                    "caseSensitiveMatch": "<boolean>",
                                    "entityName": "<string>",
                                    "fieldName": "<string>",
                                    "matchMethodType": "<string>",
                                    "partyIdentificationInfo": {
                                      "partyName": "<string>",
                                      "partyType": "<string>"
                                    },
                                    "shouldMatchOnBlank": "<boolean>"
                                  },
                                  {
                                    "caseSensitiveMatch": "<boolean>",
                                    "entityName": "<string>",
                                    "fieldName": "<string>",
                                    "matchMethodType": "<string>",
                                    "partyIdentificationInfo": {
                                      "partyName": "<string>",
                                      "partyType": "<string>"
                                    },
                                    "shouldMatchOnBlank": "<boolean>"
                                  }
                                ],
                                "label": "<string>"
                              }
                            ]
                          },
                          "matchedSourceProfiles": {
                            "type": "string",
                            "example": "<int64>"
                          },
                          "objectApiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "reconciliationRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "entityName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "fields": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "fieldName": {
                                        "type": "string",
                                        "example": "<string>"
                                      },
                                      "ruleType": {
                                        "type": "string",
                                        "example": "<string>"
                                      },
                                      "shouldIgnoreEmptyValue": {
                                        "type": "string",
                                        "example": "<boolean>"
                                      },
                                      "sources": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "<string>"
                                            }
                                          }
                                        },
                                        "example": [
                                          {
                                            "name": "<string>"
                                          },
                                          {
                                            "name": "<string>"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "fieldName": "<string>",
                                      "ruleType": "<string>",
                                      "shouldIgnoreEmptyValue": "<boolean>",
                                      "sources": [
                                        {
                                          "name": "<string>"
                                        },
                                        {
                                          "name": "<string>"
                                        }
                                      ]
                                    },
                                    {
                                      "fieldName": "<string>",
                                      "ruleType": "<string>",
                                      "shouldIgnoreEmptyValue": "<boolean>",
                                      "sources": [
                                        {
                                          "name": "<string>"
                                        },
                                        {
                                          "name": "<string>"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "linkDmoName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "ruleType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "shouldIgnoreEmptyValue": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "sources": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "<string>"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                "unifiedDmoName": {
                                  "type": "string",
                                  "example": "<string>"
                                }
                              }
                            },
                            "example": [
                              {
                                "entityName": "<string>",
                                "fields": [
                                  {
                                    "fieldName": "<string>",
                                    "ruleType": "<string>",
                                    "shouldIgnoreEmptyValue": "<boolean>",
                                    "sources": [
                                      {
                                        "name": "<string>"
                                      },
                                      {
                                        "name": "<string>"
                                      }
                                    ]
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "ruleType": "<string>",
                                    "shouldIgnoreEmptyValue": "<boolean>",
                                    "sources": [
                                      {
                                        "name": "<string>"
                                      },
                                      {
                                        "name": "<string>"
                                      }
                                    ]
                                  }
                                ],
                                "linkDmoName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ],
                                "unifiedDmoName": "<string>"
                              },
                              {
                                "entityName": "<string>",
                                "fields": [
                                  {
                                    "fieldName": "<string>",
                                    "ruleType": "<string>",
                                    "shouldIgnoreEmptyValue": "<boolean>",
                                    "sources": [
                                      {
                                        "name": "<string>"
                                      },
                                      {
                                        "name": "<string>"
                                      }
                                    ]
                                  },
                                  {
                                    "fieldName": "<string>",
                                    "ruleType": "<string>",
                                    "shouldIgnoreEmptyValue": "<boolean>",
                                    "sources": [
                                      {
                                        "name": "<string>"
                                      },
                                      {
                                        "name": "<string>"
                                      }
                                    ]
                                  }
                                ],
                                "linkDmoName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ],
                                "unifiedDmoName": "<string>"
                              }
                            ]
                          },
                          "rulesetId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "rulesetStatus": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "sourceProfiles": {
                            "type": "string",
                            "example": "<int64>"
                          },
                          "totalUnifiedProfiles": {
                            "type": "string",
                            "example": "<int64>"
                          }
                        }
                      },
                      "example": [
                        {
                          "anonymousUnifiedProfiles": "<int64>",
                          "configurationType": "<string>",
                          "consolidationRate": "<double>",
                          "dataSpaceName": "<string>",
                          "description": "<string>",
                          "doesRunAutomatically": "<boolean>",
                          "id": "<string>",
                          "knownUnifiedProfiles": "<int64>",
                          "label": "<string>",
                          "lastJobCompleted": "<string>",
                          "lastJobStatus": "<string>",
                          "matchRules": [
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            },
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            }
                          ],
                          "matchedSourceProfiles": "<int64>",
                          "objectApiName": "<string>",
                          "reconciliationRules": [
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            },
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            }
                          ],
                          "rulesetId": "<string>",
                          "rulesetStatus": "<string>",
                          "sourceProfiles": "<int64>",
                          "totalUnifiedProfiles": "<int64>"
                        },
                        {
                          "anonymousUnifiedProfiles": "<int64>",
                          "configurationType": "<string>",
                          "consolidationRate": "<double>",
                          "dataSpaceName": "<string>",
                          "description": "<string>",
                          "doesRunAutomatically": "<boolean>",
                          "id": "<string>",
                          "knownUnifiedProfiles": "<int64>",
                          "label": "<string>",
                          "lastJobCompleted": "<string>",
                          "lastJobStatus": "<string>",
                          "matchRules": [
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            },
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            }
                          ],
                          "matchedSourceProfiles": "<int64>",
                          "objectApiName": "<string>",
                          "reconciliationRules": [
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            },
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            }
                          ],
                          "rulesetId": "<string>",
                          "rulesetStatus": "<string>",
                          "sourceProfiles": "<int64>",
                          "totalUnifiedProfiles": "<int64>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "identityResolutions": [
                        {
                          "anonymousUnifiedProfiles": "<int64>",
                          "configurationType": "<string>",
                          "consolidationRate": "<double>",
                          "dataSpaceName": "<string>",
                          "description": "<string>",
                          "doesRunAutomatically": "<boolean>",
                          "id": "<string>",
                          "knownUnifiedProfiles": "<int64>",
                          "label": "<string>",
                          "lastJobCompleted": "<string>",
                          "lastJobStatus": "<string>",
                          "matchRules": [
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            },
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            }
                          ],
                          "matchedSourceProfiles": "<int64>",
                          "objectApiName": "<string>",
                          "reconciliationRules": [
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            },
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            }
                          ],
                          "rulesetId": "<string>",
                          "rulesetStatus": "<string>",
                          "sourceProfiles": "<int64>",
                          "totalUnifiedProfiles": "<int64>"
                        },
                        {
                          "anonymousUnifiedProfiles": "<int64>",
                          "configurationType": "<string>",
                          "consolidationRate": "<double>",
                          "dataSpaceName": "<string>",
                          "description": "<string>",
                          "doesRunAutomatically": "<boolean>",
                          "id": "<string>",
                          "knownUnifiedProfiles": "<int64>",
                          "label": "<string>",
                          "lastJobCompleted": "<string>",
                          "lastJobStatus": "<string>",
                          "matchRules": [
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            },
                            {
                              "criteria": [
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                },
                                {
                                  "caseSensitiveMatch": "<boolean>",
                                  "entityName": "<string>",
                                  "fieldName": "<string>",
                                  "matchMethodType": "<string>",
                                  "partyIdentificationInfo": {
                                    "partyName": "<string>",
                                    "partyType": "<string>"
                                  },
                                  "shouldMatchOnBlank": "<boolean>"
                                }
                              ],
                              "label": "<string>"
                            }
                          ],
                          "matchedSourceProfiles": "<int64>",
                          "objectApiName": "<string>",
                          "reconciliationRules": [
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            },
                            {
                              "entityName": "<string>",
                              "fields": [
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                },
                                {
                                  "fieldName": "<string>",
                                  "ruleType": "<string>",
                                  "shouldIgnoreEmptyValue": "<boolean>",
                                  "sources": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              ],
                              "linkDmoName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ],
                              "unifiedDmoName": "<string>"
                            }
                          ],
                          "rulesetId": "<string>",
                          "rulesetStatus": "<string>",
                          "sourceProfiles": "<int64>",
                          "totalUnifiedProfiles": "<int64>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Identity Resolution Rulesets"
        ],
        "summary": "createIdentityResolutionRuleset",
        "description": "Create an identity resolution ruleset in Data Cloud.\n\n**Available Version:** 57.0\n",
        "operationId": "createidentityresolutionruleset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "configurationType": {
                    "type": "string",
                    "example": "Individual"
                  },
                  "description": {
                    "type": "string",
                    "example": "description"
                  },
                  "doesRunAutomatically": {
                    "type": "boolean",
                    "example": false
                  },
                  "label": {
                    "type": "string",
                    "example": "some label"
                  },
                  "matchRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "criteria": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entityName": {
                                "type": "string",
                                "example": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm"
                              },
                              "fieldName": {
                                "type": "string",
                                "example": "orgnamespace__*EmailAddress*__c"
                              },
                              "matchMethodType": {
                                "type": "string",
                                "example": "EXACT_NORMALIZED"
                              },
                              "shouldMatchOnBlank": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          },
                          "example": [
                            {
                              "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm",
                              "fieldName": "orgnamespace__*EmailAddress*__c",
                              "matchMethodType": "EXACT_NORMALIZED",
                              "shouldMatchOnBlank": false
                            }
                          ]
                        },
                        "label": {
                          "type": "string",
                          "example": "Normalized Email"
                        }
                      }
                    },
                    "example": [
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*EmailAddress*__c",
                            "matchMethodType": "EXACT_NORMALIZED",
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Normalized Email"
                      },
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*LastName*__c",
                            "matchMethodType": "EXACT",
                            "partyIdentificationInfo": {
                              "partyName": "SomeID"
                            },
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Last Name and PartyId"
                      }
                    ]
                  },
                  "reconciliationRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entityName": {
                          "type": "string",
                          "example": "orgnamespace__*Individual*MyDataSpace__dlm"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldName": {
                                "type": "string",
                                "example": "orgnamespace__*Id*__c"
                              },
                              "ruleType": {
                                "type": "string",
                                "example": "SOURCE_SEQUENCE"
                              },
                              "shouldIgnoreEmptyValue": {
                                "type": "boolean",
                                "example": true
                              },
                              "sources": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "Patients__dll"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "name": "Patients__dll"
                                  },
                                  {
                                    "name": "SomeAnother__dll"
                                  }
                                ]
                              }
                            }
                          },
                          "example": [
                            {
                              "fieldName": "orgnamespace__*Id*__c",
                              "ruleType": "SOURCE_SEQUENCE",
                              "shouldIgnoreEmptyValue": true,
                              "sources": [
                                {
                                  "name": "Patients__dll"
                                },
                                {
                                  "name": "SomeAnother__dll"
                                }
                              ]
                            }
                          ]
                        },
                        "ruleType": {
                          "type": "string",
                          "example": "LAST_UPDATED"
                        },
                        "shouldIgnoreEmptyValue": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "example": [
                      {
                        "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                        "fields": [
                          {
                            "fieldName": "orgnamespace__*Id*__c",
                            "ruleType": "SOURCE_SEQUENCE",
                            "shouldIgnoreEmptyValue": true,
                            "sources": [
                              {
                                "name": "Patients__dll"
                              },
                              {
                                "name": "SomeAnother__dll"
                              }
                            ]
                          }
                        ],
                        "ruleType": "LAST_UPDATED",
                        "shouldIgnoreEmptyValue": true
                      },
                      {
                        "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm"
                      }
                    ]
                  },
                  "rulesetId": {
                    "type": "string",
                    "example": "sufx"
                  }
                }
              },
              "examples": {
                "createIdentityResolutionRuleset": {
                  "value": {
                    "configurationType": "Individual",
                    "description": "description",
                    "doesRunAutomatically": false,
                    "label": "some label",
                    "matchRules": [
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*EmailAddress*__c",
                            "matchMethodType": "EXACT_NORMALIZED",
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Normalized Email"
                      },
                      {
                        "criteria": [
                          {
                            "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                            "fieldName": "orgnamespace__*LastName*__c",
                            "matchMethodType": "EXACT",
                            "partyIdentificationInfo": {
                              "partyName": "SomeID"
                            },
                            "shouldMatchOnBlank": false
                          }
                        ],
                        "label": "Last Name and PartyId"
                      }
                    ],
                    "reconciliationRules": [
                      {
                        "entityName": "orgnamespace__*Individual*MyDataSpace__dlm",
                        "fields": [
                          {
                            "fieldName": "orgnamespace__*Id*__c",
                            "ruleType": "SOURCE_SEQUENCE",
                            "shouldIgnoreEmptyValue": true,
                            "sources": [
                              {
                                "name": "Patients__dll"
                              },
                              {
                                "name": "SomeAnother__dll"
                              }
                            ]
                          }
                        ],
                        "ruleType": "LAST_UPDATED",
                        "shouldIgnoreEmptyValue": true
                      },
                      {
                        "entityName": "orgnamespace__*ContactPointEmail*MyDataSpace__dlm"
                      }
                    ],
                    "rulesetId": "sufx"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "anonymousUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "configurationType": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "consolidationRate": {
                      "type": "string",
                      "example": "<double>"
                    },
                    "dataSpaceName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "doesRunAutomatically": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "id": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "knownUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "label": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastJobCompleted": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "lastJobStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "matchRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "criteria": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "caseSensitiveMatch": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "entityName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "fieldName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "matchMethodType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "partyIdentificationInfo": {
                                  "type": "object",
                                  "properties": {
                                    "partyName": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "partyType": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "shouldMatchOnBlank": {
                                  "type": "string",
                                  "example": "<boolean>"
                                }
                              }
                            },
                            "example": [
                              {
                                "caseSensitiveMatch": "<boolean>",
                                "entityName": "<string>",
                                "fieldName": "<string>",
                                "matchMethodType": "<string>",
                                "partyIdentificationInfo": {
                                  "partyName": "<string>",
                                  "partyType": "<string>"
                                },
                                "shouldMatchOnBlank": "<boolean>"
                              },
                              {
                                "caseSensitiveMatch": "<boolean>",
                                "entityName": "<string>",
                                "fieldName": "<string>",
                                "matchMethodType": "<string>",
                                "partyIdentificationInfo": {
                                  "partyName": "<string>",
                                  "partyType": "<string>"
                                },
                                "shouldMatchOnBlank": "<boolean>"
                              }
                            ]
                          },
                          "label": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        },
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        }
                      ]
                    },
                    "matchedSourceProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "objectApiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "reconciliationRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entityName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fieldName": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "ruleType": {
                                  "type": "string",
                                  "example": "<string>"
                                },
                                "shouldIgnoreEmptyValue": {
                                  "type": "string",
                                  "example": "<boolean>"
                                },
                                "sources": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "<string>"
                                      }
                                    }
                                  },
                                  "example": [
                                    {
                                      "name": "<string>"
                                    },
                                    {
                                      "name": "<string>"
                                    }
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "fieldName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ]
                              },
                              {
                                "fieldName": "<string>",
                                "ruleType": "<string>",
                                "shouldIgnoreEmptyValue": "<boolean>",
                                "sources": [
                                  {
                                    "name": "<string>"
                                  },
                                  {
                                    "name": "<string>"
                                  }
                                ]
                              }
                            ]
                          },
                          "linkDmoName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "ruleType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "shouldIgnoreEmptyValue": {
                            "type": "string",
                            "example": "<boolean>"
                          },
                          "sources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "<string>"
                                }
                              }
                            },
                            "example": [
                              {
                                "name": "<string>"
                              },
                              {
                                "name": "<string>"
                              }
                            ]
                          },
                          "unifiedDmoName": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        },
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        }
                      ]
                    },
                    "rulesetId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rulesetStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "sourceProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    },
                    "totalUnifiedProfiles": {
                      "type": "string",
                      "example": "<int64>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "anonymousUnifiedProfiles": "<int64>",
                      "configurationType": "<string>",
                      "consolidationRate": "<double>",
                      "dataSpaceName": "<string>",
                      "description": "<string>",
                      "doesRunAutomatically": "<boolean>",
                      "id": "<string>",
                      "knownUnifiedProfiles": "<int64>",
                      "label": "<string>",
                      "lastJobCompleted": "<string>",
                      "lastJobStatus": "<string>",
                      "matchRules": [
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        },
                        {
                          "criteria": [
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            },
                            {
                              "caseSensitiveMatch": "<boolean>",
                              "entityName": "<string>",
                              "fieldName": "<string>",
                              "matchMethodType": "<string>",
                              "partyIdentificationInfo": {
                                "partyName": "<string>",
                                "partyType": "<string>"
                              },
                              "shouldMatchOnBlank": "<boolean>"
                            }
                          ],
                          "label": "<string>"
                        }
                      ],
                      "matchedSourceProfiles": "<int64>",
                      "objectApiName": "<string>",
                      "reconciliationRules": [
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        },
                        {
                          "entityName": "<string>",
                          "fields": [
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            },
                            {
                              "fieldName": "<string>",
                              "ruleType": "<string>",
                              "shouldIgnoreEmptyValue": "<boolean>",
                              "sources": [
                                {
                                  "name": "<string>"
                                },
                                {
                                  "name": "<string>"
                                }
                              ]
                            }
                          ],
                          "linkDmoName": "<string>",
                          "ruleType": "<string>",
                          "shouldIgnoreEmptyValue": "<boolean>",
                          "sources": [
                            {
                              "name": "<string>"
                            },
                            {
                              "name": "<string>"
                            }
                          ],
                          "unifiedDmoName": "<string>"
                        }
                      ],
                      "rulesetId": "<string>",
                      "rulesetStatus": "<string>",
                      "sourceProfiles": "<int64>",
                      "totalUnifiedProfiles": "<int64>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/insight/calculated-insights/{ciName}": {
      "get": {
        "tags": [
          "Insights",
          "by Calculated Insight Name"
        ],
        "summary": "getCalculatedInsightQuery",
        "description": "Query a Calculated Insight object in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getcalculatedinsightquery",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1-4,999. If unspecified, the default value is `4999`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "dimensions",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 10 dimensions, such as `GenderId__c,` to project. If unspecified, this parameter includes all of the available dimensions.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Filter the result set to a more narrow scope or specific type, such as `[GenderId__c=Male,â€‹FirstName__c=Angel]`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "measures",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 5 measures, such as `TotalSales__c,` to project. If unspecified, this parameter includes all of the available measures.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `GenderId__c ASC,â€‹Occupation__c DESC`. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "timeGranularity",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Time range for the measures. Values are: `HOUR`, `DAY`, `MONTH`, `QUARTER`, or `YEAR`. \n\nIf unspecified, no time range is applied.\n\n**Available Version:** 54.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "string",
                          "example": "<object>"
                        }
                      }
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": "<object>"
                      },
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "ciName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the calculated insight object."
        }
      ]
    },
    "/ssot/insight/metadata": {
      "get": {
        "tags": [
          "Insights",
          "Metadata"
        ],
        "summary": "getInsightMetadata",
        "description": "Get Insight metadata, including Calculated Insight objects, their dimensions and measures in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getinsightmetadata",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/octet-stream": {
                "examples": {
                  "200": {
                    "value": "null"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/insight/metadata/metadata/{ciName}": {
      "get": {
        "tags": [
          "Insights",
          "Metadata"
        ],
        "summary": "getCalculatedInsightMetadata",
        "description": "Get metadata for a Calculated Insight object in Data Cloud. Metadata includes dimensions and measures.\n\n**Available Version:** 52.0\n",
        "operationId": "getcalculatedinsightmetadata",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/octet-stream": {
                "examples": {
                  "200": {
                    "value": "null"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "ciName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the calculated insight object."
        }
      ]
    },
    "/ssot/metadata": {
      "get": {
        "tags": [
          "Metadata1"
        ],
        "summary": "getMetadata",
        "description": "Get all metadata, including Calculated Insights, Engagement, Profile, and other objects, as well as their relationships to other objects in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getmetadata",
        "parameters": [
          {
            "name": "entityCategory",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Category of the metadata entity. Valid values are `Profile`, `Engagement`, and `Related`. If unspecified, all category entities are returned.\n\n**Available Version:** 54.0\n"
          },
          {
            "name": "entityName",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Metadata name of the entity, for example `UnifiedIndividual__dlm`. If unspecified, a complete list of entities is returned.\n\n**Available Version:** 54.0\n"
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Type of metadata entity requested. Valid values are `DataLakeObject`, `DataModelObject`, and `CalculatedInsight`. If unspecified, all types are returned.\n\n**Available Version:** 54.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/octet-stream": {
                "examples": {
                  "200": {
                    "value": "null"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/profile/metadata": {
      "get": {
        "tags": [
          "Profile Library",
          "Metadata12"
        ],
        "summary": "getProfileMetadata",
        "description": "Get metadata for data model objects in the profile category, including Individual, Contact Point Email, Unified Individual, and Contact Point Address objects in Data Cloud. Metadata includes the objects, their fields, and category.\n\n**Available Version:** 52.0\n",
        "operationId": "getprofilemetadata",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/octet-stream": {
                "examples": {
                  "200": {
                    "value": "null"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/profile/metadata/metadata/{dataModelName}": {
      "get": {
        "tags": [
          "Profile Library",
          "Metadata12"
        ],
        "summary": "getProfileMetadataDataModelObject",
        "description": "Get metadata for a data model object in the profile category, such as Individual, Contact Point Email, Unified Individual, and Contact Point Address in Data Cloud. Metadata includes the list of fields, data types, and indexes available for lookup.\n\n**Available Version:** 52.0\n",
        "operationId": "getprofilemetadatadatamodelobject",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/octet-stream": {
                "examples": {
                  "200": {
                    "value": "null"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        }
      ]
    },
    "/ssot/profile/{dataModelName}/{dataModelName}/{id}/calculated-insights/{ciName}": {
      "get": {
        "tags": [
          "Profile Library",
          "by Data Model Name",
          "by ID",
          "by Calculated Insights",
          "by Calculated Insight Name1"
        ],
        "summary": "getProfileQueryDataModelObjectAndCalculatedInsightWithSearchKey",
        "description": "Query a Profile data model object and a Calculated Insight object using filters and a search key in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getprofilequerydatamodelobjectandcalculatedinsightwithsearchkey",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1-4,999. If unspecified, the default value is `100`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "dimensions",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 10 dimensions, such as `GenderId__c`, to project. If unspecified, this parameter includes all of the available dimensions.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 50 field names that you want to include in the result, for example, `Id__c,FirstName__c`, `GenderId__c,Occupation__c`. If unspecified, `Id__c` is returned.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of equality expressions within square brackets, for example, `[FirstName__c=DON]`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "measures",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 5 measures, such as `TotalSales__c,` to project. If unspecified, this parameter includes all of the available measures.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `GenderId__c ASC,â€‹Occupation__c DESC`. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "searchKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "If a field other than the primary key is used, name of the key field, for example, `FirstName__c`. Parameter is required for secondary key. \n\n**Available Version:** 52.0\n"
          },
          {
            "name": "timeGranularity",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Time range for the measures. Values are: `HOUR`, `DAY`, `MONTH`, `QUARTER`, or `YEAR`. \n\nIf unspecified, no time range is applied.\n\n**Available Version:** 54.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "string",
                          "example": "<object>"
                        }
                      }
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": "<object>"
                      },
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        },
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "ID of the data model object (value of the primary or secondary key field)."
        },
        {
          "name": "ciName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the calculated insight object."
        }
      ]
    },
    "/ssot/profile/{dataModelName}/{dataModelName}/{id}": {
      "get": {
        "tags": [
          "Profile Library",
          "by Data Model Name",
          "by ID"
        ],
        "summary": "getProfileQueryDataModelObjectWithSearchKey",
        "description": "Query a Profile data model object using filters and a search key in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getprofilequerydatamodelobjectwithsearchkey",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1-4,999. If unspecified, the default value is `100`.\n\n**Available Version:** 52.\n"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 50 field names that you want to include in the result, for example, `Id__c,FirstName__c`, `GenderId__c,Occupation__c`. If unspecified, `Id__c` is returned.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of equality expressions within square brackets, for example, `[FirstName__c=DON]`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `GenderId__c ASC,â€‹Occupation__c DESC`. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "searchKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "If a field other than the primary key is used, name of the key field, for example, `FirstName__c`. Parameter is required for secondary key. \n\n**Available Version:** 52.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "string",
                          "example": "<object>"
                        }
                      }
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": "<object>"
                      },
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        },
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "ID of the data model object (value of the primary or secondary key field)."
        }
      ]
    },
    "/ssot/profile/{dataModelName}/{dataModelName}/{id}/{childDataModelName}": {
      "get": {
        "tags": [
          "Profile Library",
          "by Data Model Name",
          "by ID"
        ],
        "summary": "getProfileQueryDataModelObjectAndChildObjectWithSearchKey",
        "description": "Query a Profile data model object and a child object using filters and a search key in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getprofilequerydatamodelobjectandchildobjectwithsearchkey",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1-4,999. If unspecified, the default value is `100`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of child object field names that you want to include in the result, for example, `Id__c,EmailAddress__c`. If unspecified, the first 10 alphabetically sorted fields are returned.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of equality expressions within square brackets, for example, `[FirstName__c=DON]`. Filters are applied to the parent object only.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `GenderId__c ASC,â€‹Occupation__c DESC`. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "searchKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "If a field other than the primary key is used, name of the key field, for example, `FirstName__c`. Parameter is required for secondary key. \n\n**Available Version:** 52.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "string",
                          "example": "<object>"
                        }
                      }
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": "<object>"
                      },
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        },
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "ID of the data model object (value of the primary or secondary key field)."
        },
        {
          "name": "childDataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the child data model object."
        }
      ]
    },
    "/ssot/profile/{dataModelName}": {
      "get": {
        "tags": [
          "Profile Library",
          "by Data Model Name"
        ],
        "summary": "getProfileQueryDataModelObject",
        "description": "Query a Profile data model object using filters in Data Cloud.\n\n**Available Version:** 52.0\n",
        "operationId": "getprofilequerydatamodelobject",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1-4,999. If unspecified, the default value is `100`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of up to 50 field names that you want to include in the result, for example, `Id__c,FirstName__c`, `GenderId__c,Occupation__c`. If unspecified, `Id__c` is returned.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated list of equality expressions within square brackets, for example, `[FirstName__c=DON]`.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 52.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `GenderId__c ASC,â€‹Occupation__c DESC`. If unspecified, items are returned in the order they are retrieved.\n\n**Available Version:** 52.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "string",
                          "example": "<object>"
                        }
                      }
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": "<object>"
                      },
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataModelName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the data model object."
        }
      ]
    },
    "/ssot/query": {
      "post": {
        "tags": [
          "Query Library"
        ],
        "summary": "queryData",
        "description": "Synchronously query data across data model, lake, unified, and linked objects in Data Cloud. This query returns up to 4,999 rows.\n\n**Available Version:** 52.0\n\n**Root XML tag:** `<cdpQueryTag>`\n\n>**Note**\n>\n>A newer version of the Query API is available. We recommend using Query V2 API to take advantage of GET calls in addition to POST calls, subsequent requests, and larger response sizes.\n",
        "operationId": "querydata",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of records to return. Values are from 1-4999. If unspecified, the default value is 4999.\n\n**Available Version:** 53.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. The sum of `offset` and `batchSize` must be less than 2147483647. The default value is 0.\n\n**Available Version:** 53.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Comma-separated values to sort the results in ascending or descending order, for example, `GenderId__c ASC,Occupation__c DESC`.\n\n**Available Version:** 53.0\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sql": {
                    "type": "string",
                    "example": "select BirthDate__c, DataSourceId__c, DataSourceObjectId__c, ExternalRecordId__c, FirstName__c, GenderId__c, Id__c, InternalOrganizationId__c, LastName__c from Individual__dlm where Id__c='100470169'"
                  }
                }
              },
              "examples": {
                "queryData": {
                  "value": {
                    "sql": "select BirthDate__c, DataSourceId__c, DataSourceObjectId__c, ExternalRecordId__c, FirstName__c, GenderId__c, Id__c, InternalOrganizationId__c, LastName__c from Individual__dlm where Id__c='100470169'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "string",
                          "example": "<object>"
                        }
                      }
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": "<object>"
                      },
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/queryv2": {
      "post": {
        "tags": [
          "Query V2"
        ],
        "summary": "queryDataV2",
        "description": "Query up to 8 MB of data across data model, lake, unified, and linked objects in Data Cloud.\n\n**Available Version:** 54.0\n\n**Root XML tag:** `<cdpQueryTag>`\n",
        "operationId": "querydatav2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sql": {
                    "type": "string",
                    "example": "select BirthDate__c, DataSourceId__c, DataSourceObjectId__c, ExternalRecordId__c, FirstName__c, GenderId__c, Id__c, InternalOrganizationId__c, LastName__c from Individual__dlm where Id__c='100470169'"
                  }
                }
              },
              "examples": {
                "queryDataV2": {
                  "value": {
                    "sql": "select BirthDate__c, DataSourceId__c, DataSourceObjectId__c, ExternalRecordId__c, FirstName__c, GenderId__c, Id__c, InternalOrganizationId__c, LastName__c from Individual__dlm where Id__c='100470169'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "object",
                          "properties": {
                            "placeInOrder": {
                              "type": "string",
                              "example": "<integer>"
                            },
                            "type": {
                              "type": "string",
                              "example": "<string>"
                            },
                            "typeCode": {
                              "type": "string",
                              "example": "<integer>"
                            }
                          }
                        }
                      }
                    },
                    "nextBatchId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": {
                          "placeInOrder": "<integer>",
                          "type": "<string>",
                          "typeCode": "<integer>"
                        }
                      },
                      "nextBatchId": "<string>",
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/queryv2/queryv2/{nextBatchId}": {
      "get": {
        "tags": [
          "Query V2"
        ],
        "summary": "queryBatchData",
        "description": "Get the next batch of data across data model, lake, unified, and linked objects in Data Cloud. \n\nInitially, use the Data Cloud Query V2 resource to query up to 8 MB of data. Use the `nextBatchId` from the Data Cloud Query Output V2 response body as the value of *nextBatchId* in this API to get the next batch of data. You can continue using subsequent next batch IDs for up to an hour.\n\n**Available Version:** 54.0\n",
        "operationId": "querybatchdata",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "done": {
                      "type": "string",
                      "example": "<boolean>"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "//": {
                          "type": "object",
                          "properties": {
                            "placeInOrder": {
                              "type": "string",
                              "example": "<integer>"
                            },
                            "type": {
                              "type": "string",
                              "example": "<string>"
                            },
                            "typeCode": {
                              "type": "string",
                              "example": "<integer>"
                            }
                          }
                        }
                      }
                    },
                    "nextBatchId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "queryId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "done": "<boolean>",
                      "endTime": "<string>",
                      "metadata": {
                        "//": {
                          "placeInOrder": "<integer>",
                          "type": "<string>",
                          "typeCode": "<integer>"
                        }
                      },
                      "nextBatchId": "<string>",
                      "queryId": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "nextBatchId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "ID from the Data Cloud Query Output V2 response body."
        }
      ]
    },
    "/ssot/segments/{segmentApiName}/actions/deactivate": {
      "post": {
        "tags": [
          "Segments",
          "by API Name1",
          "actions12"
        ],
        "summary": "deactivateSegmentByName",
        "description": "Deactivate a segment on demand by API name.\n\n**Available Version:** 59.0\n",
        "operationId": "deactivatesegmentbyname",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "jobId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "partitionId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentId": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errorCode": "<string>",
                      "errorMessage": "<string>",
                      "jobId": "<string>",
                      "partitionId": "<string>",
                      "publishStatus": "<string>",
                      "segmentId": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "segmentApiName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the segment API."
        }
      ]
    },
    "/ssot/segments/{segmentApiName}": {
      "get": {
        "tags": [
          "Segments",
          "by API Name1"
        ],
        "summary": "getSegment",
        "description": "Get a segment.\n\n**Available Version:** 56.0\n",
        "operationId": "getsegment",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "batchSize": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "offset": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "orderByExpression": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSpace": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "description": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "developerName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "excludeCriteria": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "includeCriteria": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "includeDbt": {
                            "type": "object",
                            "properties": {
                              "models": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "sql": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "name": "<string>",
                                    "sql": "<string>"
                                  },
                                  {
                                    "name": "<string>",
                                    "sql": "<string>"
                                  }
                                ]
                              }
                            }
                          },
                          "lookalikeCriteria": {
                            "type": "object",
                            "properties": {
                              "additionalPopulation": {
                                "type": "string",
                                "example": "<int64>"
                              },
                              "seedSegmentId": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "marketSegmentDefinitionId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "marketSegmentId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "nextPublishDateTime": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishInterval": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishScheduleEndDate": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishScheduleStartDateTime": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishStatus": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentMembershipDmo": {
                            "type": "object",
                            "properties": {
                              "historyTable": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "latestTable": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "profileTable": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "segmentMembershipTable": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentOnApiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentOnId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentStatus": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentType": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "batchSize": "<integer>",
                      "offset": "<integer>",
                      "orderByExpression": "<string>",
                      "segments": [
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Segments",
          "by API Name1"
        ],
        "summary": "deleteSegment",
        "description": "Delete a segment in Data Cloud.\n\n**Available Version:** 56.0\n",
        "operationId": "deletesegment",
        "responses": {
          "204": {
            "description": "204",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Segments",
          "by API Name1"
        ],
        "summary": "updateSegment",
        "description": "Update a segment in Data Cloud.\n\n**Available Version:** 56.0\n\n**Root XML tag:** `<cdpSegment>`\n",
        "operationId": "updatesegment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalMetadata": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a connect API segment"
                  },
                  "developerName": {
                    "type": "string",
                    "example": "ConnectSegment20"
                  },
                  "displayName": {
                    "type": "string",
                    "example": ""
                  },
                  "includeDbt": {
                    "type": "object",
                    "properties": {
                      "models": {
                        "type": "object",
                        "properties": {
                          "models": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "m1"
                                },
                                "sql": {
                                  "type": "string",
                                  "example": "select ssot__Individual__dlm.ssot__Id__c from ssot__Individual__dlm where ssot__Individual__dlm.ssot__FirstName__c='john'"
                                }
                              }
                            },
                            "example": [
                              {
                                "name": "m1",
                                "sql": "select ssot__Individual__dlm.ssot__Id__c from ssot__Individual__dlm where ssot__Individual__dlm.ssot__FirstName__c='john'"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishSchedule": {
                    "type": "string",
                    "example": "One"
                  },
                  "publishScheduleEndDate": {
                    "type": "string",
                    "example": ""
                  },
                  "publishScheduleStartDateTime": {
                    "type": "string",
                    "example": ""
                  },
                  "segmentOnApiName": {
                    "type": "string",
                    "example": ""
                  },
                  "segmentType": {
                    "type": "string",
                    "example": "Dbt"
                  }
                }
              },
              "examples": {
                "updateSegment": {
                  "value": {
                    "additionalMetadata": {},
                    "description": "This is a connect API segment",
                    "developerName": "ConnectSegment20",
                    "displayName": "",
                    "includeDbt": {
                      "models": {
                        "models": [
                          {
                            "name": "m1",
                            "sql": "select ssot__Individual__dlm.ssot__Id__c from ssot__Individual__dlm where ssot__Individual__dlm.ssot__FirstName__c='john'"
                          }
                        ]
                      }
                    },
                    "publishSchedule": "One",
                    "publishScheduleEndDate": "",
                    "publishScheduleStartDateTime": "",
                    "segmentOnApiName": "",
                    "segmentType": "Dbt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataSpace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "developerName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "excludeCriteria": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "includeCriteria": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "includeDbt": {
                      "type": "object",
                      "properties": {
                        "models": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "sql": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "example": [
                            {
                              "name": "<string>",
                              "sql": "<string>"
                            },
                            {
                              "name": "<string>",
                              "sql": "<string>"
                            }
                          ]
                        }
                      }
                    },
                    "lookalikeCriteria": {
                      "type": "object",
                      "properties": {
                        "additionalPopulation": {
                          "type": "string",
                          "example": "<int64>"
                        },
                        "seedSegmentId": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "marketSegmentDefinitionId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "marketSegmentId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "nextPublishDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishInterval": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishScheduleEndDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishScheduleStartDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentMembershipDmo": {
                      "type": "object",
                      "properties": {
                        "historyTable": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "latestTable": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profileTable": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "segmentMembershipTable": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentOnApiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentOnId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentType": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "apiName": "<string>",
                      "dataSpace": "<string>",
                      "description": "<string>",
                      "developerName": "<string>",
                      "displayName": "<string>",
                      "excludeCriteria": "<string>",
                      "includeCriteria": "<string>",
                      "includeDbt": {
                        "models": [
                          {
                            "name": "<string>",
                            "sql": "<string>"
                          },
                          {
                            "name": "<string>",
                            "sql": "<string>"
                          }
                        ]
                      },
                      "lookalikeCriteria": {
                        "additionalPopulation": "<int64>",
                        "seedSegmentId": "<string>"
                      },
                      "marketSegmentDefinitionId": "<string>",
                      "marketSegmentId": "<string>",
                      "nextPublishDateTime": "<string>",
                      "publishInterval": "<string>",
                      "publishScheduleEndDate": "<string>",
                      "publishScheduleStartDateTime": "<string>",
                      "publishStatus": "<string>",
                      "segmentMembershipDmo": {
                        "historyTable": "<string>",
                        "latestTable": "<string>",
                        "profileTable": "<string>"
                      },
                      "segmentMembershipTable": "<string>",
                      "segmentOnApiName": "<string>",
                      "segmentOnId": "<string>",
                      "segmentStatus": "<string>",
                      "segmentType": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "segmentApiName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the segment API."
        }
      ]
    },
    "/ssot/segments/{segmentApiName}/members": {
      "get": {
        "tags": [
          "Segments",
          "by API Name1"
        ],
        "summary": "getSegmentMembers",
        "description": "Get segment members in Data Cloud.\n\n**Available Version:** 58.0\n",
        "operationId": "getsegmentmembers",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "[]"
            },
            "description": "Comma-separated list of up to 50 field names that you want to include in the result, for example, `Id__c,FirstName__c,â€‹GenderId__c,Occupation__c`. If unspecified, Id__c is returned.\n\n**Available Version:** 58.0\n"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Filter the result set to a more narrow scope or specific type, such as `[GenderId__c=Male,â€‹FirstName__c=Angel]`. \n\n**Available Version:** 58.0\n"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Maximum number of rows to return from `1`â€“`1000`. If unspecified, the default number of rows is `100`.\n\n**Available Version:** 58.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version:** 58.0\n"
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `Name ASC` or `MarketSegmentType DESC`. If unspecified, items are returned by ID in ascending order.\n\n**Available Version:** 58.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deltaType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "id": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "kqId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "snapshotType": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "versionStamp": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "deltaType": "<string>",
                          "id": "<string>",
                          "kqId": "<string>",
                          "snapshotType": "<string>",
                          "timestamp": "<string>",
                          "versionStamp": "<string>"
                        },
                        {
                          "deltaType": "<string>",
                          "id": "<string>",
                          "kqId": "<string>",
                          "snapshotType": "<string>",
                          "timestamp": "<string>",
                          "versionStamp": "<string>"
                        }
                      ]
                    },
                    "endTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "filter": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "limit": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "nextPageUrl": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "offSet": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "orderBy": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "rowCount": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "totalCount": {
                      "type": "string",
                      "example": "<integer>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "data": [
                        {
                          "deltaType": "<string>",
                          "id": "<string>",
                          "kqId": "<string>",
                          "snapshotType": "<string>",
                          "timestamp": "<string>",
                          "versionStamp": "<string>"
                        },
                        {
                          "deltaType": "<string>",
                          "id": "<string>",
                          "kqId": "<string>",
                          "snapshotType": "<string>",
                          "timestamp": "<string>",
                          "versionStamp": "<string>"
                        }
                      ],
                      "endTime": "<string>",
                      "filter": "<string>",
                      "limit": "<integer>",
                      "nextPageUrl": "<string>",
                      "offSet": "<integer>",
                      "orderBy": "<string>",
                      "rowCount": "<integer>",
                      "startTime": "<string>",
                      "totalCount": "<integer>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "segmentApiName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "Name of the segment API."
        }
      ]
    },
    "/ssot/segments/{segmentId}/actions/publish": {
      "post": {
        "tags": [
          "Segments",
          "by Segment ID",
          "Actions",
          "Publish"
        ],
        "summary": "publishSegment",
        "description": "Publish a segment in Data Cloud.\n\n**Available Version:** 58.0\n\n>**Note**\n>\n>POST doesn't take request parameters or a request body.\n",
        "operationId": "publishsegment",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "jobId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "partitionId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentId": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errorCode": "<string>",
                      "errorMessage": "<string>",
                      "jobId": "<string>",
                      "partitionId": "<string>",
                      "publishStatus": "<string>",
                      "segmentId": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "segmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          }
        }
      ]
    },
    "/ssot/segments/{segmentId}/actions/deactivate": {
      "post": {
        "tags": [
          "Segments",
          "by Segment ID",
          "Actions"
        ],
        "summary": "deactivateSegmentById",
        "description": "Deactivate a segment on demand by ID.\n\n**Available Version:** 59.0\n",
        "operationId": "deactivatesegmentbyid",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "jobId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "partitionId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentId": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "errorCode": "<string>",
                      "errorMessage": "<string>",
                      "jobId": "<string>",
                      "partitionId": "<string>",
                      "publishStatus": "<string>",
                      "segmentId": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "segmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          }
        }
      ]
    },
    "/ssot/segments": {
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "getSegments",
        "description": "Get segments in Data Cloud.\n\n**Available Version:** 55.0\n",
        "operationId": "getsegments",
        "parameters": [
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of items to return. Values are from 1â€“200. If unspecified, the default value is `20`\n\n**Available Version:** 56.0\n"
          },
          {
            "name": "dataspace",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Name of the dataspace in which to perform the action. User must have permission to this dataspace. Valid when bulk-listing segments. If unspecified, default is the `default` dataspace.\n\n**Available Version:** 58.0\n"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<integer>"
            },
            "description": "Number of rows to skip before returning results. If unspecified, no rows are skipped.\n\n**Available Version**: 56.0\n"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Sort order for the result set, such as `Name ASC` or `MarketSegmentType DESC`. If unspecified, items are returned by ID in ascending order.\n\n**Available Version**: 56.0\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "batchSize": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "offset": {
                      "type": "string",
                      "example": "<integer>"
                    },
                    "orderByExpression": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "dataSpace": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "description": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "developerName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "excludeCriteria": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "includeCriteria": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "includeDbt": {
                            "type": "object",
                            "properties": {
                              "models": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "<string>"
                                    },
                                    "sql": {
                                      "type": "string",
                                      "example": "<string>"
                                    }
                                  }
                                },
                                "example": [
                                  {
                                    "name": "<string>",
                                    "sql": "<string>"
                                  },
                                  {
                                    "name": "<string>",
                                    "sql": "<string>"
                                  }
                                ]
                              }
                            }
                          },
                          "lookalikeCriteria": {
                            "type": "object",
                            "properties": {
                              "additionalPopulation": {
                                "type": "string",
                                "example": "<int64>"
                              },
                              "seedSegmentId": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "marketSegmentDefinitionId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "marketSegmentId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "nextPublishDateTime": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishInterval": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishScheduleEndDate": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishScheduleStartDateTime": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "publishStatus": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentMembershipDmo": {
                            "type": "object",
                            "properties": {
                              "historyTable": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "latestTable": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "profileTable": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "segmentMembershipTable": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentOnApiName": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentOnId": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentStatus": {
                            "type": "string",
                            "example": "<string>"
                          },
                          "segmentType": {
                            "type": "string",
                            "example": "<string>"
                          }
                        }
                      },
                      "example": [
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "batchSize": "<integer>",
                      "offset": "<integer>",
                      "orderByExpression": "<string>",
                      "segments": [
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        },
                        {
                          "apiName": "<string>",
                          "dataSpace": "<string>",
                          "description": "<string>",
                          "developerName": "<string>",
                          "displayName": "<string>",
                          "excludeCriteria": "<string>",
                          "includeCriteria": "<string>",
                          "includeDbt": {
                            "models": [
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              },
                              {
                                "name": "<string>",
                                "sql": "<string>"
                              }
                            ]
                          },
                          "lookalikeCriteria": {
                            "additionalPopulation": "<int64>",
                            "seedSegmentId": "<string>"
                          },
                          "marketSegmentDefinitionId": "<string>",
                          "marketSegmentId": "<string>",
                          "nextPublishDateTime": "<string>",
                          "publishInterval": "<string>",
                          "publishScheduleEndDate": "<string>",
                          "publishScheduleStartDateTime": "<string>",
                          "publishStatus": "<string>",
                          "segmentMembershipDmo": {
                            "historyTable": "<string>",
                            "latestTable": "<string>",
                            "profileTable": "<string>"
                          },
                          "segmentMembershipTable": "<string>",
                          "segmentOnApiName": "<string>",
                          "segmentOnId": "<string>",
                          "segmentStatus": "<string>",
                          "segmentType": "<string>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Segments"
        ],
        "summary": "createSegments",
        "description": "Create a segment in Data Cloud.\n\n**Available Version**: 55.0\n\n**Root XML tag:** `<cdpSegment>` \n",
        "operationId": "createsegments",
        "parameters": [
          {
            "name": "dataspace",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "<string>"
            },
            "description": "Name of the dataspace in which to perform the action. User must have permission to this dataspace. Default is the `default` dataspace. \n\n- In API version 58.0, if specified, this parameter overrides the `dataSpace` request body property. If this parameter is unspecified, the `dataSpace` request body parameter is used.\n- In API version 58.0, if neither this parameter nor the `dataSpace` request body property is specified, the `default` dataspace is used.\n- In API version 59.0 and later, use this parameter. The `dataSpace` request body property is not available.\n\n**Available Version**: 58.0\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalMetadata": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a connect API segment"
                  },
                  "developerName": {
                    "type": "string",
                    "example": "ConnectSegment20"
                  },
                  "displayName": {
                    "type": "string",
                    "example": ""
                  },
                  "includeDbt": {
                    "type": "object",
                    "properties": {
                      "models": {
                        "type": "object",
                        "properties": {
                          "models": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "m1"
                                },
                                "sql": {
                                  "type": "string",
                                  "example": "select ssot__Individual__dlm.ssot__Id__c from ssot__Individual__dlm where ssot__Individual__dlm.ssot__FirstName__c='john'"
                                }
                              }
                            },
                            "example": [
                              {
                                "name": "m1",
                                "sql": "select ssot__Individual__dlm.ssot__Id__c from ssot__Individual__dlm where ssot__Individual__dlm.ssot__FirstName__c='john'"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "lookalikeCriteria": {
                    "type": "object",
                    "properties": {}
                  },
                  "publishSchedule": {
                    "type": "string",
                    "example": "One"
                  },
                  "publishScheduleEndDate": {
                    "type": "string",
                    "example": ""
                  },
                  "publishScheduleStartDateTime": {
                    "type": "string",
                    "example": ""
                  },
                  "segmentOnApiName": {
                    "type": "string",
                    "example": ""
                  },
                  "segmentType": {
                    "type": "string",
                    "example": "Dbt"
                  }
                }
              },
              "examples": {
                "createSegments": {
                  "value": {
                    "additionalMetadata": {},
                    "description": "This is a connect API segment",
                    "developerName": "ConnectSegment20",
                    "displayName": "",
                    "includeDbt": {
                      "models": {
                        "models": [
                          {
                            "name": "m1",
                            "sql": "select ssot__Individual__dlm.ssot__Id__c from ssot__Individual__dlm where ssot__Individual__dlm.ssot__FirstName__c='john'"
                          }
                        ]
                      }
                    },
                    "lookalikeCriteria": {},
                    "publishSchedule": "One",
                    "publishScheduleEndDate": "",
                    "publishScheduleStartDateTime": "",
                    "segmentOnApiName": "",
                    "segmentType": "Dbt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "dataSpace": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "description": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "developerName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "excludeCriteria": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "includeCriteria": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "includeDbt": {
                      "type": "object",
                      "properties": {
                        "models": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "<string>"
                              },
                              "sql": {
                                "type": "string",
                                "example": "<string>"
                              }
                            }
                          },
                          "example": [
                            {
                              "name": "<string>",
                              "sql": "<string>"
                            },
                            {
                              "name": "<string>",
                              "sql": "<string>"
                            }
                          ]
                        }
                      }
                    },
                    "lookalikeCriteria": {
                      "type": "object",
                      "properties": {
                        "additionalPopulation": {
                          "type": "string",
                          "example": "<int64>"
                        },
                        "seedSegmentId": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "marketSegmentDefinitionId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "marketSegmentId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "nextPublishDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishInterval": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishScheduleEndDate": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishScheduleStartDateTime": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "publishStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentMembershipDmo": {
                      "type": "object",
                      "properties": {
                        "historyTable": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "latestTable": {
                          "type": "string",
                          "example": "<string>"
                        },
                        "profileTable": {
                          "type": "string",
                          "example": "<string>"
                        }
                      }
                    },
                    "segmentMembershipTable": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentOnApiName": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentOnId": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentStatus": {
                      "type": "string",
                      "example": "<string>"
                    },
                    "segmentType": {
                      "type": "string",
                      "example": "<string>"
                    }
                  }
                },
                "examples": {
                  "200": {
                    "value": {
                      "apiName": "<string>",
                      "dataSpace": "<string>",
                      "description": "<string>",
                      "developerName": "<string>",
                      "displayName": "<string>",
                      "excludeCriteria": "<string>",
                      "includeCriteria": "<string>",
                      "includeDbt": {
                        "models": [
                          {
                            "name": "<string>",
                            "sql": "<string>"
                          },
                          {
                            "name": "<string>",
                            "sql": "<string>"
                          }
                        ]
                      },
                      "lookalikeCriteria": {
                        "additionalPopulation": "<int64>",
                        "seedSegmentId": "<string>"
                      },
                      "marketSegmentDefinitionId": "<string>",
                      "marketSegmentId": "<string>",
                      "nextPublishDateTime": "<string>",
                      "publishInterval": "<string>",
                      "publishScheduleEndDate": "<string>",
                      "publishScheduleStartDateTime": "<string>",
                      "publishStatus": "<string>",
                      "segmentMembershipDmo": {
                        "historyTable": "<string>",
                        "latestTable": "<string>",
                        "profileTable": "<string>"
                      },
                      "segmentMembershipTable": "<string>",
                      "segmentOnApiName": "<string>",
                      "segmentOnId": "<string>",
                      "segmentStatus": "<string>",
                      "segmentType": "<string>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ssot/universalIdLookup/{entityName}/{dataSourceId}/{dataSourceObjectId}/{sourceRecordId}": {
      "get": {
        "tags": [
          "Universal Lookup ID",
          "by Entity Name",
          "by Data Source ID",
          "by Data Source Object ID",
          "by Source Record ID"
        ],
        "summary": "lookupUniversalId",
        "description": "Look up objects by source ID in Data Cloud.\n\n**Available Version:** 54.0\n",
        "operationId": "lookupuniversalid",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/octet-stream": {
                "examples": {
                  "200": {
                    "value": "null"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "entityName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          }
        },
        {
          "name": "dataSourceId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          }
        },
        {
          "name": "dataSourceObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          }
        },
        {
          "name": "sourceRecordId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "ID of the source record."
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.salesforce.com/services/oauth2/authorize",
            "tokenUrl": "",
            "scopes": {
              "api": "api",
              "cdp_profile_api": "cdp_profile_api",
              "cdp_query_api": "cdp_query_api"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "api",
        "cdp_query_api",
        "cdp_profile_api"
      ]
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Use the User Info request to test your setup and authentication."
    },
    {
      "name": "Calculated Insights"
    },
    {
      "name": "by API Name"
    },
    {
      "name": "Data Graphs"
    },
    {
      "name": "data"
    },
    {
      "name": "{dataGraphEntityName}"
    },
    {
      "name": "{dataGraphName}"
    },
    {
      "name": "Data Transforms"
    },
    {
      "name": "{dataTransformNameOrId}"
    },
    {
      "name": "actions"
    },
    {
      "name": "schedule"
    },
    {
      "name": "Identity Resolution Rulesets"
    },
    {
      "name": "by Identity Resolution"
    },
    {
      "name": "actions1"
    },
    {
      "name": "Insights"
    },
    {
      "name": "by Calculated Insight Name"
    },
    {
      "name": "Metadata"
    },
    {
      "name": "Metadata1"
    },
    {
      "name": "Profile Library"
    },
    {
      "name": "Metadata12"
    },
    {
      "name": "by Data Model Name"
    },
    {
      "name": "by ID"
    },
    {
      "name": "by Calculated Insights"
    },
    {
      "name": "by Calculated Insight Name1"
    },
    {
      "name": "Query Library"
    },
    {
      "name": "Query V2"
    },
    {
      "name": "Segments"
    },
    {
      "name": "by API Name1"
    },
    {
      "name": "actions12"
    },
    {
      "name": "by Segment ID"
    },
    {
      "name": "Actions"
    },
    {
      "name": "Publish"
    },
    {
      "name": "Universal Lookup ID"
    },
    {
      "name": "by Entity Name"
    },
    {
      "name": "by Data Source ID"
    },
    {
      "name": "by Data Source Object ID"
    },
    {
      "name": "by Source Record ID"
    }
  ]
}
