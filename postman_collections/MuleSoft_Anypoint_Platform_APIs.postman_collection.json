{
	"info": {
		"_postman_id": "392e7c29-e84c-4bd7-9644-39a8e57028d8",
		"name": "MuleSoft Anypoint Platform APIs",
		"description": "# [Get started with these 5 minutes videos!](https://www.youtube.com/playlist?list=PLiONnRuKRuJBHJoqaN8qx-QKMhYjPf8_s)\n\n# MuleSoft Anypoint Platform APIs\n\nEvery time you login into the MuleSoft Anypoint Platform using the User Interface Portal, you are implicitly calling a set of APIs that are invoked by the UI: the Platform APIs! Instead of UI you can do direct HTTP requests, highly useful When automating your Software Development Lifecycle. They provide you with more flexibility and customization than the Anypoint CLI or the Mule Maven Plugin.\n\n- Official documentation of the Platform APIs in the [Platform API Portal](https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/)\n    \n\n## Common Errors\n\n- [Invalid CSRF Support Article](https://help.mulesoft.com/s/article/CSRF-Protection-execute-from-Postman)\n    \n\n## Prerequisites\n\nBefore we start working with platform APIs, you need these three pieces of data: a session token, the organization id and the environment id; as shown in the below image.\n\n\\*Note Since 2021 It is recommended to use ConnectedApps instead of Username&Password\n\n<img src=\"https://raw.githubusercontent.com/angelalberici/mulesoft-platform-apis/master/img/PlatfromAPIBasics.png\" width=\"700\">\n\n## Environment\n\n<p>Make sure you have<a href=\"https://www.postman.com/)\">Postman</a>installed, that you do know how to<a href=\"https://learning.postman.com/docs/postman/collection-runs/working-with-data-files/#importing-sample-collection-files\">import the Postman Collection and the Environment</a>and then you can finally download the Postman assets from this repository. Import both files and make sure to add both anypoint-username and anypoint-password or ConnectedApps-ClientID/ClientSecret to your Postman Environment, the fields highlighted below.</p>\n\nThis collection pack contains an environment \"Anypoint Platform\". Set the values before you use any request. You must set the following:\n\n- url\n    \n- \\[Recommended: ConnectedApps (ClientID and ClientSecret)\\] or \\[For TESTING: exceptional account (Username/Password)\\]\n    \n- organization_id\n    \n\nAll other parameters are optional or related to specific requests.\n\n## Start using\n\nThat's about it! You can start checking these collections and you will save a lot of time figuring it out yourself!\n\n## Basic Setup Example\n\nIn the following, find some examples on accessing data using the postman collection pack. For detailed instruction, please watch the quick tutorial video linked below.\n\n## Login to Anypoint Platform\n\nOnce you have entered to correct parameter values in the environment \"Anypoint Platform\", you can make use of the \"Login to anypoint platform\" POST request in the Authentication Folder. This request will save the token bearer to the parameters and use it in all subsequent requests.\n\n<img src=\"https://github.com/API-Activist/anypoint-platform-postman-collection/blob/main/postman-coll-login.PNG?raw=true\" width=\"700\">\n\n## Getting profile Information\n\nAfter you have logged in, you need to get your profile information in order to set the organization_Id. This is set by the \"Get profile information\" request in the Authentication folder. After execution of this request, the organization_Id parameter is set and relevant for all subsequent requests.\n\n<img src=\"https://github.com/API-Activist/anypoint-platform-postman-collection/blob/main/postman-coll-orgid.PNG?raw=true\" width=\"700\">\n\n## Subsequent request\n\nAfter the basic setup is done, you can now use the majority of the requests in postman with your anypoint platform environment.\n\n## Get all projects\n\nIn order to access all projects using the collection pack, go to the folder \"Design Center/Projects\" and select the \"Get all projects\". Run this request to retrieve all projects within the organization_Id\n\n<img src=\"https://github.com/API-Activist/anypoint-platform-postman-collection/blob/main/postman-coll-projectsall.PNG?raw=true\" width=\"700\">\n\n## Get all assets\n\nIn order to access all assets using the collection pack, go to the folder \"Exchange/Assets\" and select the \"Get all assets\". Run this request to retrieve all projects within the organization_Id\n\n<img src=\"https://github.com/API-Activist/anypoint-platform-postman-collection/blob/main/postman-coll-assetsall.PNG?raw=true\" width=\"700\">\n\n## Invite new users\n\nIn order to invite new users, go to folder \"Management Center/Access Management/Users\" and select \"Invite new users\" request.  \nThis is requires to have the group role id, which you need to have prior performing this POST request. To get the group roles go to folder \"Management Center/Access Management/Rolegroups\" and perform \"Get all rolegroups\" request to retrieve all rolegroups.\n\n<img src=\"https://github.com/API-Activist/anypoint-platform-postman-collection/blob/main/postman-coll-rolegroups.PNG?raw=true\" width=\"700\">\n\nCopy the required role_group_id and name. Go back to the \"Invite new users\" request and select Body. Enter the copied values to the correct fields.\n\n<img src=\"https://github.com/API-Activist/anypoint-platform-postman-collection/blob/main/postman-coll-inviteuser.PNG?raw=true\" width=\"700\">\n\n## Resources\n\n- Official documentation of the Platform APIs in the [Platform API Portal](https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/)\n    \n- If you are new to the Platform APIs check this [post!](https://blogs.mulesoft.com/dev/howto/get-started-with-platform-apis-and-postman-automation/)\n    \n\n## Authors\n\n- [Amir Khan](https://www.linkedin.com/in/amir-khan-ak/)\n    \n- [Angel Alberici](https://www.linkedin.com/in/angelalberici/)\n    \n- [Ivan Z.](https://www.linkedin.com/in/ivan-z-apis/)\n    \n\n## Thanks to our awesome contributors\n\n- [Ashish Pardhi](https://www.linkedin.com/in/ashishpardhi/)\n    \n- [Rolando Carrasco](https://www.linkedin.com/in/rolandocarrasco/)\n    \n- [Amit Ghorpade](https://www.linkedin.com/in/amitghorpadein/)\n    \n    - Management Center -> API Manager -> API Administration -> Manage APIs -> Single API -> POST create an alerts for api\n        \n    \n\n## Contributing to the project\n\n- Please read the tutorial in: [https://github.com/forcedotcom/postman-salesforce-apis/blob/master/contributing.md](https://github.com/forcedotcom/postman-salesforce-apis/blob/master/contributing.md)\n    \n\n## Release notes 31st Aug 2023\n\n- Exchange can be access by the Exchange Platform API and by the Exchange GraphQL Platform API. Almost every use case is covered by Exchange Platform API this is in case you want to explore the Exchange GraphQL Platform API due to specific use cases or training\n    \n- The Folder has been added in: MuleSoft Platform APIs -> Exchange -> GraphQL Exchange Search\n    \n\n# Release notes 1st Aug 2023\n\n- Migrated from \"MuleSoft Platform APIs\" Postman Workspace into \"Salesforce Developers\" Postman Workspace\n    \n\n- Added Folders for Cloudhub 2.0 under Management Center -> Runtime Manager -> Private Spaces, Transit Gateways & Deployment Target\n    \n\n- Added Environment Variables for Cloudhub 2.0 including the URL (transit_gateway_id, private_space_id, tls_context_id, target_id, connection_id, vpn_id)\n    \n\n- Changed Authentication Mechanism at Root Level (MuleSoft Anypoint Platform APIs) from \"None\" to Bearer Token of value\n    \n\n# Release notes Feb 2022\n\nNew Collections in the workspace: Metrics Toolkit, TestDataGeneration, APIM Admin API, Mulesoft-Api-Manager-CI-CD-Postman\n\nAdded HTTP Requests and Use cases in \"Anypoint Platform APIs\"\n\n1. ParentPOM, CRUD Teams, OOTB API Manager, ObjectStore & Stats, VPN Status by Ashish Pardhi\n    \n2. Hybrid logic (RuntimeManager->Applications->Hybrid by Rolando Carrasco)\n    \n3. Auth with ConnectedApps (Access Manager): Don't use Username/Password for CICD Users: Always aim for ConnectedApps! Learn how to set them up here: [Connected Apps | Friends of Max Demonstration](https://www.youtube.com/watch?v=zoxZg0qvyz8) and here [MuleSoft Docs](https://docs.mulesoft.com/access-management/connected-apps-overview#:~:text=The%20Connected%20Apps%20feature%20provides,their%20accounts%20to%20third%20parties)\n    \n4. ListPatch by PatchID Version (Runtime Manager): CloudhubAPI list gives you a PatchID... use this endpoint to get details on the Patch (e.g. Date) by Angel\n    \n5. CRUD for Business Groups (Access Management) by Ivan Z.\n    \n6. CRUD for VPCs and Load Balancers (Runtime Manager) by Ivan Z.\n    \n\nNote: BusinessGroups and VPCs are specifically required for CLOUDHUB Automation Tool (CAT), [watch what is it here at 36:29](https://youtu.be/tqgoFmPgl7Y?t=2189). Thank you Ivan Z for adding them\n\n## Disclaimer\n\nThis is a Community driven and Community supported collection of assets for you to get started with MuleSoft Platform APIs (e.g. Postman concatenation of requests, testing scripts, etc.). This is not Supported by MuleSoft and you cannot open Cases about these Postman APIs.\n\n## License agreement\n\nBy using this postman collection, you accept that Max the Mule is the coolest integrator on the planet:\n\n[Go to biography of Max the Mule](https://brand.salesforce.com/content/characters-overview__3?tab=BogXMx2m)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27984284",
		"_collection_link": "https://www.postman.com/salesforce-developers/workspace/salesforce-developers/collection/28629827-392e7c29-e84c-4bd7-9644-39a8e57028d8?action=share&source=collection_link&creator=27984284"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Anypoint Platform with ConnectedApps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const jar = pm.cookies.jar();\r",
									"\r",
									"jar.clear(pm.request.url, function (error) {\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"token\", data.access_token);\r",
									"pm.environment.set(\"cookies\", \"_csrf=\" + pm.cookies.get(\"_csrf\") +\r",
									"                              \"; XSRF-TOKEN=\" + pm.cookies.get(\"XSRF-TOKEN\") +\r",
									"                              \"; mulesoft.sess=\" + pm.cookies.get(\"mulesoft.sess\") +\r",
									"                              \"; mulesoft.sess.sig=\" + pm.cookies.get(\"mulesoft.sess.sig\") );\r",
									"                              \r",
									"pm.cookies.jar().clear(pm.environment.get(\"url\"));\r",
									"const cookieJar = pm.cookies.jar();\r",
									"cookieJar.clear(pm.environment.get(\"url\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\"     : \"{{user_client_id}}\",\n    \"client_secret\" : \"{{user_client_secret}}\",\n    \"grant_type\"    : \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/accounts/api/v2/oauth2/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"accounts",
								"api",
								"v2",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Anypoint Platform with SAML",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SAMLResponse\": \"<SAML_RESPONSE HERE - Check documentation here: https://docs.mulesoft.com/access-management/saml-bearer-token>\"\n}"
						},
						"url": {
							"raw": "{{url}}/accounts/login/:org-domain/providers/:providerId/receive-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"accounts",
								"login",
								":org-domain",
								"providers",
								":providerId",
								"receive-id"
							],
							"variable": [
								{
									"key": "org-domain",
									"value": null
								},
								{
									"key": "providerId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Anypoint Platform with Username/Password (Deprecated: works by Exempt users only)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const jar = pm.cookies.jar();\r",
									"\r",
									"jar.clear(pm.request.url, function (error) {\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"token\", data.access_token);\r",
									"pm.environment.set(\"cookies\", \"_csrf=\" + pm.cookies.get(\"_csrf\") +\r",
									"                              \"; XSRF-TOKEN=\" + pm.cookies.get(\"XSRF-TOKEN\") +\r",
									"                              \"; mulesoft.sess=\" + pm.cookies.get(\"mulesoft.sess\") +\r",
									"                              \"; mulesoft.sess.sig=\" + pm.cookies.get(\"mulesoft.sess.sig\") );\r",
									"                              \r",
									"pm.cookies.jar().clear(pm.environment.get(\"url\"));\r",
									"const cookieJar = pm.cookies.jar();\r",
									"cookieJar.clear(pm.environment.get(\"url\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/accounts/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"accounts",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profile information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"organization_id\", data.organizationId);\r",
									"\r",
									"pm.environment.set(\"x-organization-id\", data.organizationId);\r",
									"pm.environment.set(\"x-owner-id\",data.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/accounts/api/profile",
							"host": [
								"{{url}}"
							],
							"path": [
								"accounts",
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my profile information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/accounts/api/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"accounts",
								"api",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/accounts/api/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"accounts",
								"api",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Design Center",
			"item": [
				{
					"name": "Profile Information",
					"item": [
						{
							"name": "Get design center profile",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api/v1/auth/profile",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api",
										"v1",
										"auth",
										"profile"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Projects",
					"item": [
						{
							"name": "Get all projects",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api/v1/organizations/{{organization_id}}/projects?pageSize=50&pageIndex=0&orderBy=-updateDate",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"projects"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "50"
										},
										{
											"key": "pageIndex",
											"value": "0"
										},
										{
											"key": "orderBy",
											"value": "-updateDate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new project",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Initiliaze and assign data var to parse JSON response body\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"//Assign variable access_token to JSONResponse\r",
											"pm.environment.set(\"project_id\",data.id);\r",
											"pm.environment.set(\"branch\",data.initialWorkingDirectory.branch);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{project_name}}\",\r\n    \"classifier\": \"{{project_classifier}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get project data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/api/name",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"api",
										"name"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Fragment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{fragment_name}}\",\r\n    \"classifier\": \"raml-fragment\",\r\n    \"subType\": \"{{fragment_subType}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "Import API Spec",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "fileName",
											"type": "file",
											"src": "/C:/Users/Nitish_Raj1/Downloads/fins-salesforce-insurance-exp-api-spec-1.0.0-raml.zip"
										},
										{
											"key": "Content-Type",
											"value": "multipart/form-data",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "FINS Salesforce Insurance Exp API",
											"type": "text"
										},
										{
											"key": "mainFile",
											"value": "fins-salesforce-insurance-exp-api-spec.raml",
											"type": "text"
										},
										{
											"key": "format",
											"value": "yaml",
											"type": "text",
											"disabled": true
										},
										{
											"key": "classifier",
											"value": "raml",
											"type": "text"
										},
										{
											"key": "version",
											"value": "1.0",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/import",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Environments",
					"item": [
						{
							"name": "Get all environments",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api/v1/organizations/{{organization_id}}/environments",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"environments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Publish Specification to Exchange",
					"item": [
						{
							"name": "Publish Project to Exchange",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-owner-id",
										"value": "{{owner_id}}",
										"description": "(Required) User's ownerId, which identifies the user performing the operation. \nThis is NOT the username, but an UUID that can be found in the users page by the organization administrator.\n"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"description": "(Required) OrganizationId, which identifies the organization to which perform the operation. \nThis can be found in the organizations page by the organization administrator.\n"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"main\": \"api.raml\",\n    \"apiVersion\": \"1.0.0\",\n    \"version\": \"1.0.0\",\n    \"assetId\": \"publish-project-doc\",\n    \"groupId\": \"gid1234\",\n    \"classifier\": \"oas\"\n}"
								},
								"url": {
									"raw": "{{url}}/projects/{{project_id}}/branches/{{branch}}/publish/exchange",
									"host": [
										"{{url}}"
									],
									"path": [
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"publish",
										"exchange"
									]
								},
								"description": "Publish project to Exchange. As a result, an Exchange asset is created."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-owner-id",
												"value": "{{owner_id}}",
												"description": "(Required) User's ownerId, which identifies the user performing the operation. \nThis is NOT the username, but an UUID that can be found in the users page by the organization administrator.\n"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"description": "(Required) OrganizationId, which identifies the organization to which perform the operation. \nThis can be found in the organizations page by the organization administrator.\n"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"main\": \"api.raml\",\n    \"apiVersion\": \"1.0.0\",\n    \"version\": \"1.0.0\",\n    \"assetId\": \"publish-project-doc\",\n    \"groupId\": \"gid1234\",\n    \"classifier\": \"oas\"\n}"
										},
										"url": {
											"raw": "{{url}}/projects/{{project_id}}/branches/{{branch_name}}/publish/exchange",
											"host": [
												"{{url}}"
											],
											"path": [
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch_name}}",
												"publish",
												"exchange"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"assetId\": \"test-publish-doc\",\n \"groupId\": \"6a2f41a3-c54c-fce8-32d2-0324e1c32e22\",\n \"organizationId\": \"6a2f41a3-c54c-fce8-32d2-0324e1c32e22\",\n \"version\": \"1.0.0\"\n}"
								},
								{
									"name": "401 - Authorization failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-owner-id",
												"value": "{{owner_id}}",
												"description": "(Required) User's ownerId, which identifies the user performing the operation. \nThis is NOT the username, but an UUID that can be found in the users page by the organization administrator.\n"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"description": "(Required) OrganizationId, which identifies the organization to which perform the operation. \nThis can be found in the organizations page by the organization administrator.\n"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 00001",
												"description": "Generate error with a invalid token ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"main\": \"api.raml\",\n    \"apiVersion\": \"1.0.0\",\n    \"version\": \"1.0.0\",\n    \"assetId\": \"publish-project-doc\",\n    \"groupId\": \"gid1234\",\n    \"classifier\": \"oas\"\n}"
										},
										"url": {
											"raw": "{{url}}/projects/{{project_id}}/branches/{{branch_name}}/publish/exchange",
											"host": [
												"{{url}}"
											],
											"path": [
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch_name}}",
												"publish",
												"exchange"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Dependencies",
					"item": [
						{
							"name": "Add dependency to asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment-id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{org-id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-OWNER-ID",
										"value": "{{owner_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"add\": [\n        {\n            \"groupId\": \"bc6c7bb9-87c7-4220-833b-40509c780dd4\",\n            \"assetId\": \"banking-user\",\n            \"version\": \"1.0.1\"\n        }\n    ],\n    \"remove\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch_name}}/exchange/dependencies",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch_name}}",
										"exchange",
										"dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update depency from asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment-id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{org-id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-OWNER-ID",
										"value": "{{owner_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"add\": [\n        {\n            \"groupId\": \"bc6c7bb9-87c7-4220-833b-40509c780dd4\",\n            \"assetId\": \"baking-common\",\n            \"version\": \"1.0.1\"\n        }\n    ],\n    \"remove\": [\n        {\n            \"groupId\": \"bc6c7bb9-87c7-4220-833b-40509c780dd4\",\n            \"assetId\": \"baking-common\",\n            \"version\": \"1.0.0\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch_name}}/exchange/dependencies",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch_name}}",
										"exchange",
										"dependencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete dependency to asset Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment-id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{org-id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-OWNER-ID",
										"value": "{{owner_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"groupId\": \"bc6c7bb9-87c7-4220-833b-40509c780dd4\",\n        \"assetId\": \"banking-user\",\n        \"version\": \"1.0.1\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch_name}}/exchange/dependencies",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch_name}}",
										"exchange",
										"dependencies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Branches",
					"item": [
						{
							"name": "Acquire the Write Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"acquireLock"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "Release the Write Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/releaseLock",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"releaseLock"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "Create new branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"dev\",\r\n    \"commitId\": \"454545\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "Delete branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"master\",\r\n    \"commitId\": \"734713bc0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "List project files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/open",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"open"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "Clean branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/clean",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"clean"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "Get branch status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "List branches",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches"
									]
								}
							},
							"response": [
								{
									"name": "Acquire the Write Lock",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/acquireLock",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"acquireLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"locked\": true,\n    \"name\": \"nitishrajmay2022\"\n}"
								}
							]
						},
						{
							"name": "Check Write Lock Status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/status",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "Check Write Lock Status",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "x-organization-id",
												"value": "{{x-organization-id}}",
												"type": "text"
											},
											{
												"key": "x-owner-id",
												"value": "{{x-owner-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/status",
											"host": [
												"{{url}}"
											],
											"path": [
												"designcenter",
												"api-designer",
												"projects",
												"{{project_id}}",
												"branches",
												"{{branch}}",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"lock\": {\r\n        \"locked\": false,\r\n        \"lockedBy\": null,\r\n        \"lockedByMe\": false\r\n    },\r\n    \"project\": {\r\n        \"commitsAhead\": 0,\r\n        \"commitsBehind\": 0,\r\n        \"added\": [],\r\n        \"conflicts\": [],\r\n        \"deleted\": [],\r\n        \"modified\": []\r\n    }\r\n}"
								}
							]
						}
					]
				},
				{
					"name": "File(s) & Folder(s)",
					"item": [
						{
							"name": "Add/ Update file content",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Create variable to get project name\r",
											"var projectName = pm.variables.get(\"project_name\");\r",
											"\r",
											"//Create variable to get project type\r",
											"var projectType = pm.variables.get(\"project_classifier\");\r",
											"\r",
											"//Convert project name to raml or oas naming convenion - kebab casing\r",
											"projectName = projectName.replace(/\\s+/g, '-').toLowerCase();\r",
											"\r",
											"//Concat both variables to create final project path\r",
											"var path = projectName.concat(\".\",projectType)\r",
											"\r",
											"//Set path to a environment variable for POST body \r",
											"pm.environment.set(\"project_path\",path);\r",
											"\r",
											"//console.log(path)\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"path\": \"{{project_path}}\",\n        \"type\": \"FILE\",\n        \"content\": \"#%RAML 1.0\\ntitle: Salesforce Customers System API\\ndescription: System API working with Customers in Salesforce.\\nversion: v2\\nmediaType: application/json\\n\\nuses: \\n  GlobalResources: ./exchange_modules/org.mule.examples/accelerator-global-resources/2.2.0/accelerator-global-resources.raml\\n  MarketTypes: ./exchange_modules/org.mule.examples/accelerator-cim-market-library/1.2.0/accelerator-cim-market-library.raml\\n\\nsecuredBy: [ GlobalResources.BasicAuth ]\\n\\n/ping:\\n  get:\\n    is: [ GlobalResources.PingResponse ]\\n    description: Get the current health status of this API.\\n\\n/contacts:\\n  description: Base resource representing individual contacts.\\n  get:\\n    description: Find one or more contacts. When matching on a given identifier, the precedence order is to match on Salesforce identifier first, then external identifier. Contacts can also be looked up by email address. The result set can be narrowed further by including only contacts created or updated during a given time period.\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Pageable ]\\n    queryParameters:\\n      contactId?:\\n        type: string\\n        description: Match on Salesforce contact identifier\\n      externalId?:\\n        type: string\\n        description: Match on an external identifier (e.g., global individual ID)\\n      emailAddress?:\\n        type: string\\n        description: Lookup by email address\\n      fromDate?:\\n        type: datetime\\n        description: Include only contacts created or updated on or after this date and time\\n      toDate?:\\n        type: datetime\\n        description: Include only contacts created or updated on or before this date and time\\n    responses:\\n      200:\\n        body:\\n          application/json:\\n            type: MarketTypes.Individual[]\\n  post:\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Locatable ]\\n    description: Creates a new contact.\\n    body:\\n      application/json:\\n        type: MarketTypes.Individual\\n    responses: \\n      201:\\n        body: \\n          application/json:\\n            type: GlobalResources.BasicResponse\\n\\n  /{contactId}:\\n    get:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Return details for an existing contact.\\n      responses:\\n        200:\\n          body:\\n            application/json:\\n              type: MarketTypes.Individual\\n    patch:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Update details for an existing contact. Returns the complete updated contact.\\n      body:\\n        application/json:\\n          type: MarketTypes.Individual\\n      responses:\\n        200:\\n          body: \\n            application/json:\\n              type: MarketTypes.Individual\\n\\n/customers:\\n  description: Base resource representing customers. Each customer will be associated with exactly one party. Primary identifiers represent internal Salesforce IDs.\\n  get:\\n    description: Find one or more customers. When matching on a given identifier, the precedence order is to match on Salesforce customer identifier first, then external identifier. Customers can also be looked up by email address. The result set can be narrowed further by including only customers created or updated during a given time period. Response will include summary Party information.\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Pageable ]\\n    queryParameters:\\n      customerId?:\\n        type: string\\n        description: Match on Salesforce customer identifier\\n      externalId?:\\n        type: string\\n        description: Match on an external identifier (e.g., global customer ID)\\n      emailAddress?:\\n        type: string\\n        description: Lookup by email address\\n      fromDate?:\\n        type: datetime\\n        description: Include only customers created or updated on or after this date and time\\n      toDate?:\\n        type: datetime\\n        description: Include only customers created or updated on or before this date and time\\n    responses:\\n      200:\\n        body:\\n          application/json:\\n            type: MarketTypes.Customer[]\\n  post:\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Locatable ]\\n    description: Creates a new customer. Request must include the underlying Party and contact information as well.\\n    body:\\n      application/json:\\n        type: MarketTypes.Customer\\n    responses: \\n      201:\\n        body: \\n          application/json:\\n            type: GlobalResources.BasicResponse\\n\\n  /{customerId}:\\n    get:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Return details for an existing customer, including the underlying Party and contact information.\\n      responses:\\n        200:\\n          body:\\n            application/json:\\n              type: MarketTypes.Customer\\n    patch:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Update details for an existing customer, including the underlying Party and contact information. Returns a complete version of the updated customer.\\n      body:\\n        application/json:\\n          type: MarketTypes.Customer\\n      responses:\\n        200:\\n          body: \\n            application/json:\\n              type: MarketTypes.Customer\\n\\n    /relatedContacts:\\n      description: Resource representing contacts that are related to this customer.\\n      get:\\n        is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n        description: Return all related contacts for a customer (\\n        responses:\\n          200:\\n            body:\\n              application/json:\\n                type: MarketTypes.PartyRelatedParty[]\\n      put:\\n        is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n        description: Upsert a set of related contacts for a customer.\\n        body:\\n          application/json:\\n            type: MarketTypes.PartyRelatedParty[]\\n        responses: \\n          200:\\n            body: \\n              application/json:\\n                type: GlobalResources.BasicResponse\\n\",\n        \"title\": \"API Spec\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/save",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add/ Update file content V2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Create variable to get project name\r",
											"var projectName = pm.variables.get(\"project_name\");\r",
											"\r",
											"//Create variable to get project type\r",
											"var projectType = pm.variables.get(\"project_type\");\r",
											"\r",
											"//Convert project name to raml or oas naming convenion - kebab casing\r",
											"projectName = projectName.replace(/\\s+/g, '-').toLowerCase();\r",
											"\r",
											"//Concat both variables to create final project path\r",
											"var path = projectName.concat(\".\",projectType)\r",
											"\r",
											"//Set path to a environment variable for POST body \r",
											"pm.environment.set(\"project_classifier\",path);\r",
											"\r",
											"//console.log(path)\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"path\": \"{{project_path}}\",\n        \"type\": \"FILE\",\n        \"content\": \"#%RAML 1.0\\ntitle: Salesforce Customers System API\\ndescription: System API working with Customers in Salesforce.\\nversion: v2\\nmediaType: application/json\\n\\nuses: \\n  GlobalResources: ./exchange_modules/org.mule.examples/accelerator-global-resources/2.2.0/accelerator-global-resources.raml\\n  MarketTypes: ./exchange_modules/org.mule.examples/accelerator-cim-market-library/1.2.0/accelerator-cim-market-library.raml\\n\\nsecuredBy: [ GlobalResources.BasicAuth ]\\n\\n/ping:\\n  get:\\n    is: [ GlobalResources.PingResponse ]\\n    description: Get the current health status of this API.\\n\\n/contacts:\\n  description: Base resource representing individual contacts.\\n  get:\\n    description: Find one or more contacts. When matching on a given identifier, the precedence order is to match on Salesforce identifier first, then external identifier. Contacts can also be looked up by email address. The result set can be narrowed further by including only contacts created or updated during a given time period.\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Pageable ]\\n    queryParameters:\\n      contactId?:\\n        type: string\\n        description: Match on Salesforce contact identifier\\n      externalId?:\\n        type: string\\n        description: Match on an external identifier (e.g., global individual ID)\\n      emailAddress?:\\n        type: string\\n        description: Lookup by email address\\n      fromDate?:\\n        type: datetime\\n        description: Include only contacts created or updated on or after this date and time\\n      toDate?:\\n        type: datetime\\n        description: Include only contacts created or updated on or before this date and time\\n    responses:\\n      200:\\n        body:\\n          application/json:\\n            type: MarketTypes.Individual[]\\n  post:\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Locatable ]\\n    description: Creates a new contact.\\n    body:\\n      application/json:\\n        type: MarketTypes.Individual\\n    responses: \\n      201:\\n        body: \\n          application/json:\\n            type: GlobalResources.BasicResponse\\n\\n  /{contactId}:\\n    get:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Return details for an existing contact.\\n      responses:\\n        200:\\n          body:\\n            application/json:\\n              type: MarketTypes.Individual\\n    patch:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Update details for an existing contact. Returns the complete updated contact.\\n      body:\\n        application/json:\\n          type: MarketTypes.Individual\\n      responses:\\n        200:\\n          body: \\n            application/json:\\n              type: MarketTypes.Individual\\n\\n/customers:\\n  description: Base resource representing customers. Each customer will be associated with exactly one party. Primary identifiers represent internal Salesforce IDs.\\n  get:\\n    description: Find one or more customers. When matching on a given identifier, the precedence order is to match on Salesforce customer identifier first, then external identifier. Customers can also be looked up by email address. The result set can be narrowed further by including only customers created or updated during a given time period. Response will include summary Party information.\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Pageable ]\\n    queryParameters:\\n      customerId?:\\n        type: string\\n        description: Match on Salesforce customer identifier\\n      externalId?:\\n        type: string\\n        description: Match on an external identifier (e.g., global customer ID)\\n      emailAddress?:\\n        type: string\\n        description: Lookup by email address\\n      fromDate?:\\n        type: datetime\\n        description: Include only customers created or updated on or after this date and time\\n      toDate?:\\n        type: datetime\\n        description: Include only customers created or updated on or before this date and time\\n    responses:\\n      200:\\n        body:\\n          application/json:\\n            type: MarketTypes.Customer[]\\n  post:\\n    is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable, GlobalResources.Locatable ]\\n    description: Creates a new customer. Request must include the underlying Party and contact information as well.\\n    body:\\n      application/json:\\n        type: MarketTypes.Customer\\n    responses: \\n      201:\\n        body: \\n          application/json:\\n            type: GlobalResources.BasicResponse\\n\\n  /{customerId}:\\n    get:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Return details for an existing customer, including the underlying Party and contact information.\\n      responses:\\n        200:\\n          body:\\n            application/json:\\n              type: MarketTypes.Customer\\n    patch:\\n      is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n      description: Update details for an existing customer, including the underlying Party and contact information. Returns a complete version of the updated customer.\\n      body:\\n        application/json:\\n          type: MarketTypes.Customer\\n      responses:\\n        200:\\n          body: \\n            application/json:\\n              type: MarketTypes.Customer\\n\\n    /relatedContacts:\\n      description: Resource representing contacts that are related to this customer.\\n      get:\\n        is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n        description: Return all related contacts for a customer (\\n        responses:\\n          200:\\n            body:\\n              application/json:\\n                type: MarketTypes.PartyRelatedParty[]\\n      put:\\n        is: [ GlobalResources.ErrorResponses, GlobalResources.Trackable ]\\n        description: Upsert a set of related contacts for a customer.\\n        body:\\n          application/json:\\n            type: MarketTypes.PartyRelatedParty[]\\n        responses: \\n          200:\\n            body: \\n              application/json:\\n                type: GlobalResources.BasicResponse\\n\",\n        \"title\": \"API Spec\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/save/v2",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"save",
										"v2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Datatype Folder with files",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"path\": \"dataTypes/abc.raml\",\r\n        \"type\": \"file\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/save",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Examples Folder with files",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"path\": \"examples/bus.raml\",\r\n        \"type\": \"FILE\",\r\n        \"content\": \"#%RAML 1.0 Example\\ntype: object\\nproperties:\\n  brand: string\\n  model: string\\n  color: string\\n  year?: string\",\r\n        \"title\": \"Car Datatype\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/save",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"save"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get file or folder structure",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/files",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"files"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get file content",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/files/v2/{{project_main}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"files",
										"v2",
										"{{project_main}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get file content (JSON response)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/files/{{project_main}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"files",
										"{{project_main}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Move or Rename file or folder",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//uri has what file or folder to move/ rename\r",
											"//body has where to move or rename\r",
											"//%2F is used as escape character for / in file path in URI"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \r\n    \"path\": \"examples/Car.raml\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/files/example%2FCar.raml/move",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"files",
										"example%2FCar.raml",
										"move"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add file(s) or folder(s) to upload",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//This API can be used to upload a file with or w/o folder directly to your project.\r",
											"//It can also be used to replace root file\r",
											"//Mention file-path in key and file directory in value"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "{{project_main}}",
											"type": "file",
											"src": "/C:/NonProjects/MuleSoft/API Spec Automation/fins-salesforce-insurance-exp-api-spec.raml"
										},
										{
											"key": "dataTypes/ExternalIdType.raml",
											"type": "file",
											"src": "/C:/NonProjects/MuleSoft/API Spec Automation/dataTypes/ExternalIdType.raml"
										},
										{
											"key": "dataTypes/ValidationResponseType.raml",
											"type": "file",
											"src": "/C:/NonProjects/MuleSoft/API Spec Automation/dataTypes/ValidationResponseType.raml"
										},
										{
											"key": "examples/ExternalIdExample.raml",
											"type": "file",
											"src": "/C:/NonProjects/MuleSoft/API Spec Automation/examples/ExternalIdExample.raml"
										},
										{
											"key": "examples/ValidationResponseExample.raml",
											"type": "file",
											"src": "/C:/NonProjects/MuleSoft/API Spec Automation/examples/ValidationResponseExample.raml"
										},
										{
											"key": "accelerator-salesforce-customers-system-api.json",
											"type": "file",
											"src": "accelerator-salesforce-customers-sys-api-2.3.0-oas/api.json",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/save/v2",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"save",
										"v2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Delete a project",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete file or folder",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-organization-id",
										"value": "{{x-organization-id}}",
										"type": "text"
									},
									{
										"key": "x-owner-id",
										"value": "{{x-owner-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/designcenter/api-designer/projects/{{project_id}}/branches/{{branch}}/files/{{project_main}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"designcenter",
										"api-designer",
										"projects",
										"{{project_id}}",
										"branches",
										"{{branch}}",
										"files",
										"{{project_main}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Soft delete an asset in Exchange",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-delete-type",
										"value": "soft-delete",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/assets/{{x-organization-id}}/{{exchange_assetId}}/{{exchange_assetVersion}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"assets",
										"{{x-organization-id}}",
										"{{exchange_assetId}}",
										"{{exchange_assetVersion}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Hard delete an asset in Exchange",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "x-delete-type",
										"value": "hard-delete",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/assets/{{x-organization-id}}/{{exchange_assetId}}/{{exchange_assetVersion}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"assets",
										"{{x-organization-id}}",
										"{{exchange_assetId}}",
										"{{exchange_assetVersion}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Exchange",
			"item": [
				{
					"name": "Assets",
					"item": [
						{
							"name": "Asset details",
							"item": [
								{
									"name": "icon",
									"item": [
										{
											"name": "Delete an Icon",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/icon",
													"host": [
														"{{url}}"
													],
													"path": [
														"exchange",
														"api",
														"v2",
														"assets",
														"{{organization_id}}",
														"{{app_Id}}",
														"icon"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "version",
									"item": [
										{
											"name": "versiongroup",
											"item": [
												{
													"name": "Instances",
													"item": [
														{
															"name": "Get asset version groups Instances (v1 example)",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer {{token}}",
																		"type": "text"
																	}
																],
																"url": {
																	"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/versionGroups/v1/instances",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"exchange",
																		"api",
																		"v2",
																		"assets",
																		"{{organization_id}}",
																		"{{app_Id}}",
																		"versionGroups",
																		"v1",
																		"instances"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get asset version groups Instances by Id",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer {{token}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"name\":\"test42\",\r\n    \"endpointUri\":\"http://google.de\",\r\n    \"isPublic\":false\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/versionGroups/v1/instances/external/{{external_instance_id}}",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"exchange",
																		"api",
																		"v2",
																		"assets",
																		"{{organization_id}}",
																		"{{app_Id}}",
																		"versionGroups",
																		"v1",
																		"instances",
																		"external",
																		"{{external_instance_id}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create external instance",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer {{token}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"name\":\"test2\",\r\n    \"endpointUri\":\"http://google.de\",\r\n    \"isPublic\":false\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/versionGroups/v1/instances/external",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"exchange",
																		"api",
																		"v2",
																		"assets",
																		"{{organization_id}}",
																		"{{app_Id}}",
																		"versionGroups",
																		"v1",
																		"instances",
																		"external"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Get asset version groups",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/versionGroups",
															"host": [
																"{{url}}"
															],
															"path": [
																"exchange",
																"api",
																"v2",
																"assets",
																"{{organization_id}}",
																"{{app_Id}}",
																"versionGroups"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Get asset version",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/minorVersions/1.0",
													"host": [
														"{{url}}"
													],
													"path": [
														"exchange",
														"api",
														"v2",
														"assets",
														"{{organization_id}}",
														"{{app_Id}}",
														"minorVersions",
														"1.0"
													]
												}
											},
											"response": []
										},
										{
											"name": "Deprecate asset version",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"status\":\"deprecated\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/1.0.1/status",
													"host": [
														"{{url}}"
													],
													"path": [
														"exchange",
														"api",
														"v2",
														"assets",
														"{{organization_id}}",
														"{{app_Id}}",
														"1.0.1",
														"status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Revert deprecated state of asset version",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"status\":\"published\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/1.0.1/status",
													"host": [
														"{{url}}"
													],
													"path": [
														"exchange",
														"api",
														"v2",
														"assets",
														"{{organization_id}}",
														"{{app_Id}}",
														"1.0.1",
														"status"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get single asset",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"assets",
												"{{organization_id}}",
												"{{app_Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change asset name",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\":\"soap-rest-proxy-td-kh\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"assets",
												"{{organization_id}}",
												"{{app_Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single asset reviews",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/1.0.0/reviews",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"assets",
												"{{organization_id}}",
												"{{app_Id}}",
												"1.0.0",
												"reviews"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change description of asset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\":\"Existing SOAP service and proxied with REST API app/json and integrated with Salesforce and ServiceNow...... and other apps\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"assets",
												"{{organization_id}}",
												"{{app_Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Share asset",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"added\":[\r\n      {\r\n         \"identityId\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"role\":\"viewer\",\r\n         \"identityType\":\"organization\",\r\n         \"organizationId\":\"{{organization_id}}\"\r\n      }\r\n   ],\r\n   \"deleted\":[\r\n      \r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/identities",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"assets",
												"{{organization_id}}",
												"{{app_Id}}",
												"identities"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish new Asset with metadata",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "type",
													"value": "\"custom\"",
													"type": "text"
												},
												{
													"key": "name",
													"value": "\"Custom asset with mutable data\"",
													"type": "text"
												},
												{
													"key": "categories.test-coverage",
													"value": "\"90\"",
													"type": "text",
													"disabled": true
												},
												{
													"key": "tags",
													"value": "\"tag1, tag2\"",
													"type": "text"
												},
												{
													"key": "fields.maintainers",
													"value": "\"Mulesoft, Exchange\"",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fields.github-repo",
													"value": "\"https://github.com/mulesoft/exchange\"",
													"type": "text"
												},
												{
													"key": "fields.releaseDate",
													"value": "\"2020-01-01T20:00:00.000Z\"",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fields.buildVersion",
													"value": "\"v1.0.949\"",
													"type": "text",
													"disabled": true
												},
												{
													"key": "files.docs.zip",
													"value": "@\"/Users/userName/Desktop/pages.zip\"",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}/exchange/api/v2/assets",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"assets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish new asset on exchange",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "organizationId",
													"value": "{{organization_id}}",
													"type": "text"
												},
												{
													"key": "groupId",
													"value": "{{organization_id}}",
													"type": "text"
												},
												{
													"key": "assetId",
													"value": "mysoapapp",
													"type": "text"
												},
												{
													"key": "version",
													"value": "1.0.0",
													"type": "text"
												},
												{
													"key": "name",
													"value": "my soap app",
													"type": "text"
												},
												{
													"key": "classifier",
													"value": "wsdl",
													"type": "text"
												},
												{
													"key": "apiVersion",
													"value": "v1",
													"type": "text"
												},
												{
													"key": "asset",
													"type": "file",
													"src": "/C:/Users/khanamir/Downloads/tshirts.demos.mulesoft.com.wsdl"
												}
											]
										},
										"url": {
											"raw": "{{url}}/exchange/api/v1/assets",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v1",
												"assets"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get all assets for organization by mulesoft",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/assets?search=&types=api-group&types=connector&types=custom&types=example&types=extension&types=http-api&types=policy&types=raml-fragment&types=rest-api&types=soap-api&types=template&domain=&organizationId={{mulesoft_org_id}}&masterOrganizationId=&offset=0&limit=20&sharedWithMe=&includeSnapshots=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"assets"
									],
									"query": [
										{
											"key": "search",
											"value": ""
										},
										{
											"key": "types",
											"value": "api-group"
										},
										{
											"key": "types",
											"value": "connector"
										},
										{
											"key": "types",
											"value": "custom"
										},
										{
											"key": "types",
											"value": "example"
										},
										{
											"key": "types",
											"value": "extension"
										},
										{
											"key": "types",
											"value": "http-api"
										},
										{
											"key": "types",
											"value": "policy"
										},
										{
											"key": "types",
											"value": "raml-fragment"
										},
										{
											"key": "types",
											"value": "rest-api"
										},
										{
											"key": "types",
											"value": "soap-api"
										},
										{
											"key": "types",
											"value": "template"
										},
										{
											"key": "domain",
											"value": ""
										},
										{
											"key": "organizationId",
											"value": "{{mulesoft_org_id}}"
										},
										{
											"key": "masterOrganizationId",
											"value": ""
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "sharedWithMe",
											"value": ""
										},
										{
											"key": "includeSnapshots",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all assets for organization by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/assets?search=&types=api-group&types=connector&types=custom&types=example&types=extension&types=http-api&types=policy&types=raml-fragment&types=rest-api&types=soap-api&types=template&domain=&organizationId={{organization_id}}&masterOrganizationId=&offset=0&limit=20&sharedWithMe=&includeSnapshots=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"assets"
									],
									"query": [
										{
											"key": "search",
											"value": ""
										},
										{
											"key": "types",
											"value": "api-group"
										},
										{
											"key": "types",
											"value": "connector"
										},
										{
											"key": "types",
											"value": "custom"
										},
										{
											"key": "types",
											"value": "example"
										},
										{
											"key": "types",
											"value": "extension"
										},
										{
											"key": "types",
											"value": "http-api"
										},
										{
											"key": "types",
											"value": "policy"
										},
										{
											"key": "types",
											"value": "raml-fragment"
										},
										{
											"key": "types",
											"value": "rest-api"
										},
										{
											"key": "types",
											"value": "soap-api"
										},
										{
											"key": "types",
											"value": "template"
										},
										{
											"key": "domain",
											"value": ""
										},
										{
											"key": "organizationId",
											"value": "{{organization_id}}"
										},
										{
											"key": "masterOrganizationId",
											"value": ""
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "sharedWithMe",
											"value": ""
										},
										{
											"key": "includeSnapshots",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all assets for organization shared with me",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/assets?search=&types=api-group&types=connector&types=custom&types=example&types=extension&types=http-api&types=policy&types=raml-fragment&types=rest-api&types=soap-api&types=template&domain=&organizationId={{mulesoft_org_id}}&masterOrganizationId=&offset=0&limit=20&sharedWithMe=true&includeSnapshots=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"assets"
									],
									"query": [
										{
											"key": "search",
											"value": ""
										},
										{
											"key": "types",
											"value": "api-group"
										},
										{
											"key": "types",
											"value": "connector"
										},
										{
											"key": "types",
											"value": "custom"
										},
										{
											"key": "types",
											"value": "example"
										},
										{
											"key": "types",
											"value": "extension"
										},
										{
											"key": "types",
											"value": "http-api"
										},
										{
											"key": "types",
											"value": "policy"
										},
										{
											"key": "types",
											"value": "raml-fragment"
										},
										{
											"key": "types",
											"value": "rest-api"
										},
										{
											"key": "types",
											"value": "soap-api"
										},
										{
											"key": "types",
											"value": "template"
										},
										{
											"key": "domain",
											"value": ""
										},
										{
											"key": "organizationId",
											"value": "{{mulesoft_org_id}}"
										},
										{
											"key": "masterOrganizationId",
											"value": ""
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "sharedWithMe",
											"value": "true"
										},
										{
											"key": "includeSnapshots",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search assets by text",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/assets?search={{search_text}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"assets"
									],
									"query": [
										{
											"key": "search",
											"value": "{{search_text}}"
										}
									]
								},
								"description": "Generated from a curl request:  \ncurl -X POST -H \"Authorization: Bearer {{token}}\" -H \"Content-Type: application/json\" -d '{  \n\"displayName\": “Custom_Field_Test”,  \n\"tagKey\": “Tag_Key_Test”,  \n\"dataType\": \"text\",  \n\"assetTypeRestrictions\": \\[\\]  \n}  \n' \"[https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\\\"](https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields)"
							},
							"response": []
						}
					]
				},
				{
					"name": "My Applications",
					"item": [
						{
							"name": "contracts",
							"item": [
								{
									"name": "Get all contracts for consumer app",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/apiplatform/repository/v2/organizations/{{organization_id}}/applications/895843/contracts",
											"host": [
												"{{url}}"
											],
											"path": [
												"apiplatform",
												"repository",
												"v2",
												"organizations",
												"{{organization_id}}",
												"applications",
												"895843",
												"contracts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contracts for instances",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/exchange/api/v2/organizations/{{organization_id}}/applications/895843/instances/16802222/contracts",
											"host": [
												"{{url}}"
											],
											"path": [
												"exchange",
												"api",
												"v2",
												"organizations",
												"{{organization_id}}",
												"applications",
												"895843",
												"instances",
												"16802222",
												"contracts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete consumer app",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/applications/895850",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"applications",
										"895850"
									]
								},
								"description": "Generated from a curl request:  \ncurl -X POST -H \"Authorization: Bearer {{token}}\" -H \"Content-Type: application/json\" -d '{  \n\"displayName\": “Custom_Field_Test”,  \n\"tagKey\": “Tag_Key_Test”,  \n\"dataType\": \"text\",  \n\"assetTypeRestrictions\": \\[\\]  \n}  \n' \"[https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\\\"](https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields)"
							},
							"response": []
						},
						{
							"name": "Get all consumer application instances",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/organizations/{{organization_id}}/applications/895843/instances",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"organizations",
										"{{organization_id}}",
										"applications",
										"895843",
										"instances"
									]
								},
								"description": "Generated from a curl request:  \ncurl -X POST -H \"Authorization: Bearer {{token}}\" -H \"Content-Type: application/json\" -d '{  \n\"displayName\": “Custom_Field_Test”,  \n\"tagKey\": “Tag_Key_Test”,  \n\"dataType\": \"text\",  \n\"assetTypeRestrictions\": \\[\\]  \n}  \n' \"[https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\\\"](https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\")"
							},
							"response": []
						},
						{
							"name": "Reset client secret for consumer app",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/applications/895851/secret/reset",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"applications",
										"895851",
										"secret",
										"reset"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit consumer app information",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"myapp2\",\r\n    \"description\":\"abcdefghijklmnopqrstuvwxyz\",\r\n    \"url\":\"http://google.cd\",\r\n    \"redirectUri\":[],\r\n    \"grantTypes\":[],\r\n    \"apiEndpoints\":false\r\n}"
								},
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/applications/895851",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"applications",
										"895851"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tags",
					"item": [
						{
							"name": "Add tags to single asset",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n\t{\r\n\t\t\"value\":\"postmancollection\"\r\n\t},\r\n\t{\r\n\t\t\"value\":\"anypointplatformapis\"\r\n\t}    \r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/assets/{{organization_id}}/{{app_Id}}/1.0.1/tags",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"assets",
										"{{organization_id}}",
										"{{app_Id}}",
										"1.0.1",
										"tags"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "Get all categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/categories",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"categories"
									]
								},
								"description": "Generated from a curl request:  \ncurl -X POST -H \"Authorization: Bearer {{token}}\" -H \"Content-Type: application/json\" -d '{  \n\"displayName\": “Custom_Field_Test”,  \n\"tagKey\": “Tag_Key_Test”,  \n\"dataType\": \"text\",  \n\"assetTypeRestrictions\": \\[\\]  \n}  \n' \"[https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\\\"](https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\")"
							},
							"response": []
						},
						{
							"name": "Delete category by tagKey",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/categories/test3",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"categories",
										"test3"
									]
								},
								"description": "Generated from a curl request:  \ncurl -X POST -H \"Authorization: Bearer {{token}}\" -H \"Content-Type: application/json\" -d '{  \n\"displayName\": “Custom_Field_Test”,  \n\"tagKey\": “Tag_Key_Test”,  \n\"dataType\": \"text\",  \n\"assetTypeRestrictions\": \\[\\]  \n}  \n' \"[https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\\\"](https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\")"
							},
							"response": []
						},
						{
							"name": "Add new category",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"displayName\":\"test3\",\r\n   \"acceptedValues\":[\r\n      \"test\",\r\n      \"test2\"\r\n   ],\r\n   \"assetTypeRestrictions\":[\r\n      \"connector\",\r\n      \"extension\"\r\n   ]\r\n}"
								},
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/categories",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"categories"
									]
								},
								"description": "Generated from a curl request:  \ncurl -X POST -H \"Authorization: Bearer {{token}}\" -H \"Content-Type: application/json\" -d '{  \n\"displayName\": “Custom_Field_Test”,  \n\"tagKey\": “Tag_Key_Test”,  \n\"dataType\": \"text\",  \n\"assetTypeRestrictions\": \\[\\]  \n}  \n' \"[https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\\\"](https://anypoint.mulesoft.com/exchange/api/v1/organizations/59995d29-ebe2-43d9-a52b-766683fd41a7/fields\\\")"
							},
							"response": []
						}
					]
				},
				{
					"name": "Custom Fields",
					"item": [
						{
							"name": "Get all custom fields of organization",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/organizations/{{organization_id}}/fields",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"organizations",
										"{{organization_id}}",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a custom field [enum]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"dataType\": \"enum\",\r\n\t\"acceptedValues\": [\"OAS\",\"RAML\"],\r\n\t\"displayName\": \"SubType\",\r\n\t\"tagKey\": \"subType\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/exchange/api/v2/organizations/{{organization_id}}/fields",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"organizations",
										"{{organization_id}}",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a custom field [number]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"dataType\": \"number\",\r\n\t\"displayName\": \"UX Factor\",\r\n\t\"tagKey\": \"uxFactor\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/exchange/api/v2/organizations/{{organization_id}}/fields",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"organizations",
										"{{organization_id}}",
										"fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add custom field [enum] to asset",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"tagValue\": [\"OAS\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/assets/{{organization_id}}/{{app_Id}}/1.0.1/tags/fields/subType",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"assets",
										"{{organization_id}}",
										"{{app_Id}}",
										"1.0.1",
										"tags",
										"fields",
										"subType"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add custom field [number] to asset",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"tagValue\": 4\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/assets/{{organization_id}}/{{app_Id}}/1.0.1/tags/fields/uxFactor",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"assets",
										"{{organization_id}}",
										"{{app_Id}}",
										"1.0.1",
										"tags",
										"fields",
										"uxFactor"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove custom field [enum] from asset",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/assets/{{organization_id}}/{{app_Id}}/1.0.1/tags/fields/subType",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"assets",
										"{{organization_id}}",
										"{{app_Id}}",
										"1.0.1",
										"tags",
										"fields",
										"subType"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove custom field [number] from asset",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/assets/{{organization_id}}/{{app_Id}}/1.0.1/tags/fields/uxFactor",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"assets",
										"{{organization_id}}",
										"{{app_Id}}",
										"1.0.1",
										"tags",
										"fields",
										"uxFactor"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete custom field [number]",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v1/organizations/{{organization_id}}/fields/uxFactor",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"fields",
										"uxFactor"
									]
								}
							},
							"response": []
						}
					],
					"description": "dataType available:\n\"date\", \"enum\", \"number\", \"text\", \"number-list\", \"text-list\","
				},
				{
					"name": "Identities",
					"item": [
						{
							"name": "Get all identities of organization",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/organizations/{{organization_id}}/identities?offset=0&limit=100&search=a",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"organizations",
										"{{organization_id}}",
										"identities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "search",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get asset identities",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/exchange/api/v2/assets/{{organization_id}}/{{app_Id}}/identities",
									"host": [
										"{{url}}"
									],
									"path": [
										"exchange",
										"api",
										"v2",
										"assets",
										"{{organization_id}}",
										"{{app_Id}}",
										"identities"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Maven Assets",
					"item": [
						{
							"name": "Get Parent POM",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mavenurl}}/api/v2/organizations/{{organization_id}}/maven/{{groupId}}/{{artifactId}}/{{version}}/{{artifactId}}-{{version}}.pom",
									"host": [
										"{{mavenurl}}"
									],
									"path": [
										"api",
										"v2",
										"organizations",
										"{{organization_id}}",
										"maven",
										"{{groupId}}",
										"{{artifactId}}",
										"{{version}}",
										"{{artifactId}}-{{version}}.pom"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GraphQL Exchange search (Readme inside)",
					"item": [
						{
							"name": "v1 (/v1 in the URL)",
							"item": [
								{
									"name": "by Group/Asset/Verion return all fields (GraphQL Body)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "content-type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\n  assets(asset: {groupId: \"org.mule.connectors\", assetId: \"mule-db-connector\", version: \"1.2.1\"}) { \n      # Possible fields to retrieve\n    groupId\n    assetId\n    version\n    description\n    name\n    type\n    tags {\n      value\n      key\n    }\n    createdBy {\n      id\n      userName\n      firstName\n      lastName\n    }\n    files {\n      classifier\n      packaging\n      externalLink\n      md5\n    }\n    rating\n    numberOfRates\n    createdAt\n    organizationId\n    assetLink\n    runtimeVersion\n    productAPIVersion\n    dependencies {\n      groupId\n      assetId\n      version\n      name\n      type\n    }\n    related(relationshipType: OtherVersions) {\n      groupId\n      assetId\n      version\n      name\n      type\n      runtimeVersion\n      productAPIVersion\n    }\n  }\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "https://anypoint.mulesoft.com/graph/api/v1/graphql",
											"protocol": "https",
											"host": [
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"graph",
												"api",
												"v1",
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "v2 (/v2 in the URL)",
							"item": [
								{
									"name": "Search by GroupId, Asset and Version (JSON Body)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "content-type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"query\":\"{asset(groupId: \\\"org.mule.connectors\\\",assetId: \\\"mule-db-connector\\\",version: \\\"1.2.1\\\"){groupId assetId version}}\"\n}"
										},
										"url": {
											"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
											"protocol": "https",
											"host": [
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"graph",
												"api",
												"v2",
												"graphql"
											]
										}
									},
									"response": [
										{
											"name": "Search by GroupId, Asset and Version (JSON Body)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \"query\":\"{asset(groupId: \\\"org.mule.connectors\\\",assetId: \\\"mule-db-connector\\\",version: \\\"1.2.1\\\"){groupId assetId version}}\"\n}"
												},
												"url": {
													"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
													"protocol": "https",
													"host": [
														"anypoint",
														"mulesoft",
														"com"
													],
													"path": [
														"graph",
														"api",
														"v2",
														"graphql"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Thu, 31 Aug 2023 15:10:57 GMT"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "x-powered-by",
													"value": "Express"
												},
												{
													"key": "x-ratelimit-limit",
													"value": "250"
												},
												{
													"key": "x-ratelimit-remaining",
													"value": "249"
												},
												{
													"key": "x-ratelimit-reset",
													"value": "1693494715"
												},
												{
													"key": "x-request-id",
													"value": "52d49354-6232-4d9c-b552-dc10008e12f7"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"asset\": {\n            \"groupId\": \"org.mule.connectors\",\n            \"assetId\": \"mule-db-connector\",\n            \"version\": \"1.2.1\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Search by AssetStatus (JSON Body)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "content-type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": \"{assets(status:[development, published, deprecated]){groupId assetId version status}}\"\n}"
										},
										"url": {
											"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
											"protocol": "https",
											"host": [
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"graph",
												"api",
												"v2",
												"graphql"
											]
										}
									},
									"response": [
										{
											"name": "Search by AssetStatus (JSON Body)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": \"{assets(status:[development, published, deprecated]){groupId assetId version status}}\"\n}"
												},
												"url": {
													"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
													"protocol": "https",
													"host": [
														"anypoint",
														"mulesoft",
														"com"
													],
													"path": [
														"graph",
														"api",
														"v2",
														"graphql"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Thu, 31 Aug 2023 15:11:04 GMT"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "x-powered-by",
													"value": "Express"
												},
												{
													"key": "x-ratelimit-limit",
													"value": "250"
												},
												{
													"key": "x-ratelimit-remaining",
													"value": "249"
												},
												{
													"key": "x-ratelimit-reset",
													"value": "1693494677"
												},
												{
													"key": "x-request-id",
													"value": "20604c11-63f5-46c6-a834-2b97420bf978"
												},
												{
													"key": "Content-Length",
													"value": "2444"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"assets\": [\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.4\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.3\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.2\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.1\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.0\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.5\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.4\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.3\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.2\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.1\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.0\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.8\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.7\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.6\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.5\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.4\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.3\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.2\",\n                \"status\": \"deprecated\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.1\",\n                \"status\": \"deprecated\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.0\",\n                \"status\": \"deprecated\"\n            }\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "Search by AssetStatus (GraphQL Body)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "content-type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{assets(status:[development, published, deprecated]){groupId assetId version status}}",
												"variables": ""
											}
										},
										"url": {
											"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
											"protocol": "https",
											"host": [
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"graph",
												"api",
												"v2",
												"graphql"
											]
										}
									},
									"response": [
										{
											"name": "Search by AssetStatus (GraphQL Body)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "graphql"
												},
												"url": {
													"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
													"protocol": "https",
													"host": [
														"anypoint",
														"mulesoft",
														"com"
													],
													"path": [
														"graph",
														"api",
														"v2",
														"graphql"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "access-control-allow-origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Thu, 31 Aug 2023 15:11:09 GMT"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "x-powered-by",
													"value": "Express"
												},
												{
													"key": "x-ratelimit-limit",
													"value": "250"
												},
												{
													"key": "x-ratelimit-remaining",
													"value": "248"
												},
												{
													"key": "x-ratelimit-reset",
													"value": "1693494677"
												},
												{
													"key": "x-request-id",
													"value": "0726bc5b-9c32-4467-914e-31776930e73a"
												},
												{
													"key": "Content-Length",
													"value": "2444"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"assets\": [\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.4\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.3\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.2\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.1\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.5.0\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.5\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.4\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.3\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.2\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.1\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.4.0\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.8\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.7\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.6\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.5\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.4\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.3\",\n                \"status\": \"published\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.2\",\n                \"status\": \"deprecated\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.1\",\n                \"status\": \"deprecated\"\n            },\n            {\n                \"groupId\": \"com.mulesoft.connectors\",\n                \"assetId\": \"mule-sap-s4hana-cloud-connector\",\n                \"version\": \"2.3.0\",\n                \"status\": \"deprecated\"\n            }\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "SearchTerm return all fields",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "content-type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\n  assets(\n    searchTerm: \"banking\"\n  ) {\n        \n        assetId\n        attributes{key,value}\n        labels\n        categories{value,key,displayName}\n        customFields {\n            ...on DateCustomField {\n                key, dateValue\n            }\n        }\n        contactEmail\n        contactName\n        createdDate\n        description\n        extensionModel{\n            hasConfigurations\n            hasConnectionProviders\n            hasMessageSources\n            hasOperations\n        }\n        groupId\n        icon\n        isGenerated\n        isLatestVersion\n        isMozartTemplate\n        isPublic\n        isSnapshot\n        minMuleVersion\n        minorVersion\n        name\n        numberOfRates\n        originalFormat\n        originalFormatVersion\n        organizationId\n        rating\n        status\n        type\n        updatedDate\n        version\n        versionGroup\n        labels \n        externalFile {\n            url \n        }\n        createdBy {\n            id \n            userName \n            firstName \n            lastName \n        }\n        #These are not working as they may be part of \"Search\" parameters instead of a Return/Response\n        # tags? \n        # Possible fields to retrieve\n        # customFields{\n        #     textCustomField\n        #     textListCustomField\n        #     numericCustomField\n        #     numericListCustomField\n        #     dateCustomField\n        #     enumCustomField\n        # }\n        # files{}\n        # offset\n        # limit\n        # sharedWithMe\n        # attributes{}\n        # excludeAttributes\n        #files{key,value}\n\n  }\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
											"protocol": "https",
											"host": [
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"graph",
												"api",
												"v2",
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "README (read the BODY)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "Whenever you work with GraphQL be sure to review these three sites:\n\n1. API Portal (this is the basic documentation of the Exchange GraphQL API):\n https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/exchange-graph-http/minor/2.0/pages/Querying%20the%20graph/\n\n\n2. MuleDocs (Exchange GraphQL version 1 and version 2 are VERY different, please be aware)\n https://docs.mulesoft.com/exchange/to-search-with-graph-api#reference-query-filter-parameters\n\n\n3. Runnable GraphQL site with an example preloaded (Postman collections in this folder will help you building and testing very similar to the playground):\nhttps://anypoint.mulesoft.com/graph/api/v2/graphql?query=%23%0A%23+Welcome+to+Exchange+GraphQL%0A%23%0A%23+Exchange+GraphQL+is+an+in-browser+tool+for+writing%2C+validating%2C+and%0A%23+testing+GraphQL+queries.%0A%23%0A%23+Type+queries+into+this+side+of+the+screen%2C+and+you+will+see+intelligent%0A%23+typeaheads+aware+of+the+current+GraphQL+type+schema+and+live+syntax+and%0A%23+validation+errors+highlighted+within+the+text.%0A%23%0A%23+GraphQL+queries+typically+start+with+a+%22%7B%22+character.+Lines+that+start%0A%23+with+a+%23+are+ignored.%0A%23%0A%23+An+example+GraphQL+query+might+look+like%3A%0A%23%0A%23+++++%7B%0A%23+++++++field%28arg%3A+%22value%22%29+%7B%0A%23+++++++++subField%0A%23+++++++%7D%0A%23+++++%7D%0A%23%0A%23+Keyboard+shortcuts%3A%0A%23%0A%23++Prettify+Query%3A++Shift-Ctrl-P+%28or+press+the+prettify+button+above%29%0A%23%0A%23+++++Merge+Query%3A++Shift-Ctrl-M+%28or+press+the+merge+button+above%29%0A%23%0A%23+++++++Run+Query%3A++Ctrl-Enter+%28or+press+the+play+button+above%29%0A%23%0A%23+++Auto+Complete%3A++Ctrl-Space+%28or+just+start+typing%29%0A%23%0A%0A%7B%0A++assets%28%0A++++searchTerm%3A+%22123%22%0A++%29+%7B%0A++++organizationId%0A++++groupId%0A++++assetId%0A++++version%0A++++minorVersion%0A++++versionGroup%0A++++description%0A++++name%0A++++contactName%0A++++contactEmail%0A++++type%0A++++icon%0A++++status%0A++++isPublic%0A++++isLatestVersion%0A++++createdDate%0A++++updatedDate%0A++++originalFormat%0A++++originalFormatVersion%0A++++minMuleVersion%0A++++isGenerated%0A++++isMozartTemplate%0A++++isSnapshot%0A++++rating%0A++++numberOfRates%0A++%7D%0A%7D%0A#",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://anypoint.mulesoft.com/graph/api/v2/graphql",
									"protocol": "https",
									"host": [
										"anypoint",
										"mulesoft",
										"com"
									],
									"path": [
										"graph",
										"api",
										"v2",
										"graphql"
									]
								},
								"description": "Whenever you work with GraphQL be sure to review these three sites:\n\n1. API Portal (this is the basic documentation of the Exchange GraphQL API):  \n    [https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/exchange-graph-http/minor/2.0/pages/Querying%20the%20graph/](https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/exchange-graph-http/minor/2.0/pages/Querying%20the%20graph/)\n2. MuleDocs (Exchange GraphQL version 1 and version 2 are VERY different, please be aware)  \n    [https://docs.mulesoft.com/exchange/to-search-with-graph-api#reference-query-filter-parameters](https://docs.mulesoft.com/exchange/to-search-with-graph-api#reference-query-filter-parameters)\n3. Runnable GraphQL site with an example preloaded (Postman collections in this folder will help you building and testing very similar to the playground):"
							},
							"response": []
						}
					],
					"description": "Whenever you work with GraphQL be sure to review these three sites:\n\n1. [API Portal (this is the basic documentation of the Exchange GraphQL API)](https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/exchange-graph-http/minor/2.0/pages/Querying%20the%20graph/)\n2. [MuleDocs (Exchange GraphQL version 1 and version 2 are VERY different, please be aware)](https://docs.mulesoft.com/exchange/to-search-with-graph-api#reference-query-filter-parameters)\n3. [Runnable GraphQL site with an example preloaded](https://anypoint.mulesoft.com/graph/api/v2/graphql)"
				}
			]
		},
		{
			"name": "Management Center",
			"item": [
				{
					"name": "Access Management",
					"item": [
						{
							"name": "Environments",
							"item": [
								{
									"name": "Get all environments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/environments",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"environments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get environment by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/environments/{{environment_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get client Id and client secret",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/clients/{{client_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"clients",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a new environment",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"activeOrganizationId\":\"{{organization_id}}\",\r\n   \"name\":\"Production-2\",\r\n   \"type\":\"production\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/environments",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"environments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update an environment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"sab-test-a\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/:organization_id/environments/:environment_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												":organization_id",
												"environments",
												":environment_id"
											],
											"variable": [
												{
													"key": "organization_id",
													"value": "{{organization_id}}"
												},
												{
													"key": "environment_id",
													"value": "{{environment_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete an environment",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/environments/{{environment_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Business Groups (Organizations)",
							"item": [
								{
									"name": "Members",
									"item": [
										{
											"name": "Get Organization By Id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/accounts/api/organizations/:orgid/members",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														":orgid",
														"members"
													],
													"variable": [
														{
															"key": "orgid",
															"value": "{{organization_id}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Hierarchy",
									"item": [
										{
											"name": "Get Business Group Hierarchy",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/hierarchy",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"hierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get organization hierarchy",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/hierarchy",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"hierarchy"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Organization",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example\",\n    \"parentOrganizationId\": \"{{organization_id}}\",\n    \"ownerId\": \"{{owner_id}}\",\n    \"entitlements\": {\n        \"createSubOrgs\": true,\n        \"createEnvironments\": true,\n        \"globalDeployment\": false,\n        \"vCoresProduction\": {\n            \"assigned\": 0.2\n        },\n        \"vCoresSandbox\": {\n            \"assigned\": 0.2\n        },\n        \"vCoresDesign\": {\n            \"assigned\": 0.1\n        },\n        \"staticIps\": {\n            \"assigned\": 1\n        },\n        \"vpcs\": {\n            \"assigned\": 0\n        },\n        \"loadBalancer\": {\n            \"assigned\": 0\n        },\n        \"vpns\": {\n            \"assigned\": 0\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Organisation",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example\",\n    \"parentOrganizationId\": \"{{new_organization_id}}\",\n    \"ownerId\": \"{{owner_id}}\",\n    \"entitlements\": {\n        \"createSubOrgs\": true,\n        \"createEnvironments\": true,\n        \"globalDeployment\": false,\n        \"vCoresProduction\": {\n            \"assigned\": 0.2\n        },\n        \"vCoresSandbox\": {\n            \"assigned\": 0.2\n        },\n        \"vCoresDesign\": {\n            \"assigned\": 0.1\n        },\n        \"staticIps\": {\n            \"assigned\": 1\n        },\n        \"vpcs\": {\n            \"assigned\": 0\n        },\n        \"loadBalancer\": {\n            \"assigned\": 0\n        },\n        \"vpns\": {\n            \"assigned\": 0\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Organization By Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/:orgid",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												":orgid"
											],
											"variable": [
												{
													"key": "orgid",
													"value": "{{organization_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Organization",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/:orgid",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												":orgid"
											],
											"variable": [
												{
													"key": "orgid",
													"value": "{{new_organization_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Get all users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/members?limit=25&offset=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"members"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all user invites",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/invites?limit=25&offset=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"invites"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get user by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/users/{{user_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"users",
												"{{user_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all rolegroups assigned to user",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/users/{{user_id}}/rolegroups?limit=25&offset=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"users",
												"{{user_id}}",
												"rolegroups"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invite users",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"email\":\"amir.khan@embrace-devops.com\",\r\n        \"role_groups\":\r\n        [\r\n            {\r\n                \"role_group_id\":\"e6263c45-738d-4e33-8286-f28b6d3e6f7c\",\r\n                \"name\":\"API Versions Owner\"\r\n            }\r\n        ]\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/invites",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"invites"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Rolegroups",
							"item": [
								{
									"name": "Roles",
									"item": [
										{
											"name": "Get all Roles",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anypoint_access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/accounts/api/roles",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"roles"
													],
													"query": [
														{
															"key": "name",
															"value": "Access Controls Viewer",
															"description": "The name of a role",
															"disabled": true
														},
														{
															"key": "description",
															"value": "",
															"description": "The description of a role",
															"disabled": true
														},
														{
															"key": "include_internal",
															"value": "true",
															"description": "Include internal roles",
															"disabled": true
														},
														{
															"key": "search",
															"value": "",
															"description": "A search string to use for partial matches of role names",
															"disabled": true
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Pagination parameter to start returning results from this position of matches",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Pagination parameter for how many results to return",
															"disabled": true
														},
														{
															"key": "ascending",
															"value": "true",
															"description": "Sort order for filtering",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get roles by rolegroup Id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/roles",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"rolegroups",
														"{{rolegroup_Id}}",
														"roles"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add a new role to rolegroup",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"context_params\":\r\n        {\r\n            \"org\":\"af696110-60f8-4a47-9367-e2464a468949\"\r\n        },\r\n        \"role_id\":\"821d84e6-ee22-4646-bf25-5461d49c9690\"\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/roles",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"rolegroups",
														"{{rolegroup_Id}}",
														"roles"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add a new permission and environment to rolegroup",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"f14b0d23-a267-4014-9563-29d46a26295b\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"67ff49cb-6774-49de-92aa-95e0dd525b3d\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"c4662f0f-31fc-4791-9493-97a6e7ea261a\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"2ee11112-51ca-47a8-b4ae-a6bb6e7e5573\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"be26fe60-0cc9-4b9a-bf20-5b12a6aa34e1\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"456f139c-39e2-48c4-80b5-5205cb6b8ae2\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"5a46e86c-7a28-424b-84a9-20021b1ec626\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"8856c1b1-37cf-4f12-a02d-f36ce1a96a93\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"1660b07a-8920-4091-8292-1f42f35e92e4\"\r\n   },\r\n   {\r\n      \"context_params\":{\r\n         \"org\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n         \"envId\":\"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n      },\r\n      \"role_id\":\"b979af78-664f-4ca2-8fd6-d8355fa09dc3\"\r\n   }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/roles",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"rolegroups",
														"{{rolegroup_Id}}",
														"roles"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete roles from rolegroup",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"context_params\": {\r\n            \"org\": \"af696110-60f8-4a47-9367-e2464a468949\",\r\n            \"envId\": \"67078084-8200-4956-a47b-7e97d5bb1835\"\r\n        },\r\n        \"created_at\": \"2021-04-21T10:05:18.319Z\",\r\n        \"role_group_assignment_id\": \"9fb4522a-c4c9-43b0-92c0-297b10c89912\",\r\n        \"role_group_id\": \"92c08b94-b156-4722-8f0a-5861e1230d45\",\r\n        \"role_id\": \"1660b07a-8920-4091-8292-1f42f35e92e4\",\r\n        \"org_id\": \"af696110-60f8-4a47-9367-e2464a468949\",\r\n        \"name\": \"View Contracts\",\r\n        \"description\": \"View all APIs contracts and tiers inside a specific environment\",\r\n        \"internal\": false\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/roles",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"rolegroups",
														"{{rolegroup_Id}}",
														"roles"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "User Assignment",
									"item": [
										{
											"name": "Assign rolegroup to a user",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"organizationId\":\"{{organization_id}}\",\r\n   \"userId\":\"{{user_id}}\",\r\n   \"roleGroupId\":\"{{rolegroup_Id}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/users/{{user_id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"rolegroups",
														"{{rolegroup_Id}}",
														"users",
														"{{user_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete user from rolegroup",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"organizationId\":\"{{organization_id}}\",\r\n   \"userId\":\"{{user_id}}\",\r\n   \"roleGroupId\":\"{{rolegroup_Id}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/users/{{user_id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"rolegroups",
														"{{rolegroup_Id}}",
														"users",
														"{{user_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get all rolegroups",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups?include_internal=false&limit=25&offset=0&search=",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"rolegroups"
											],
											"query": [
												{
													"key": "include_internal",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "search",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get rolegroup by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"rolegroups",
												"{{rolegroup_Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get users assigned to rolegroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups/{{rolegroup_Id}}/users?limit=25&offset=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"rolegroups",
												"{{rolegroup_Id}}",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a new rolegroup",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\":\"External Org Admin 2\",\r\n    \"description\":\"Description\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups?include_internal=false",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"rolegroups"
											],
											"query": [
												{
													"key": "include_internal",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a rolegroup",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\"{{rolegroup_Id}}\"]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/rolegroups?include_internal=false",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"rolegroups"
											],
											"query": [
												{
													"key": "include_internal",
													"value": "false"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Permissions",
							"item": [
								{
									"name": "Get all product permissions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/cs/organizations/{{organization_id}}/permissions/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"cs",
												"organizations",
												"{{organization_id}}",
												"permissions",
												"products"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Identity Provider",
							"item": [
								{
									"name": "Get users from provider",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/provider/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"provider",
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Audit Logs",
							"item": [
								{
									"name": "Get csv formatted audit logs",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "startDate",
													"value": "2021-04-20T12:24:36.971Z",
													"type": "text"
												},
												{
													"key": "endDate",
													"value": "2021-04-21T12:24:36.971Z",
													"type": "text"
												},
												{
													"key": "ascending",
													"value": "false",
													"type": "text"
												},
												{
													"key": "accessToken",
													"value": "{{token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/audit/v2/organizations/{{organization_id}}/query.csv",
											"host": [
												"{{url}}"
											],
											"path": [
												"audit",
												"v2",
												"organizations",
												"{{organization_id}}",
												"query.csv"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get audit logs by filter",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"startDate\":\"2021-04-20T12:05:21.714Z\",\r\n   \"endDate\":\"2021-04-21T12:05:21.714Z\",\r\n   \"platforms\":[\r\n      \r\n   ],\r\n   \"objectTypes\":[\r\n      \r\n   ],\r\n   \"environmentIds\":[\r\n      \r\n   ],\r\n   \"actions\":[\r\n      \r\n   ],\r\n   \"objectIds\":[\r\n      \r\n   ],\r\n   \"userIds\":[\r\n      \r\n   ],\r\n   \"ascending\":false,\r\n   \"organizationId\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n   \"offset\":0,\r\n   \"limit\":25\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/audit/v2/organizations/{{organization_id}}/query?include_internal=false",
											"host": [
												"{{url}}"
											],
											"path": [
												"audit",
												"v2",
												"organizations",
												"{{organization_id}}",
												"query"
											],
											"query": [
												{
													"key": "include_internal",
													"value": "false"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Connected Apps",
							"item": [
								{
									"name": "Owned Apps",
									"item": [
										{
											"name": "Get all connected apps",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/accounts/api/connectedApplications?limit=100&offset=0&includeUsage=true",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"connectedApplications"
													],
													"query": [
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														},
														{
															"key": "includeUsage",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Authorizations",
									"item": [
										{
											"name": "Get authorization for connected apps",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/accounts/api/cs/organizations/{{organization_id}}/connectedApplications/authorizations?limit=100&offset=0",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"cs",
														"organizations",
														"{{organization_id}}",
														"connectedApplications",
														"authorizations"
													],
													"query": [
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get settings for authorization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/connectedApplications/settings",
													"host": [
														"{{url}}"
													],
													"path": [
														"accounts",
														"api",
														"organizations",
														"{{organization_id}}",
														"connectedApplications",
														"settings"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "External Access",
							"item": [
								{
									"name": "Get all conditional assignments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/cs/conditionalAssignments?intent=role_assignment",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"cs",
												"conditionalAssignments"
											],
											"query": [
												{
													"key": "intent",
													"value": "role_assignment"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Team",
							"item": [
								{
									"name": "Get all Teams",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/teams",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"teams"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission for Team",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/teams/{{team_id}}/roles",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"teams",
												"{{team_id}}",
												"roles"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create New Team",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"parent_team_id\": \"{{parent_team_id}}\",\r\n  \"team_name\": \"{{new_team_name}}\",\r\n  \"team_type\": \"internal\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/teams",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"teams"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assign Permissions to Team",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"role_id\": \"{{exchange_viewer_role_id}}\",\r\n        \"context_params\": {\r\n            \"org\": \"{{organization_id}}\"\r\n        }\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/teams/{{child_team_id}}/roles",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"teams",
												"{{child_team_id}}",
												"roles"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get all information for organization",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/accounts/api/cs",
									"host": [
										"{{url}}"
									],
									"path": [
										"accounts",
										"api",
										"cs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API Manager",
					"item": [
						{
							"name": "API Administration",
							"item": [
								{
									"name": "Manage APIs",
									"item": [
										{
											"name": "Single API",
											"item": [
												{
													"name": "Get api details by Id",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get alerts for api",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/alerts?limit=10000",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}",
																"alerts"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "10000"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Get contracts for api",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/contracts",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}",
																"contracts"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get all policies",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/policies?fullInfo=false",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}",
																"policies"
															],
															"query": [
																{
																	"key": "fullInfo",
																	"value": "false"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Get all policy-templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/policy-templates?apiInstanceId={{api_Id}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"policy-templates"
															],
															"query": [
																{
																	"key": "apiInstanceId",
																	"value": "{{api_Id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Get all tiers",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/tiers",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}",
																"tiers"
															]
														}
													},
													"response": []
												},
												{
													"name": "Export api as ZIP",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/bundle?endpoint=true&slaTiers=true&cookie=file-download-1619013965103",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}",
																"bundle"
															],
															"query": [
																{
																	"key": "endpoint",
																	"value": "true"
																},
																{
																	"key": "slaTiers",
																	"value": "true"
																},
																{
																	"key": "cookie",
																	"value": "file-download-1619013965103"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "POST create an alerts for api",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "// This example is for Alert Type -Request Count\r\n{\r\n    \"apiAlertsVersion\": \"1.0.0\",\r\n    \"condition\": {\r\n        \"aggregate\": \"COUNT\",\r\n        \"operator\": \"GREATER_THAN\",\r\n        \"value\": 20,\r\n        \"resourceType\": \"api\"\r\n    },\r\n    \"enabled\": true, // or FALSE to keep it disabled\r\n    \"name\": \"api-request-count-alert\",\r\n    \"period\": {\r\n        \"repeat\": 5,\r\n        \"duration\": {\r\n            \"count\": 5,\r\n            \"weight\": \"MINUTES\"\r\n        }\r\n    },\r\n    \"recipients\": [\r\n        {\r\n            \"type\": \"user\",\r\n            \"value\": \"57e281b5-ec5b-4701-80a0-92a936a68da3\",\r\n            \"lastName\": \"Owner\",\r\n            \"firstName\": \"Organization\"\r\n        },//OR\r\n        {\r\n            \"type\": \"email\",\r\n            \"value\": \"mulesoft_c4e_admin@pqr.com\"\r\n        }\r\n    ],\r\n    \"severity\": \"CRITICAL\", // can be any INFO or WARNING\r\n    \"type\": \"api-request-count\" //this defines alert type\r\n}\r\n\r\n/* Below Example is for Alert Type - Response Time */\r\n/*\r\n\r\n{\r\n    \"apiAlertsVersion\": \"1.0.0\",\r\n    \"condition\": {\r\n        \"aggregate\": \"COUNT\",\r\n        \"operator\": \"GREATER_THAN\",\r\n        \"value\": 5,\r\n        \"resourceType\": \"api\",\r\n        \"filter\": [\r\n            {\r\n                \"property\": \"responseTime\",\r\n                \"operator\": \"GREATER_THAN\",\r\n                \"values\": 6000\r\n            }\r\n        ]\r\n    },\r\n    \"enabled\": true, // or FALSE to keep it disabled\r\n    \"name\": \"api-response-time-alert\",\r\n    \"period\": {\r\n        \"repeat\": 5,\r\n        \"duration\": {\r\n            \"count\": 5,\r\n            \"weight\": \"MINUTES\"\r\n        }\r\n    },\r\n    \"recipients\": [\r\n        {\r\n            \"type\": \"user\",\r\n            \"value\": \"57e281b5-ec5b-4701-80a0-92a936a68da3\",\r\n            \"lastName\": \"Owner\",\r\n            \"firstName\": \"Organization\"\r\n        },//OR\r\n        {\r\n            \"type\": \"email\",\r\n            \"value\": \"mulesoft_c4e_admin@pqr.com\"\r\n        }\r\n    ],\r\n    \"severity\": \"CRITICAL\", // can be any INFO or WARNING\r\n    \"type\": \"api-response-time\" //this defines alert type\r\n}\r\n*/\r\n\r\n/* Below Example is for Alert Type - - Response Code */\r\n/*\r\n{\r\n    \"apiAlertsVersion\": \"1.0.0\",\r\n    \"condition\": {\r\n        \"aggregate\": \"COUNT\",\r\n        \"operator\": \"GREATER_THAN\",\r\n        \"value\": 5,\r\n        \"resourceType\": \"api\",\r\n        \"filter\": [\r\n            {\r\n                \"property\": \"responseCode\",\r\n                \"operator\": \"IN\",\r\n                \"values\": [\r\n                    400\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"enabled\": true, // or FALSE to keep it disabled\r\n    \"name\": \"api-response-code-alert\",\r\n    \"period\": {\r\n        \"repeat\": 5,\r\n        \"duration\": {\r\n            \"count\": 5,\r\n            \"weight\": \"MINUTES\"\r\n        }\r\n    },\r\n    \"recipients\": [\r\n        {\r\n            \"type\": \"user\",\r\n            \"value\": \"57e281b5-ec5b-4701-80a0-92a936a68da3\",\r\n            \"lastName\": \"Owner\",\r\n            \"firstName\": \"Organization\"\r\n        },//OR\r\n        {\r\n            \"type\": \"email\",\r\n            \"value\": \"mulesoft_c4e_admin@xx.com\"\r\n        }\r\n    ],\r\n    \"severity\": \"CRITICAL\", // can be any INFO or WARNING\r\n    \"type\": \"api-response-code\"  //this defines alert type\r\n}\r\n*/\r\n/* Below Example is for Alert Type- Policy Violation */\r\n/*\r\n{\r\n    \"apiAlertsVersion\": \"1.0.0\",\r\n    \"condition\": {\r\n        \"aggregate\": \"COUNT\",\r\n        \"operator\": \"GREATER_THAN\",\r\n        \"value\": 5,\r\n        \"resourceType\": \"api\"\r\n    },\r\n    \"enabled\": true, // or FALSE to keep it disabled\r\n    \"name\": \"api-policy-violation-alert\",\r\n    \"period\": {\r\n        \"repeat\": 5,\r\n        \"duration\": {\r\n            \"count\": 5,\r\n            \"weight\": \"MINUTES\"\r\n        }\r\n    },\r\n    \"policyId\": 1271724,\r\n    \"policyTemplate\": {\r\n        \"id\": \"2998736\",\r\n        \"name\": \"JSON threat protection\"\r\n    },\r\n    \"recipients\": [\r\n        {\r\n            \"type\": \"user\",\r\n            \"value\": \"57e281b5-ec5b-4701-80a0-92a936a68da3\",\r\n            \"lastName\": \"Owner\",\r\n            \"firstName\": \"Organization\"\r\n        },//OR\r\n        {\r\n            \"type\": \"email\",\r\n            \"value\": \"mulesoft_c4e_admin@xx.com\"\r\n        }\r\n    ],\r\n    \"severity\": \"CRITICAL\", // can be any INFO or WARNING\r\n    \"type\": \"api-policy-violation\"  //this defines alert type\r\n}\r\n*/",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/alerts",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}",
																"alerts"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create API from Exchange",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"endpoint\":{\r\n      \"deploymentType\":\"CH\",\r\n      \"isCloudHub\":null,\r\n      \"muleVersion4OrAbove\":null,\r\n      \"proxyUri\":null,\r\n      \"referencesUserDomain\":null,\r\n      \"responseTimeout\":null,\r\n      \"type\":\"raml\",\r\n      \"uri\":null\r\n   },\r\n   \"providerId\":null,\r\n   \"instanceLabel\":null,\r\n   \"spec\":{\r\n      \"assetId\":\"hello-word\",\r\n      \"groupId\":\"af696110-60f8-4a47-9367-e2464a468949\",\r\n      \"version\":\"0.0.1\"\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis"
															]
														}
													},
													"response": []
												},
												{
													"name": "Deprecate api",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\"deprecated\":true}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Undeprecate api",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\"deprecated\":false}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete api",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"apimanager",
																"api",
																"v1",
																"organizations",
																"{{organization_id}}",
																"environments",
																"{{environment_id}}",
																"apis",
																"{{api_Id}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Get clients for environment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/environments/{{environment_id}}/clients",
													"host": [
														"{{url}}"
													],
													"path": [
														"apimanager",
														"xapi",
														"v1",
														"organizations",
														"{{organization_id}}",
														"environments",
														"{{environment_id}}",
														"clients"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get apis for an environment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis?ascending=false&limit=20&offset=0&sort=createdDate",
													"host": [
														"{{url}}"
													],
													"path": [
														"apimanager",
														"api",
														"v1",
														"organizations",
														"{{organization_id}}",
														"environments",
														"{{environment_id}}",
														"apis"
													],
													"query": [
														{
															"key": "ascending",
															"value": "false"
														},
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "0"
														},
														{
															"key": "sort",
															"value": "createdDate"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all permissions for an environment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/permissions?environmentId={{environment_id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"apimanager",
														"xapi",
														"v1",
														"organizations",
														"{{organization_id}}",
														"permissions"
													],
													"query": [
														{
															"key": "environmentId",
															"value": "{{environment_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Import api as zip",
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "shop-locator-v1-16802092.zip"
														}
													]
												},
												"url": {
													"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis",
													"host": [
														"{{url}}"
													],
													"path": [
														"apimanager",
														"api",
														"v1",
														"organizations",
														"{{organization_id}}",
														"environments",
														"{{environment_id}}",
														"apis"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get all active organizations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/xapi/v1/organizations/active",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"xapi",
												"v1",
												"organizations",
												"active"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all environment for an organization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);",
													"pm.environment.set(\"environment_id\", data.environments[0].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/environments",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"xapi",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "API Groups",
							"item": [
								{
									"name": "Get all api groups",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/groups",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get api group version",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/groups/{{apigroup_id}}/versions",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"groups",
												"{{apigroup_id}}",
												"versions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get api group instances",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/groupInstances",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"groupInstances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get permittedOrganizations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/groups/permittedOrganizations",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"xapi",
												"v1",
												"organizations",
												"{{organization_id}}",
												"groups",
												"permittedOrganizations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get environments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/environments",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"xapi",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create an api group",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"name\":\"myAPIseg\",\r\n   \"versions\":[\r\n      {\r\n         \"name\":\"v1\",\r\n         \"instances\":[\r\n            {\r\n               \"environmentId\":\"{{environment_id}}\",\r\n               \"groupInstanceLabel\":\"technet\",\r\n               \"apiInstances\":[\r\n                  {{api_Id}}\r\n               ]\r\n            }\r\n         ]\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/groups",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a new api group version",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"name\":\"v3\",\r\n   \"instances\":[\r\n      {\r\n         \"environmentId\":\"{{environment_id}}\",\r\n         \"groupInstanceLabel\":\"technet\",\r\n         \"apiInstances\":[\r\n            {{api_Id}}\r\n         ]\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/groups/{{apigroup_id}}/versions",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"groups",
												"{{apigroup_id}}",
												"versions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new api group instance",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"groupId\":{{apigroup_id}},\r\n   \"groupVersionId\":43866,\r\n   \"apiInstances\":[\r\n      {{api_Id}}\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/groupInstances",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"groupInstances"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Client Applications",
							"item": [
								{
									"name": "Get all applications",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apiplatform/repository/v2/organizations/{{organization_id}}/applications?ascending=true&filter=all&limit=10&literalMatch=true&offset=0&sort=name&targetAdminSite=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"apiplatform",
												"repository",
												"v2",
												"organizations",
												"{{organization_id}}",
												"applications"
											],
											"query": [
												{
													"key": "ascending",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "all"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "literalMatch",
													"value": "true"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "name"
												},
												{
													"key": "targetAdminSite",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Custom Policies",
							"item": [
								{
									"name": "Get all custom policy-templates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/custom-policy-templates?limit=20&offset=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"custom-policy-templates"
											],
											"query": [
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "OOTB Policy",
							"item": [
								{
									"name": "Get all ootb policy-templates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/custom-policy-templates?limit=20&offset=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"custom-policy-templates"
											],
											"query": [
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Apply Rate-Limiting Policy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"configurationData\":{\r\n      \"clusterizable\":true,\r\n      \"exposeHeaders\":true,\r\n       \"rateLimits\": [{\"timePeriodInMilliseconds\": 86400000, \"maximumRequests\": 1000}] \r\n     },\r\n   \"pointcutData\":null,\r\n   \"policyTemplateId\":\"rate-limiting\",\r\n   \"assetId\":\"rate-limiting\",\r\n   \"assetVersion\":\"1.3.5\",\r\n   \"groupId\":\"68ef9520-24e9-4cf2-b2f5-620025690913\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_Id}}/policies",
											"host": [
												"{{url}}"
											],
											"path": [
												"apimanager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"apis",
												"{{api_Id}}",
												"policies"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Runtime Manager",
					"item": [
						{
							"name": "Applications",
							"item": [
								{
									"name": "Notification",
									"item": [
										{
											"name": "Get notification count for unread",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/notifications/count?status=unread",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"notifications",
														"count"
													],
													"query": [
														{
															"key": "status",
															"value": "unread"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get notification count",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/notifications/count",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"notifications",
														"count"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get notifications",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/notifications",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"notifications"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Cloudhub",
									"item": [
										{
											"name": "Get system-information",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/system-info",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"system-info"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/organization",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"organization"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all regions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/regions",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"regions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get current user permissions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/core-services/users/current/permissions",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"core-services",
														"users",
														"current",
														"permissions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get single application info",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/applications/{{app_Id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications",
														"{{app_Id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all deployments for application",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/applications/{{app_Id}}/deployments",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications",
														"{{app_Id}}",
														"deployments"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get logs for application deployment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/applications/{{app_Id}}/deployments/{{deployment_Id}}/logs",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications",
														"{{app_Id}}",
														"deployments",
														"{{deployment_Id}}",
														"logs"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get systemlogs for application",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/applications/{{app_Id}}/instances/{{deployment_Id}}/logs",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications",
														"{{app_Id}}",
														"instances",
														"{{deployment_Id}}",
														"logs"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get dashboardstats for app",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/applications/{{app_Id}}/dashboardStats",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications",
														"{{app_Id}}",
														"dashboardStats"
													]
												}
											},
											"response": []
										},
										{
											"name": "List all Cloudhub APIs in an environment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://anypoint.mulesoft.com/cloudhub/api/v2/applications",
													"protocol": "https",
													"host": [
														"anypoint",
														"mulesoft",
														"com"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Cloudhub API in an environment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://anypoint.mulesoft.com/cloudhub/api/v2/applications/da-american-flights",
													"protocol": "https",
													"host": [
														"anypoint",
														"mulesoft",
														"com"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications",
														"da-american-flights"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Patch by PatchId",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/mule-versions/{{mule_version}}/updates/{{patchId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"mule-versions",
														"{{mule_version}}",
														"updates",
														"{{patchId}}"
													]
												}
											},
											"response": [
												{
													"name": "Get Patch by PatchId",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															},
															{
																"key": "X-ANYPNT-ORG-ID",
																"value": "{{organization_id}}",
																"type": "text"
															},
															{
																"key": "X-ANYPNT-ENV-ID",
																"value": "{{environment_id}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{url}}/cloudhub/api/mule-versions/{{muleVersion}}/updates/{{patchId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"cloudhub",
																"api",
																"mule-versions",
																"{{muleVersion}}",
																"updates",
																"{{patchId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Headers",
															"value": "Origin, Authorization, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, x-anypnt-env-id, x-anypnt-org-id"
														},
														{
															"key": "Access-Control-Allow-Methods",
															"value": "GET, POST, DELETE, PUT, OPTIONS, HEAD"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Date",
															"value": "Tue, 15 Feb 2022 18:00:48 GMT"
														},
														{
															"key": "Server",
															"value": "nginx"
														},
														{
															"key": "Strict-Transport-Security",
															"value": "max-age=31536000; includeSubDomains"
														},
														{
															"key": "X-ANYPNT-TRX-ID",
															"value": "16853b80-af6f-457d-aae7-b2ed89638b29"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "unlimited"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "unlimited"
														},
														{
															"key": "Content-Length",
															"value": "2817"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"61fdba9e5a08be2bfbaaa7a4\",\n    \"name\": \"02-08-2022\",\n    \"releaseDate\": 1644018334471,\n    \"releaseNotes\": \"https://docs.mulesoft.com/release-notes/cloudhub-runtimes-release-notes\",\n    \"flags\": {\n        \"performLog4jReplacement\": true,\n        \"skipMMCPairing\": true,\n        \"log4j1Used\": false,\n        \"usingMuleAgent\": false,\n        \"vpnSupported\": true,\n        \"monitoringSupported\": true,\n        \"objectStoreV1\": false,\n        \"loggingNgSupported\": true,\n        \"diagnosticsSupported\": true,\n        \"persistentQueuesSupported\": true,\n        \"asyncScheduleSupported\": false,\n        \"muleLivenessSupported\": false,\n        \"muleReadinessCheckSupported\": false,\n        \"ocsServiceSupported\": false,\n        \"injectLog4j2Supported\": false,\n        \"injectMuleLogsWhenFail\": false\n    },\n    \"muleDistributionName\": \"none\",\n    \"amiVersionData\": {\n        \"mule,version\": \"3.8.5\",\n        \"mule,distro,version\": \"3.8.5-20220128\",\n        \"httpcomponents,httpclient,version\": \"4.4.1\",\n        \"jackson,version\": \"1.9.11\",\n        \"project,build,sourceEncoding\": \"UTF-8\",\n        \"restassured,version\": \"1.6.2\",\n        \"mmc,common,artifact\": \"mmc-agent-api\",\n        \"slf4j,version\": \"1.6.2\",\n        \"junit,version\": \"4.12\",\n        \"log4j,version\": \"2.5\",\n        \"hawtjournal,version\": \"1.0-MULEPATCH\",\n        \"cloudhub-common,version\": \"58-SNAPSHOT\",\n        \"spring,version\": \"4.1.6.RELEASE\",\n        \"xalan,version\": \"2.7.1\",\n        \"mmc,version\": \"3.8.5\",\n        \"clm,serverId\": \"nexusiq-server\",\n        \"woodstox,version\": \"4.1.4\",\n        \"cobertura,totalLineRate\": \"65\",\n        \"commons,lang,version\": \"2.4\",\n        \"aws-java-sdk,version\": \"1.11.153\",\n        \"quartz,version\": \"2.2.1\",\n        \"xercesImpl,version\": \"2.11.0\",\n        \"cobertura,packageBranchRate\": \"65\",\n        \"maven,deploy,skip\": \"false\",\n        \"jersey,version\": \"2.11\",\n        \"geronimo-jta,version\": \"1.1.1\",\n        \"branchFullName\": \"3.8.5\",\n        \"guava,version\": \"18.0\",\n        \"cloudhub-appender,version\": \"61-SNAPSHOT\",\n        \"licensePath\": \"muleLicenseKey.lic\",\n        \"commons-io,version\": \"2.4\",\n        \"javax,ws,version\": \"2.0\",\n        \"commons,logging,version\": \"1.1.1\",\n        \"mmc,agent,artifact\": \"mmc-agent\",\n        \"branchType\": \"3.8.5\",\n        \"mmc,common,group\": \"com.mulesoft.muleesb.modules.agent\",\n        \"elasticsearch,version\": \"0.19.9\",\n        \"commons,lang3,version\": \"3.1\",\n        \"jasypt,version\": \"1.7\",\n        \"mmc,agent,group\": \"com.mulesoft.muleesb.modules.agent\",\n        \"patform,services,version\": \"44-SNAPSHOT\",\n        \"cobertura,totalBranchRate\": \"65\",\n        \"mule,distro,target,directory\": \"/var/lib/jenkins/workspace/hub_cloudhub-mule-services_3.8.5/mule-extensions/mule-distribution/target/mule-ee\",\n        \"gson,version\": \"2.2\",\n        \"cobertura,packageLineRate\": \"65\",\n        \"mule,agent,version\": \"1.7.1-mule-3.x\",\n        \"mule,distribution,name\": \"3.8.5\",\n        \"branchDetail\": \"N/A\",\n        \"httpcomponents,httpcore,version\": \"4.4.1\",\n        \"mockito,version\": \"1.10.19\",\n        \"objectstore,plugin,version\": \"3.8-1.5\",\n        \"mule,version,base\": \"3.8.5\",\n        \"cobertura,branchRate\": \"65\",\n        \"geronimo,version\": \"1.1\",\n        \"mule,version,suffix\": \"20220128\",\n        \"mule-licm,version\": \"1.1.5\",\n        \"clm,serverUrl\": \"http://nexus-iq-0:8070\",\n        \"mule,unpack,directory\": \"/var/lib/jenkins/workspace/hub_cloudhub-mule-services_3.8.5/mule-extensions/mule-distribution/target/mule-ee/mule-enterprise-standalone-3.8.5-20220128\",\n        \"clm,applicationId\": \"mule-distribution\",\n        \"cobertura,lineRate\": \"65\"\n    }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Deploy Application",
									"item": [
										{
											"name": "Get mule-version",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/mule-versions",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"mule-versions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get target deployment types",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/armui/api/v1/targets",
													"host": [
														"{{url}}"
													],
													"path": [
														"armui",
														"api",
														"v1",
														"targets"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get deployment groups",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/environment/deploymentgroups",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"environment",
														"deploymentgroups"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get domains",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/cloudhub/api/applications/domains",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"applications",
														"domains"
													]
												}
											},
											"response": []
										},
										{
											"name": "Deploy application",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"applicationInfo\":{\r\n      \"fileName\":\"HTTP Request Response with Logger\",\r\n      \"muleVersion\":{\r\n         \"version\":\"4.3.0\",\r\n         \"updateId\":\"606cc71944b5ff1b07f791e3\"\r\n      },\r\n      \"properties\":{\r\n         \"anypoint.platform.config.analytics.agent.enabled\":\"false\"\r\n      },\r\n      \"logLevels\":[\r\n         \r\n      ],\r\n      \"trackingSettings\":{\r\n         \"trackingLevel\":\"DISABLED\"\r\n      },\r\n      \"deploymentGroup\":null,\r\n      \"monitoringEnabled\":true,\r\n      \"monitoringAutoRestart\":true,\r\n      \"persistentQueues\":false,\r\n      \"persistentQueuesEncrypted\":false,\r\n      \"workers\":{\r\n         \"amount\":1,\r\n         \"type\":{\r\n            \"name\":\"Micro\",\r\n            \"weight\":0.1,\r\n            \"cpu\":\"0.1 vCores\",\r\n            \"memory\":\"500 MB memory\"\r\n         }\r\n      },\r\n      \"objectStoreV1\":false,\r\n      \"loggingNgEnabled\":true,\r\n      \"loggingCustomLog4JEnabled\":false,\r\n      \"staticIPsEnabled\":false,\r\n      \"domain\":\"postman-api\"\r\n   },\r\n   \"applicationSource\":{\r\n      \"source\":\"EXCHANGE\",\r\n      \"groupId\":\"org.mule.examples\",\r\n      \"artifactId\":\"http-request-response-with-logger\",\r\n      \"version\":\"2.1.4\",\r\n      \"organizationId\":\"68ef9520-24e9-4cf2-b2f5-620025690913\"\r\n   },\r\n   \"autoStart\":true\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/cloudhub/api/v2/applications",
													"host": [
														"{{url}}"
													],
													"path": [
														"cloudhub",
														"api",
														"v2",
														"applications"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Hybrid",
									"item": [
										{
											"name": "Get All Applications - hybrid mode",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{url}}/hybrid/api/v1/applications",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"applications"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Single Application info - hybrid mode",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{url}}/hybrid/api/v1/applications{{hyb_app_id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"applications{{hyb_app_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get buildinfo for environments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/cloudhub/api/buildinfo/environment",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"buildinfo",
												"environment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get environments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/environments",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"environments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get permissions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/armui/api/v1/permissions",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"permissions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get entitlement",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/accounts/api/organizations/{{organization_id}}/entitlements",
											"host": [
												"{{url}}"
											],
											"path": [
												"accounts",
												"api",
												"organizations",
												"{{organization_id}}",
												"entitlements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get applications",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/armui/api/v1/applications",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"applications"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Servers",
							"item": [
								{
									"name": "Servergroups",
									"item": [
										{
											"name": "Get servergroups",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/hybrid/api/v1/serverGroups",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"serverGroups"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create servergroup",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"name\":\"test2\",\r\n   \"serverIds\":[\r\n      \r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/hybrid/api/v1/serverGroups",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"serverGroups"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete servergroup",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"name\":\"test2\",\r\n   \"serverIds\":[\r\n      \r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/hybrid/api/v1/serverGroups/{{servergroup_Id}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"serverGroups",
														"{{servergroup_Id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Clusters",
									"item": [
										{
											"name": "Get clusters",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/hybrid/api/v1/clusters",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"clusters"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get clusters Copy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"name\":\"cluster-test\",\r\n   \"multicastEnabled\":false,\r\n   \"servers\":[\r\n      \r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/hybrid/api/v1/clusters",
													"host": [
														"{{url}}"
													],
													"path": [
														"hybrid",
														"api",
														"v1",
														"clusters"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get all servers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/armui/api/v1/servers",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"servers"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Alerts",
							"item": [
								{
									"name": "Update alert by id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"description": "(Required) Identifier of the environment where the api user is currently working."
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"description": "(Required) Identifier of the sub org where the api user is currently working."
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Low CPU usage\",\n    \"severity\": \"WARNING\",\n    \"actions\": [\n        {\n            \"type\": \"email\",\n            \"content\": \"Hello,\\nYou are receiving this alert because:\\nThe application ${resource} is now in an ${state} state, based on the condition 'CPU ${operator} ${value}%.\",\n            \"subject\": \"${severity}: CPU usage ${state}\",\n            \"emails\": [\n                \"angel.alberici+testalerts@mulesoft.com\",\n                \"angel.alberici@mulesoft.com\"\n            ]\n        }\n    ],\n    \"condition\": {\n        \"operator\": \"LESS_THAN\",\n        \"value\": 50,\n        \"periodCount\": 1,\n        \"resourceType\": \"cloudhub-application\",\n        \"type\": \"cpu\",\n        \"periodMins\": 1,\n        \"resources\": [\n            \"*\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://anypoint.mulesoft.com/armui/api/v1/alerts/cloudhub/02213013-10f2-4bbb-b399-718c0a543e18",
											"protocol": "https",
											"host": [
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"alerts",
												"cloudhub",
												"02213013-10f2-4bbb-b399-718c0a543e18"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "pariatur magna in id esse",
														"description": "(Required) Identifier of the environment where the api user is currently working."
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "pariatur magna in id esse",
														"description": "(Required) Identifier of the sub org where the api user is currently working."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/alerts/:alertId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"alerts",
														":alertId"
													],
													"variable": [
														{
															"key": "alertId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 2312,\n \"timeCreated\": 342423432142342,\n \"timeUpdated\": 342423432154342,\n \"severity\": \"CRITICAL\",\n \"description\": \"Notify when one server of cluster 45 went down\",\n \"enabled\": true,\n \"action\": {\n  \"notification\": {\n   \"recipients\": [\n    \"alex.tiavo\",\n    \"greg.kio\"\n   ]\n  }\n },\n \"condition\": {\n  \"resourceType\": \"CLUSTER\",\n  \"resources\": [\n   45\n  ],\n  \"event\": \"DISCONNECTED\"\n }\n}"
										}
									]
								},
								{
									"name": "Get all alerts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/armui/api/v1/alerts",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"alerts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create an alert",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Platform API Postman Test 001\",\r\n    \"severity\": \"INFO\",\r\n    \"actions\": [\r\n        {\r\n            \"type\": \"email\",\r\n            \"content\": \"Hello,\\nYou are receiving this alert because:\\nThe application ${resource} is now in an ${state} state, based on the condition 'memory ${operator} ${value}%'.\",\r\n            \"subject\": \"${severity}: memory usage ${state}\",\r\n            \"userIds\": [\r\n                \"2909a63d-c57a-47b0-90f1-7ddfb815efba\"\r\n            ]\r\n        }\r\n    ],\r\n    \"condition\": {\r\n        \"operator\": \"GREATER_THAN\",\r\n        \"periodCount\": 20,\r\n        \"value\": 80,\r\n        \"resourceType\": \"cloudhub-application\",\r\n        \"type\": \"memory\",\r\n        \"periodMins\": 1,\r\n        \"resources\": [\r\n            \"*\"\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/armui/api/v1/alerts/cloudhub",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"alerts",
												"cloudhub"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get alert by id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"description": "(Required) Identifier of the environment where the api user is currently working."
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"description": "(Required) Identifier of the sub org where the api user is currently working."
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/armui/api/v1/alerts/cloudhub/{{alert_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"alerts",
												"cloudhub",
												"{{alert_id}}"
											]
										},
										"description": "Get the alert\nwith id =\n{alertId}\n"
									},
									"response": []
								},
								{
									"name": "Get alert history by id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"description": "(Required) Identifier of the environment where the api user is currently working."
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"description": "(Required) Identifier of the sub org where the api user is currently working."
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/armui/api/v1/alerts/cloudhub/{{alert_id}}/history",
											"host": [
												"{{url}}"
											],
											"path": [
												"armui",
												"api",
												"v1",
												"alerts",
												"cloudhub",
												"{{alert_id}}",
												"history"
											]
										},
										"description": "Returns a list of the alert history for this particular alert id"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "pariatur magna in id esse",
														"description": "(Required) Identifier of the environment where the api user is currently working."
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "pariatur magna in id esse",
														"description": "(Required) Identifier of the sub org where the api user is currently working."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/alerts/:alertId/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"alerts",
														":alertId",
														"history"
													],
													"variable": [
														{
															"key": "alertId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Not Found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "pariatur magna in id esse",
														"description": "(Required) Identifier of the environment where the api user is currently working."
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "pariatur magna in id esse",
														"description": "(Required) Identifier of the sub org where the api user is currently working."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/alerts/:alertId/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"alerts",
														":alertId",
														"history"
													],
													"variable": [
														{
															"key": "alertId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "VPC",
							"item": [
								{
									"name": "Create a  VPC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myTestVPC\",\n  \"region\": \"us-east-1\",\n  \"cidrBlock\": \"192.168.1.0/24\",\n  \"internalDns\": {\n    \"dnsServers\": [\"8.8.8.8\",\"8.8.8.4\"],\n    \"specialDomains\": []\n  },\n  \"isDefault\": false,\n  \"associatedEnvironments\": [],\n  \"sharedWith\": [],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"0.0.0.0/0\",\n      \"protocol\": \"tcp\",\n      \"fromPort\": 8081,\n      \"toPort\": 8082\n    },\n    {\n      \"cidrBlock\": \"192.168.1.0/24\",\n      \"protocol\": \"tcp\",\n      \"fromPort\": 8091,\n      \"toPort\": 8092\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All VPCs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET a VPC by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpcId",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpcId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpcId",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update VPC by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myTestVPC\",\n  \"region\": \"us-east-1\",\n  \"cidrBlock\": \"192.168.1.0/24\",\n  \"internalDns\": {\n    \"dnsServers\": [],\n    \"specialDomains\": []\n  },\n  \"isDefault\": false,\n  \"associatedEnvironments\": [],\n  \"sharedWith\": [],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"0.0.0.0/0\",\n      \"protocol\": \"tcp\",\n      \"fromPort\": 8081,\n      \"toPort\": 8082\n    },\n    {\n      \"cidrBlock\": \"192.168.1.0/24\",\n      \"protocol\": \"tcp\",\n      \"fromPort\": 8091,\n      \"toPort\": 8092\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpcId",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpcId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpcId",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete VPC by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpcId",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpcId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpcId",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "VPN",
							"item": [
								{
									"name": "Get VPN Status",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/{{organization_id}}/vpcs/{{vpc_id}}/ipsec/{{vpn_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												"{{organization_id}}",
												"vpcs",
												"{{vpc_id}}",
												"ipsec",
												"{{vpn_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Load Balancers",
							"item": [
								{
									"name": "Get all load balancers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/{{organization_id}}/loadbalancers",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												"{{organization_id}}",
												"loadbalancers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get DLBs of a VPC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpc/loadbalancers",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpc",
												"loadbalancers"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpc",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a DLB withing a VPC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myloadbalancer\",\n  \"ipWhitelist\": [],\n  \"httpMode\": \"redirect\",\n  \"defaultSslEndpoint\": 0,\n  \"tlsv1\": false,\n  \"sslEndpoints\": [{\n    \"publicKey\": \"-----BEGIN CERTIFICATE-----YOUR PUBLIC KEY-----END CERTIFICATE-----\",\n    \"privateKey\": \"-----BEGIN PRIVATE KEY-----YOUR PRIVATE KEY-----END PRIVATE KEY-----\",\n    \"verifyClientMode\": \"off\",\n    \"mappings\": [{\n      \"inputUri\": \"{app}/\",\n      \"appName\": \"{app}\",\n      \"appUri\": \"/\"\n    }]\n }]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpc/loadbalancers",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpc",
												"loadbalancers"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpc",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update DLB",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/state\",\n        \"value\": \"STARTED\"\n    }, {\n        \"op\": \"replace\",\n        \"path\": \"/sslEndpoints/0\",\n        \"value\": {\n            \"publicKey\": \"-----BEGIN CERTIFICATE-----YOUR PUBLIC KEY-----END CERTIFICATE-----\",\n            \"privateKey\": \"-----BEGIN PRIVATE KEY-----YOUR PRIVATE KEY-----END PRIVATE KEY-----\",\n            \"verifyClientMode\": \"off\",\n            \"mappings\": [\n                {\n                    \"inputUri\": \"{app}/\",\n                    \"appName\": \"{app}\",\n                    \"appUri\": \"/\"\n                }\n            ]\n        }\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpc/loadbalancers/:dlbid",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpc",
												"loadbalancers",
												":dlbid"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpc",
													"value": "xxxxxx"
												},
												{
													"key": "dlbid",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete DLB",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anypoint_access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/cloudhub/api/organizations/:orgId/vpcs/:vpc/loadbalancers/:lbdid",
											"host": [
												"{{url}}"
											],
											"path": [
												"cloudhub",
												"api",
												"organizations",
												":orgId",
												"vpcs",
												":vpc",
												"loadbalancers",
												":lbdid"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "{{organization_id}}"
												},
												{
													"key": "vpc",
													"value": "xxxxxx"
												},
												{
													"key": "lbdid",
													"value": "xxxxxx"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Object Store v2",
							"item": [
								{
									"name": "Get OSV2 Stores",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osv2_url}}/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/stores",
											"host": [
												"{{osv2_url}}"
											],
											"path": [
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"stores"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get OSV2 Stores Stats",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osv2_stats_url}}/api/v1/organizations/{{organization_id}}?startDate={{start_date}}&endDate={{end_date}}&period={{period}}",
											"host": [
												"{{osv2_stats_url}}"
											],
											"path": [
												"api",
												"v1",
												"organizations",
												"{{organization_id}}"
											],
											"query": [
												{
													"key": "startDate",
													"value": "{{start_date}}"
												},
												{
													"key": "endDate",
													"value": "{{end_date}}"
												},
												{
													"key": "period",
													"value": "{{period}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Private Spaces (Cloudhub 2.0)",
							"item": [
								{
									"name": "Transit Gateways within Private Spaces",
									"item": [
										{
											"name": "List TGW connections assocated with Private Space",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "get list of TGW connections assocated with a private space."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"spec\": {\n      \"resourceShare\": {\n        \"id\": \"<string>\",\n        \"account\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"spaceName\": \"<string>\"\n    },\n    \"status\": {\n      \"gateway\": \"<string>\",\n      \"attachment\": \"<string>\",\n      \"tgwResource\": \"<string>\",\n      \"routes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"spec\": {\n      \"resourceShare\": {\n        \"id\": \"<string>\",\n        \"account\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"spaceName\": \"<string>\"\n    },\n    \"status\": {\n      \"gateway\": \"<string>\",\n      \"attachment\": \"<string>\",\n      \"tgwResource\": \"<string>\",\n      \"routes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n]"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Retry-After",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create Private Space TGW connection",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"resourceShareId\": \"<string>\",\n  \"resourceShareAccount\": \"<string>\",\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "create a private space TGW connection."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"resourceShareId\": \"<string>\",\n  \"resourceShareAccount\": \"<string>\",\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "URL where the new transitgateway can be found",
																"type": "text/plain"
															}
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"spec\": {\n    \"resourceShare\": {\n      \"id\": \"<string>\",\n      \"account\": \"<string>\"\n    },\n    \"region\": \"<string>\",\n    \"spaceName\": \"<string>\"\n  },\n  \"status\": {\n    \"gateway\": \"<string>\",\n    \"attachment\": \"<string>\",\n    \"tgwResource\": \"<string>\",\n    \"routes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
												},
												{
													"name": "Bad Request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"resourceShareId\": \"<string>\",\n  \"resourceShareAccount\": \"<string>\",\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"resourceShareId\": \"<string>\",\n  \"resourceShareAccount\": \"<string>\",\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"resourceShareId\": \"<string>\",\n  \"resourceShareAccount\": \"<string>\",\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"resourceShareId\": \"<string>\",\n  \"resourceShareAccount\": \"<string>\",\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Retry-After",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get TGW routes configured in Private Space",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/routes",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways",
														"routes"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "get TGW routes configured to private space."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/routes",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"routes"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Detach a Transit Gateway from the Private Space",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways",
														"{{transit_gateway_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "tgwId",
															"value": "<string>"
														}
													]
												},
												"description": "Detach a Transit Gateway from the Private Space"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Patch the Private Space TGW Connection",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways",
														"{{transit_gateway_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "tgwId",
															"value": "<string>"
														}
													]
												},
												"description": "patch the Private Space TGW Connection"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"spec\": {\n    \"resourceShare\": {\n      \"id\": \"<string>\",\n      \"account\": \"<string>\"\n    },\n    \"region\": \"<string>\",\n    \"spaceName\": \"<string>\"\n  },\n  \"status\": {\n    \"gateway\": \"<string>\",\n    \"attachment\": \"<string>\",\n    \"tgwResource\": \"<string>\",\n    \"routes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"x-amf-examples\": {\n    \"response\": {\n      \"name\": \"rtf-kamboocha\",\n      \"spec\": {\n        \"resourceShare\": {\n          \"account\": \"25102306\"\n        },\n        \"region\": \"us-east-1\",\n        \"networkIds\": [\n          \"network-deployment-id1\"\n        ],\n        \"spaceName\": \"space\"\n      },\n      \"status\": {\n        \"gateway\": \"unknown\",\n        \"attachment\": \"unattached\",\n        \"tgwResource\": \"http://aws.tgw.link.com\",\n        \"routes\": [\n          \"10.0.0.0/21\",\n          \"10.0.0.0/22\"\n        ]\n      }\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Get Transit Gateway by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways",
														"{{transit_gateway_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "tgwId",
															"value": "<string>"
														}
													]
												},
												"description": "Get the transitgateway\nwith id =\n{transitgatewayId}\n"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"x-amf-examples\": {\n    \"response\": {\n      \"name\": \"rtf-kamboocha\",\n      \"spec\": {\n        \"resourceShare\": {\n          \"account\": \"25102306\"\n        },\n        \"region\": \"us-east-1\",\n        \"networkIds\": [\n          \"network-deployment-id1\"\n        ],\n        \"spaceName\": \"space\"\n      },\n      \"status\": {\n        \"gateway\": \"unknown\",\n        \"attachment\": \"unattached\",\n        \"tgwResource\": \"http://aws.tgw.link.com\",\n        \"routes\": [\n          \"10.0.0.0/21\",\n          \"10.0.0.0/22\"\n        ]\n      }\n    }\n  }\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Patch routes for a TGW connection",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}/routes",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways",
														"{{transit_gateway_id}}",
														"routes"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "tgwId",
															"value": "<string>"
														}
													]
												},
												"description": "patch routes for a TGW connection."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}/routes",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}",
																"routes"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get TGW Routes configured to TGW Connection",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}/routes",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"transitgateways",
														"{{transit_gateway_id}}",
														"routes"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "tgwId",
															"value": "<string>"
														}
													]
												},
												"description": "get TGW routes configured to tgw connection."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/transitgateways/{{transit_gateway_id}}/routes",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"transitgateways",
																"{{transit_gateway_id}}",
																"routes"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "TLS Contexts",
									"item": [
										{
											"name": "List TLS contexts inside Private Space",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"tlsContexts"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "get the list of TLS contexts inside the private space."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"keyStore\": {\n      \"type\": \"<string>\",\n      \"cn\": \"<string>\",\n      \"san\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"fileName\": \"<string>\",\n      \"alias\": \"<string>\",\n      \"keyFileName\": \"<string>\",\n      \"capathFileName\": \"<string>\",\n      \"expirationDate\": \"<string>\"\n    },\n    \"ciphers\": {\n      \"aes128GcmSha256\": false,\n      \"aes128Sha256\": false,\n      \"aes256GcmSha384\": false,\n      \"aes256Sha256\": false,\n      \"dheRsaAes128Sha256\": false,\n      \"dheRsaAes256GcmSha384\": false,\n      \"dheRsaAes256Sha256\": false,\n      \"ecdheEcdsaAes128GcmSha256\": true,\n      \"ecdheEcdsaAes128Sha1\": false,\n      \"ecdheEcdsaAes256GcmSha384\": true,\n      \"ecdheEcdsaAes256Sha1\": false,\n      \"ecdheRsaAes128GcmSha256\": true,\n      \"ecdheRsaAes128Sha1\": false,\n      \"ecdheRsaAes256GcmSha384\": true,\n      \"ecdheRsaAes256Sha1\": false,\n      \"ecdheEcdsaChacha20Poly1305\": false,\n      \"ecdheRsaChacha20Poly1305\": false,\n      \"dheRsaChacha20Poly1305\": false,\n      \"tlsAes256GcmSha384\": true,\n      \"tlsChacha20Poly1305Sha256\": true,\n      \"tlsAes128GcmSha256\": true\n    },\n    \"trustStore\": {\n      \"type\": \"<string>\",\n      \"dnList\": [\n        {\n          \"issuer\": {\n            \"commonName\": \"<string>\",\n            \"countryName\": \"<string>\",\n            \"localityName\": \"<string>\",\n            \"organizationName\": \"<string>\",\n            \"organizationUnit\": \"<string>\",\n            \"state\": \"<string>\"\n          },\n          \"subject\": {\n            \"commonName\": \"<string>\",\n            \"countryName\": \"<string>\",\n            \"localityName\": \"<string>\",\n            \"organizationName\": \"<string>\",\n            \"organizationUnit\": \"<string>\",\n            \"state\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"serialNumber\": \"<string>\",\n          \"signatureAlgorithm\": \"<string>\",\n          \"publicKeyAlgorithm\": \"<string>\",\n          \"validity\": {\n            \"notBefore\": \"<string>\",\n            \"notAfter\": \"<string>\"\n          },\n          \"certificateType\": \"<string>\",\n          \"subjectAlternativeName\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"basicConstraints\": {\n            \"certificateAuthority\": \"<boolean>\"\n          },\n          \"keyUsage\": [\n            \"Key CertSign\"\n          ],\n          \"extendedKeyUsage\": [\n            \"OCSPstamping\"\n          ]\n        }\n      ],\n      \"fileName\": \"<string>\",\n      \"expirationDate\": \"<string>\"\n    },\n    \"type\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"keyStore\": {\n      \"type\": \"<string>\",\n      \"cn\": \"<string>\",\n      \"san\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"fileName\": \"<string>\",\n      \"alias\": \"<string>\",\n      \"keyFileName\": \"<string>\",\n      \"capathFileName\": \"<string>\",\n      \"expirationDate\": \"<string>\"\n    },\n    \"ciphers\": {\n      \"aes128GcmSha256\": false,\n      \"aes128Sha256\": false,\n      \"aes256GcmSha384\": false,\n      \"aes256Sha256\": false,\n      \"dheRsaAes128Sha256\": false,\n      \"dheRsaAes256GcmSha384\": false,\n      \"dheRsaAes256Sha256\": false,\n      \"ecdheEcdsaAes128GcmSha256\": true,\n      \"ecdheEcdsaAes128Sha1\": false,\n      \"ecdheEcdsaAes256GcmSha384\": true,\n      \"ecdheEcdsaAes256Sha1\": false,\n      \"ecdheRsaAes128GcmSha256\": true,\n      \"ecdheRsaAes128Sha1\": false,\n      \"ecdheRsaAes256GcmSha384\": true,\n      \"ecdheRsaAes256Sha1\": false,\n      \"ecdheEcdsaChacha20Poly1305\": false,\n      \"ecdheRsaChacha20Poly1305\": false,\n      \"dheRsaChacha20Poly1305\": false,\n      \"tlsAes256GcmSha384\": true,\n      \"tlsChacha20Poly1305Sha256\": true,\n      \"tlsAes128GcmSha256\": true\n    },\n    \"trustStore\": {\n      \"type\": \"<string>\",\n      \"dnList\": [\n        {\n          \"issuer\": {\n            \"commonName\": \"<string>\",\n            \"countryName\": \"<string>\",\n            \"localityName\": \"<string>\",\n            \"organizationName\": \"<string>\",\n            \"organizationUnit\": \"<string>\",\n            \"state\": \"<string>\"\n          },\n          \"subject\": {\n            \"commonName\": \"<string>\",\n            \"countryName\": \"<string>\",\n            \"localityName\": \"<string>\",\n            \"organizationName\": \"<string>\",\n            \"organizationUnit\": \"<string>\",\n            \"state\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"serialNumber\": \"<string>\",\n          \"signatureAlgorithm\": \"<string>\",\n          \"publicKeyAlgorithm\": \"<string>\",\n          \"validity\": {\n            \"notBefore\": \"<string>\",\n            \"notAfter\": \"<string>\"\n          },\n          \"certificateType\": \"<string>\",\n          \"subjectAlternativeName\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"basicConstraints\": {\n            \"certificateAuthority\": \"<boolean>\"\n          },\n          \"keyUsage\": [\n            \"Key Encipherment\"\n          ],\n          \"extendedKeyUsage\": [\n            \"IP security tunnel termination\"\n          ]\n        }\n      ],\n      \"fileName\": \"<string>\",\n      \"expirationDate\": \"<string>\"\n    },\n    \"type\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Retry-After",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create a TLS context",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"x-amf-examples\": {\n    \"create-request-pem\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"PEM\",\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\nreplace with encrypted data\\n-----END CERTIFICATE-----\",\n          \"key\": \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\nreplace with encrypted data\\n-----END ENCRYPTED PRIVATE KEY-----\",\n          \"keyPassphrase\": \"password123\",\n          \"keyFileName\": \"test.pem\",\n          \"certificateFileName\": \"certificateF.pem\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    },\n    \"create-request-jks\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"JKS\",\n          \"keystoreBase64\": \"replace with base64 encoded keystore\",\n          \"keyPassphrase\": \"password123\",\n          \"storePassphrase\": \"password123\",\n          \"alias\": \"special\",\n          \"keystoreFileName\": \"special.jks\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    }\n  },\n  \"x-amf-union\": [\n    {},\n    {}\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"tlsContexts"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "create a TLS context"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x-amf-examples\": {\n    \"create-request-pem\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"PEM\",\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\nreplace with encrypted data\\n-----END CERTIFICATE-----\",\n          \"key\": \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\nreplace with encrypted data\\n-----END ENCRYPTED PRIVATE KEY-----\",\n          \"keyPassphrase\": \"password123\",\n          \"keyFileName\": \"test.pem\",\n          \"certificateFileName\": \"certificateF.pem\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    },\n    \"create-request-jks\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"JKS\",\n          \"keystoreBase64\": \"replace with base64 encoded keystore\",\n          \"keyPassphrase\": \"password123\",\n          \"storePassphrase\": \"password123\",\n          \"alias\": \"special\",\n          \"keystoreFileName\": \"special.jks\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    }\n  },\n  \"x-amf-union\": [\n    {},\n    {}\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "URL where the new tlsContext can be found",
																"type": "text/plain"
															}
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"keyStore\": {\n    \"type\": \"<string>\",\n    \"cn\": \"<string>\",\n    \"san\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"fileName\": \"<string>\",\n    \"alias\": \"<string>\",\n    \"keyFileName\": \"<string>\",\n    \"capathFileName\": \"<string>\",\n    \"expirationDate\": \"<string>\"\n  },\n  \"ciphers\": {\n    \"aes128GcmSha256\": false,\n    \"aes128Sha256\": false,\n    \"aes256GcmSha384\": false,\n    \"aes256Sha256\": false,\n    \"dheRsaAes128Sha256\": false,\n    \"dheRsaAes256GcmSha384\": false,\n    \"dheRsaAes256Sha256\": false,\n    \"ecdheEcdsaAes128GcmSha256\": true,\n    \"ecdheEcdsaAes128Sha1\": false,\n    \"ecdheEcdsaAes256GcmSha384\": true,\n    \"ecdheEcdsaAes256Sha1\": false,\n    \"ecdheRsaAes128GcmSha256\": true,\n    \"ecdheRsaAes128Sha1\": false,\n    \"ecdheRsaAes256GcmSha384\": true,\n    \"ecdheRsaAes256Sha1\": false,\n    \"ecdheEcdsaChacha20Poly1305\": false,\n    \"ecdheRsaChacha20Poly1305\": false,\n    \"dheRsaChacha20Poly1305\": false,\n    \"tlsAes256GcmSha384\": true,\n    \"tlsChacha20Poly1305Sha256\": true,\n    \"tlsAes128GcmSha256\": true\n  },\n  \"trustStore\": {\n    \"type\": \"<string>\",\n    \"dnList\": [\n      {\n        \"issuer\": {\n          \"commonName\": \"<string>\",\n          \"countryName\": \"<string>\",\n          \"localityName\": \"<string>\",\n          \"organizationName\": \"<string>\",\n          \"organizationUnit\": \"<string>\",\n          \"state\": \"<string>\"\n        },\n        \"subject\": {\n          \"commonName\": \"<string>\",\n          \"countryName\": \"<string>\",\n          \"localityName\": \"<string>\",\n          \"organizationName\": \"<string>\",\n          \"organizationUnit\": \"<string>\",\n          \"state\": \"<string>\"\n        },\n        \"version\": \"<string>\",\n        \"serialNumber\": \"<string>\",\n        \"signatureAlgorithm\": \"<string>\",\n        \"publicKeyAlgorithm\": \"<string>\",\n        \"validity\": {\n          \"notBefore\": \"<string>\",\n          \"notAfter\": \"<string>\"\n        },\n        \"certificateType\": \"<string>\",\n        \"subjectAlternativeName\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"basicConstraints\": {\n          \"certificateAuthority\": \"<boolean>\"\n        },\n        \"keyUsage\": [\n          \"CRL Sign\"\n        ],\n        \"extendedKeyUsage\": [\n          \"IP security end system\"\n        ]\n      }\n    ],\n    \"fileName\": \"<string>\",\n    \"expirationDate\": \"<string>\"\n  },\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x-amf-examples\": {\n    \"create-request-pem\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"PEM\",\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\nreplace with encrypted data\\n-----END CERTIFICATE-----\",\n          \"key\": \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\nreplace with encrypted data\\n-----END ENCRYPTED PRIVATE KEY-----\",\n          \"keyPassphrase\": \"password123\",\n          \"keyFileName\": \"test.pem\",\n          \"certificateFileName\": \"certificateF.pem\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    },\n    \"create-request-jks\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"JKS\",\n          \"keystoreBase64\": \"replace with base64 encoded keystore\",\n          \"keyPassphrase\": \"password123\",\n          \"storePassphrase\": \"password123\",\n          \"alias\": \"special\",\n          \"keystoreFileName\": \"special.jks\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    }\n  },\n  \"x-amf-union\": [\n    {},\n    {}\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x-amf-examples\": {\n    \"create-request-pem\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"PEM\",\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\nreplace with encrypted data\\n-----END CERTIFICATE-----\",\n          \"key\": \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\nreplace with encrypted data\\n-----END ENCRYPTED PRIVATE KEY-----\",\n          \"keyPassphrase\": \"password123\",\n          \"keyFileName\": \"test.pem\",\n          \"certificateFileName\": \"certificateF.pem\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    },\n    \"create-request-jks\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"JKS\",\n          \"keystoreBase64\": \"replace with base64 encoded keystore\",\n          \"keyPassphrase\": \"password123\",\n          \"storePassphrase\": \"password123\",\n          \"alias\": \"special\",\n          \"keystoreFileName\": \"special.jks\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    }\n  },\n  \"x-amf-union\": [\n    {},\n    {}\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x-amf-examples\": {\n    \"create-request-pem\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"PEM\",\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\nreplace with encrypted data\\n-----END CERTIFICATE-----\",\n          \"key\": \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\nreplace with encrypted data\\n-----END ENCRYPTED PRIVATE KEY-----\",\n          \"keyPassphrase\": \"password123\",\n          \"keyFileName\": \"test.pem\",\n          \"certificateFileName\": \"certificateF.pem\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    },\n    \"create-request-jks\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"JKS\",\n          \"keystoreBase64\": \"replace with base64 encoded keystore\",\n          \"keyPassphrase\": \"password123\",\n          \"storePassphrase\": \"password123\",\n          \"alias\": \"special\",\n          \"keystoreFileName\": \"special.jks\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    }\n  },\n  \"x-amf-union\": [\n    {},\n    {}\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x-amf-examples\": {\n    \"create-request-pem\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"PEM\",\n          \"certificate\": \"-----BEGIN CERTIFICATE-----\\nreplace with encrypted data\\n-----END CERTIFICATE-----\",\n          \"key\": \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\nreplace with encrypted data\\n-----END ENCRYPTED PRIVATE KEY-----\",\n          \"keyPassphrase\": \"password123\",\n          \"keyFileName\": \"test.pem\",\n          \"certificateFileName\": \"certificateF.pem\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    },\n    \"create-request-jks\": {\n      \"name\": \"test\",\n      \"tlsConfig\": {\n        \"keyStore\": {\n          \"source\": \"JKS\",\n          \"keystoreBase64\": \"replace with base64 encoded keystore\",\n          \"keyPassphrase\": \"password123\",\n          \"storePassphrase\": \"password123\",\n          \"alias\": \"special\",\n          \"keystoreFileName\": \"special.jks\"\n        }\n      },\n      \"ciphers\": {\n        \"aes128GcmSha256\": true,\n        \"aes128Sha256\": false,\n        \"aes256GcmSha384\": false,\n        \"aes256Sha256\": false,\n        \"dheRsaAes128Sha256\": false,\n        \"dheRsaAes256GcmSha384\": false,\n        \"dheRsaAes256Sha256\": false,\n        \"ecdheEcdsaAes128GcmSha256\": true,\n        \"ecdheEcdsaAes128Sha1\": false,\n        \"ecdheEcdsaAes256GcmSha384\": true,\n        \"ecdheEcdsaAes256Sha1\": false,\n        \"ecdheRsaAes128GcmSha256\": true,\n        \"ecdheRsaAes128Sha1\": false,\n        \"ecdheRsaAes256GcmSha384\": true,\n        \"ecdheRsaAes256Sha1\": false,\n        \"ecdheEcdsaChacha20Poly1305\": false,\n        \"ecdheRsaChacha20Poly1305\": false,\n        \"dheRsaChacha20Poly1305\": false,\n        \"tlsAes256GcmSha384\": true,\n        \"tlsChacha20Poly1305Sha256\": true,\n        \"tlsAes128GcmSha256\": true\n      }\n    }\n  },\n  \"x-amf-union\": [\n    {},\n    {}\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Retry-After",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete the TLS context",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"tlsContexts",
														"{{tls_context_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "contextId",
															"value": "<string>"
														}
													]
												},
												"description": "delete the TLS context"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts",
																"{{tls_context_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get the TLS context",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"tlsContexts",
														"{{tls_context_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "contextId",
															"value": "<string>"
														}
													]
												},
												"description": "get the TLS context"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts",
																"{{tls_context_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "null"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts",
																"{{tls_context_id}}"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update an existing TLS context",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"tlsContexts",
														"{{tls_context_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "contextId",
															"value": "<string>"
														}
													]
												},
												"description": "Update an existing TLS context"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts",
																"{{tls_context_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"keyStore\": {\n    \"type\": \"<string>\",\n    \"cn\": \"<string>\",\n    \"san\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"fileName\": \"<string>\",\n    \"alias\": \"<string>\",\n    \"keyFileName\": \"<string>\",\n    \"capathFileName\": \"<string>\",\n    \"expirationDate\": \"<string>\"\n  },\n  \"ciphers\": {\n    \"aes128GcmSha256\": false,\n    \"aes128Sha256\": false,\n    \"aes256GcmSha384\": false,\n    \"aes256Sha256\": false,\n    \"dheRsaAes128Sha256\": false,\n    \"dheRsaAes256GcmSha384\": false,\n    \"dheRsaAes256Sha256\": false,\n    \"ecdheEcdsaAes128GcmSha256\": true,\n    \"ecdheEcdsaAes128Sha1\": false,\n    \"ecdheEcdsaAes256GcmSha384\": true,\n    \"ecdheEcdsaAes256Sha1\": false,\n    \"ecdheRsaAes128GcmSha256\": true,\n    \"ecdheRsaAes128Sha1\": false,\n    \"ecdheRsaAes256GcmSha384\": true,\n    \"ecdheRsaAes256Sha1\": false,\n    \"ecdheEcdsaChacha20Poly1305\": false,\n    \"ecdheRsaChacha20Poly1305\": false,\n    \"dheRsaChacha20Poly1305\": false,\n    \"tlsAes256GcmSha384\": true,\n    \"tlsChacha20Poly1305Sha256\": true,\n    \"tlsAes128GcmSha256\": true\n  },\n  \"trustStore\": {\n    \"type\": \"<string>\",\n    \"dnList\": [\n      {\n        \"issuer\": {\n          \"commonName\": \"<string>\",\n          \"countryName\": \"<string>\",\n          \"localityName\": \"<string>\",\n          \"organizationName\": \"<string>\",\n          \"organizationUnit\": \"<string>\",\n          \"state\": \"<string>\"\n        },\n        \"subject\": {\n          \"commonName\": \"<string>\",\n          \"countryName\": \"<string>\",\n          \"localityName\": \"<string>\",\n          \"organizationName\": \"<string>\",\n          \"organizationUnit\": \"<string>\",\n          \"state\": \"<string>\"\n        },\n        \"version\": \"<string>\",\n        \"serialNumber\": \"<string>\",\n        \"signatureAlgorithm\": \"<string>\",\n        \"publicKeyAlgorithm\": \"<string>\",\n        \"validity\": {\n          \"notBefore\": \"<string>\",\n          \"notAfter\": \"<string>\"\n        },\n        \"certificateType\": \"<string>\",\n        \"subjectAlternativeName\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"basicConstraints\": {\n          \"certificateAuthority\": \"<boolean>\"\n        },\n        \"keyUsage\": [\n          \"CRL Sign\"\n        ],\n        \"extendedKeyUsage\": [\n          \"IP security end system\"\n        ]\n      }\n    ],\n    \"fileName\": \"<string>\",\n    \"expirationDate\": \"<string>\"\n  },\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/tlsContexts/{{tls_context_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"tlsContexts",
																"{{tls_context_id}}"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "Connections",
									"item": [
										{
											"name": "List Connections in Private Space",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "get the list of Connections inside the private space."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"vpns\": [\n      {\n        \"name\": \"<string>\",\n        \"remoteIpAddress\": \"<string>\",\n        \"vpnId\": \"<string>\",\n        \"connectionId\": \"<string>\",\n        \"connectionName\": \"<string>\",\n        \"vpnConnectionStatus\": \"<string>\",\n        \"remoteAsn\": \"<number>\",\n        \"localAsn\": \"<number>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"remoteIpAddress\": \"<string>\",\n        \"vpnId\": \"<string>\",\n        \"connectionId\": \"<string>\",\n        \"connectionName\": \"<string>\",\n        \"vpnConnectionStatus\": \"<string>\",\n        \"remoteAsn\": \"<number>\",\n        \"localAsn\": \"<number>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"vpns\": [\n      {\n        \"name\": \"<string>\",\n        \"remoteIpAddress\": \"<string>\",\n        \"vpnId\": \"<string>\",\n        \"connectionId\": \"<string>\",\n        \"connectionName\": \"<string>\",\n        \"vpnConnectionStatus\": \"<string>\",\n        \"remoteAsn\": \"<number>\",\n        \"localAsn\": \"<number>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"remoteIpAddress\": \"<string>\",\n        \"vpnId\": \"<string>\",\n        \"connectionId\": \"<string>\",\n        \"connectionName\": \"<string>\",\n        \"vpnConnectionStatus\": \"<string>\",\n        \"remoteAsn\": \"<number>\",\n        \"localAsn\": \"<number>\"\n      }\n    ]\n  }\n]"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Retry-After",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create Private Space Connection",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "create a Private Space Connection"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "URL where the new connection can be found",
																"type": "text/plain"
															}
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Retry-After",
															"value": "<string>",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Private Space Connection",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"{{connection_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "connectionId",
															"value": "<string>"
														}
													]
												},
												"description": "delete the Private Space Connection"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"{{connection_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Private Space Connection",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"{{connection_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "connectionId",
															"value": "<string>"
														}
													]
												},
												"description": "get the Private Space Connection"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"{{connection_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"x-amf-examples\": {\n    \"response\": {\n      \"name\": \"hello-connection\",\n      \"vpns\": [\n        {\n          \"vpnId\": \"83d77850-04ee-4368-8122-192f760913de\",\n          \"name\": \"test-vpn-dev\",\n          \"localAsn\": 65001,\n          \"remoteAsn\": 65002,\n          \"remoteIpAddress\": \"1.2.3.4\",\n          \"connectionStatus\": \"available\",\n          \"staticRoutes\": [],\n          \"vpnTunnels\": [],\n          \"vpnTunnelsConfig\": []\n        },\n        {\n          \"name\": \"test-vpn-dev-bak\",\n          \"vpnId\": \"83d77850-04ee-4368-8122-192f760913df\",\n          \"localAsn\": 65001,\n          \"remoteAsn\": 65002,\n          \"remoteIpAddress\": \"1.2.3.5\",\n          \"connectionStatus\": \"available\",\n          \"staticRoutes\": [],\n          \"vpnTunnels\": [],\n          \"vpnTunnelsConfig\": []\n        }\n      ]\n    }\n  }\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"{{connection_id}}"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update existing Private Space Connection",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"{{connection_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "connectionId",
															"value": "<string>"
														}
													]
												},
												"description": "Update existing Private Space Connection"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"{{connection_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/{{connection_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"{{connection_id}}"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"x-amf-examples\": {\n    \"response\": {\n      \"name\": \"hello-connection\",\n      \"vpns\": [\n        {\n          \"vpnId\": \"83d77850-04ee-4368-8122-192f760913de\",\n          \"name\": \"test-vpn-dev\",\n          \"localAsn\": 65001,\n          \"remoteAsn\": 65002,\n          \"remoteIpAddress\": \"1.2.3.4\",\n          \"connectionStatus\": \"available\",\n          \"staticRoutes\": [],\n          \"vpnTunnels\": [],\n          \"vpnTunnelsConfig\": []\n        },\n        {\n          \"name\": \"test-vpn-dev-bak\",\n          \"vpnId\": \"83d77850-04ee-4368-8122-192f760913df\",\n          \"localAsn\": 65001,\n          \"remoteAsn\": 65002,\n          \"remoteIpAddress\": \"1.2.3.5\",\n          \"connectionStatus\": \"available\",\n          \"staticRoutes\": [],\n          \"vpnTunnels\": [],\n          \"vpnTunnelsConfig\": []\n        }\n      ]\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Add VPN to existing Connection",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"vpns"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														}
													]
												},
												"description": "add a vpn to an existing connection."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"vpns"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "URL where the new vpn can be found",
																"type": "text/plain"
															}
														},
														{
															"key": "ETag",
															"value": "<string>",
															"description": {
																"content": "The current value of the entity tag for the requested variant",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"vpns\": [\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"remoteIpAddress\": \"<string>\",\n      \"vpnId\": \"<string>\",\n      \"connectionId\": \"<string>\",\n      \"connectionName\": \"<string>\",\n      \"vpnConnectionStatus\": \"<string>\",\n      \"remoteAsn\": \"<number>\",\n      \"localAsn\": \"<number>\"\n    }\n  ]\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"vpns"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete VPN from Connection",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns/{{vpn_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"vpns",
														"{{vpn_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "vpnId",
															"value": "<string>"
														}
													]
												},
												"description": "delete a vpn from a connection."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns/{{vpn_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"vpns",
																"{{vpn_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete VPN from Connection",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"remoteIpAddress\": \"<string>\",\n  \"staticRoutes\": [],\n  \"vpnTunnels\": [],\n  \"name\": \"<string>\",\n  \"remoteAsn\": \"<number>\",\n  \"localAsn\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns/{{vpn_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"vpns",
														"{{vpn_id}}"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "vpnId",
															"value": "<string>"
														}
													]
												},
												"description": "delete a vpn from a connection."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"remoteIpAddress\": \"<string>\",\n  \"staticRoutes\": [],\n  \"vpnTunnels\": [],\n  \"name\": \"<string>\",\n  \"remoteAsn\": \"<number>\",\n  \"localAsn\": \"<number>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns/{{vpn_id}}",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"vpns",
																"{{vpn_id}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"remoteIpAddress\": \"<string>\",\n  \"staticRoutes\": [],\n  \"vpnTunnels\": [],\n  \"name\": \"<string>\",\n  \"remoteAsn\": \"<number>\",\n  \"localAsn\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Get VPN from Connection by ID",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns/{{vpn_id}}/connectionGuide?vendor=<string>&platform=<string>&software=<string>",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"connections",
														"vpns",
														"{{vpn_id}}",
														"connectionGuide"
													],
													"query": [
														{
															"key": "vendor",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "platform",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "software",
															"value": "<string>",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "orgId",
															"value": "<string>"
														},
														{
															"key": "privateSpaceId",
															"value": "<string>"
														},
														{
															"key": "vpnId",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/connections/vpns/{{vpn_id}}/connectionGuide?vendor=<string>&platform=<string>&software=<string>",
															"host": [
																"{{cloudhub2-url}}"
															],
															"path": [
																"organizations",
																"{{organization_id}}",
																"privatespaces",
																"{{private_space_id}}",
																"connections",
																"vpns",
																"{{vpn_id}}",
																"connectionGuide"
															],
															"query": [
																{
																	"key": "vendor",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "platform",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "software",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Private Spaces in the organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces"
											]
										},
										"description": "get the list of Private Spaces in the organization."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "ETag",
													"value": "<string>",
													"description": {
														"content": "The current value of the entity tag for the requested variant",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"environments\": {\n      \"type\": \"<string>\",\n      \"businessGroups\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"network\": {\n      \"region\": \"<string>\",\n      \"vpcId\": \"<string>\",\n      \"cidrBlock\": \"10.0.0.0/16\",\n      \"internalDns\": {\n        \"dnsServers\": [],\n        \"specialDomains\": []\n      },\n      \"inboundStaticIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"outboundStaticIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"dnsTarget\": \"<string>\",\n      \"internalDnsTarget\": \"<string>\"\n    },\n    \"firewallRules\": [\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      },\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      }\n    ],\n    \"ingressConfiguration\": {\n      \"readResponseTimeout\": 300,\n      \"logs\": {\n        \"portLogLevel\": \"ERROR\"\n      },\n      \"protocol\": \"https-redirect\",\n      \"deployment\": {\n        \"status\": \"<string>\",\n        \"lastSeenTimestamp\": \"<number>\"\n      }\n    },\n    \"status\": \"<string>\",\n    \"statusMessage\": \"<string>\",\n    \"provisioning\": {\n      \"status\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    \"region\": \"<string>\",\n    \"managedFirewallRules\": [\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      },\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      }\n    ],\n    \"enableIAMRole\": \"<boolean>\",\n    \"globalSpaceStatus\": {\n      \"space\": {\n        \"status\": \"<string>\",\n        \"message\": \"<string>\",\n        \"lastSeenTimeStamp\": \"<number>\"\n      },\n      \"cluster\": [\n        {\n          \"infra\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"fabric\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"ingress\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          }\n        },\n        {\n          \"infra\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"fabric\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"ingress\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          }\n        }\n      ],\n      \"network\": {\n        \"status\": \"<string>\",\n        \"message\": \"<string>\",\n        \"lastSeenTimeStamp\": \"<number>\"\n      }\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"environments\": {\n      \"type\": \"<string>\",\n      \"businessGroups\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"network\": {\n      \"region\": \"<string>\",\n      \"vpcId\": \"<string>\",\n      \"cidrBlock\": \"10.0.0.0/16\",\n      \"internalDns\": {\n        \"dnsServers\": [],\n        \"specialDomains\": []\n      },\n      \"inboundStaticIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"outboundStaticIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"dnsTarget\": \"<string>\",\n      \"internalDnsTarget\": \"<string>\"\n    },\n    \"firewallRules\": [\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      },\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      }\n    ],\n    \"ingressConfiguration\": {\n      \"readResponseTimeout\": 300,\n      \"logs\": {\n        \"portLogLevel\": \"ERROR\"\n      },\n      \"protocol\": \"https-redirect\",\n      \"deployment\": {\n        \"status\": \"<string>\",\n        \"lastSeenTimestamp\": \"<number>\"\n      }\n    },\n    \"status\": \"<string>\",\n    \"statusMessage\": \"<string>\",\n    \"provisioning\": {\n      \"status\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    \"region\": \"<string>\",\n    \"managedFirewallRules\": [\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      },\n      {\n        \"cidrBlock\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"fromPort\": \"<integer>\",\n        \"toPort\": \"<integer>\",\n        \"type\": \"inbound\"\n      }\n    ],\n    \"enableIAMRole\": \"<boolean>\",\n    \"globalSpaceStatus\": {\n      \"space\": {\n        \"status\": \"<string>\",\n        \"message\": \"<string>\",\n        \"lastSeenTimeStamp\": \"<number>\"\n      },\n      \"cluster\": [\n        {\n          \"infra\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"fabric\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"ingress\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          }\n        },\n        {\n          \"infra\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"fabric\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          },\n          \"ingress\": {\n            \"status\": \"<string>\",\n            \"message\": \"<string>\",\n            \"lastSeenTimeStamp\": \"<number>\"\n          }\n        }\n      ],\n      \"network\": {\n        \"status\": \"<string>\",\n        \"message\": \"<string>\",\n        \"lastSeenTimeStamp\": \"<number>\"\n      }\n    }\n  }\n]"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Retry-After",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Ingress logs in ascending order",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/logs/ingress",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}",
												"logs",
												"ingress"
											]
										},
										"description": "download ingress logs in ascending order"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/logs/ingress",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"logs",
														"ingress"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												},
												{
													"key": "transfer-encoding",
													"value": "chunked",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Get AWS account Id a string value",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/accounts",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}",
												"accounts"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "privateSpaceId",
													"value": "<string>"
												}
											]
										},
										"description": "get the AWS account Id a string value."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/accounts",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"accounts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get IAM roles associated with the Private Space",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/iamroles",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}",
												"iamroles"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "privateSpaceId",
													"value": "<string>"
												}
											]
										},
										"description": "get the IAM roles associated with the space."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/iamroles",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"iamroles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organizationId\": \"<string>\",\n  \"spaceId\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create Private Space",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TestBy2Aug2023-AngelAlberici-UsEast2\",\n    \"environments\": {\n        \"type\": \"sandbox\",\n        \"businessGroups\": [\n            \"59995d29-ebe2-43d9-a52b-766683fd41a7\"\n        ]\n    },\n    \"network\": {\n        \"region\": \"us-east-2\",\n        \"cidrBlock\": \"192.168.192.0/24\",\n        \"inboundStaticIps\": [\n            \"13.58.69.47\",\n            \"3.137.72.80\",\n            \"3.142.18.12\"\n        ],\n        \"outboundStaticIps\": [\n            \"3.128.99.14\",\n            \"3.140.68.137\",\n            \"3.141.210.250\"\n        ],\n        \"dnsTarget\": \"83j7jq.usa-e2.cloudhub.io\",\n        \"internalDnsTarget\": \"internal-83j7jq.usa-e2.cloudhub.io\"\n    },\n    \"managedFirewallRules\": [\n        {\n            \"cidrBlock\": \"0.0.0.0/0\",\n            \"protocol\": \"tcp\",\n            \"fromPort\": 80,\n            \"toPort\": 80,\n            \"type\": \"inbound\"\n        },\n        {\n            \"cidrBlock\": \"0.0.0.0/0\",\n            \"protocol\": \"tcp\",\n            \"fromPort\": 443,\n            \"toPort\": 443,\n            \"type\": \"inbound\"\n        },\n        {\n            \"cidrBlock\": \"0.0.0.0/0\",\n            \"protocol\": \"tcp\",\n            \"fromPort\": 0,\n            \"toPort\": 65535,\n            \"type\": \"outbound\"\n        },\n        {\n            \"cidrBlock\": \"0.0.0.0/0\",\n            \"protocol\": \"tcp\",\n            \"fromPort\": 443,\n            \"toPort\": 443,\n            \"type\": \"outbound\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												}
											]
										},
										"description": "create a Private Space"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "URL where the new privatespace can be found",
														"type": "text/plain"
													}
												},
												{
													"key": "ETag",
													"value": "<string>",
													"description": {
														"content": "The current value of the entity tag for the requested variant",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    },\n    \"inboundStaticIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"outboundStaticIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dnsTarget\": \"<string>\",\n    \"internalDnsTarget\": \"<string>\"\n  },\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"ingressConfiguration\": {\n    \"readResponseTimeout\": 300,\n    \"logs\": {\n      \"portLogLevel\": \"ERROR\"\n    },\n    \"protocol\": \"https-redirect\",\n    \"deployment\": {\n      \"status\": \"<string>\",\n      \"lastSeenTimestamp\": \"<number>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"statusMessage\": \"<string>\",\n  \"provisioning\": {\n    \"status\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"region\": \"<string>\",\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"enableIAMRole\": \"<boolean>\",\n  \"globalSpaceStatus\": {\n    \"space\": {\n      \"status\": \"<string>\",\n      \"message\": \"<string>\",\n      \"lastSeenTimeStamp\": \"<number>\"\n    },\n    \"cluster\": [\n      {\n        \"infra\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"fabric\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"ingress\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        }\n      },\n      {\n        \"infra\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"fabric\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"ingress\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        }\n      }\n    ],\n    \"network\": {\n      \"status\": \"<string>\",\n      \"message\": \"<string>\",\n      \"lastSeenTimeStamp\": \"<number>\"\n    }\n  }\n}"
										},
										{
											"name": "Bad Request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Retry-After",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Private Space",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}"
											]
										},
										"description": "delete the Private Space"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Private Space",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "privateSpaceId",
													"value": "<string>"
												}
											]
										},
										"description": "get the Private Space"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "null"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Update existing Private Space",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"logForwarding\": {\n    \"anypointMonitoring\": \"<boolean>\"\n  },\n  \"ingressConfiguration\": {\n    \"readResponseTimeout\": 300,\n    \"logs\": {\n      \"portLogLevel\": \"ERROR\"\n    },\n    \"protocol\": \"https-redirect\",\n    \"deployment\": {\n      \"status\": \"<string>\",\n      \"lastSeenTimestamp\": \"<number>\"\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"enableIAMRole\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "privateSpaceId",
													"value": "<string>"
												}
											]
										},
										"description": "Update existing Private Space"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"logForwarding\": {\n    \"anypointMonitoring\": \"<boolean>\"\n  },\n  \"ingressConfiguration\": {\n    \"readResponseTimeout\": 300,\n    \"logs\": {\n      \"portLogLevel\": \"ERROR\"\n    },\n    \"protocol\": \"https-redirect\",\n    \"deployment\": {\n      \"status\": \"<string>\",\n      \"lastSeenTimestamp\": \"<number>\"\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"enableIAMRole\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    },\n    \"inboundStaticIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"outboundStaticIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dnsTarget\": \"<string>\",\n    \"internalDnsTarget\": \"<string>\"\n  },\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"ingressConfiguration\": {\n    \"readResponseTimeout\": 300,\n    \"logs\": {\n      \"portLogLevel\": \"ERROR\"\n    },\n    \"protocol\": \"https-redirect\",\n    \"deployment\": {\n      \"status\": \"<string>\",\n      \"lastSeenTimestamp\": \"<number>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"statusMessage\": \"<string>\",\n  \"provisioning\": {\n    \"status\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"region\": \"<string>\",\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"enableIAMRole\": \"<boolean>\",\n  \"globalSpaceStatus\": {\n    \"space\": {\n      \"status\": \"<string>\",\n      \"message\": \"<string>\",\n      \"lastSeenTimeStamp\": \"<number>\"\n    },\n    \"cluster\": [\n      {\n        \"infra\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"fabric\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"ingress\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        }\n      },\n      {\n        \"infra\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"fabric\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        },\n        \"ingress\": {\n          \"status\": \"<string>\",\n          \"message\": \"<string>\",\n          \"lastSeenTimeStamp\": \"<number>\"\n        }\n      }\n    ],\n    \"network\": {\n      \"status\": \"<string>\",\n      \"message\": \"<string>\",\n      \"lastSeenTimeStamp\": \"<number>\"\n    }\n  }\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"environments\": {\n    \"type\": \"<string>\",\n    \"businessGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"network\": {\n    \"region\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"cidrBlock\": \"10.0.0.0/16\",\n    \"internalDns\": {\n      \"dnsServers\": [],\n      \"specialDomains\": []\n    }\n  },\n  \"firewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"logForwarding\": {\n    \"anypointMonitoring\": \"<boolean>\"\n  },\n  \"ingressConfiguration\": {\n    \"readResponseTimeout\": 300,\n    \"logs\": {\n      \"portLogLevel\": \"ERROR\"\n    },\n    \"protocol\": \"https-redirect\",\n    \"deployment\": {\n      \"status\": \"<string>\",\n      \"lastSeenTimestamp\": \"<number>\"\n    }\n  },\n  \"managedFirewallRules\": [\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    },\n    {\n      \"cidrBlock\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"fromPort\": \"<integer>\",\n      \"toPort\": \"<integer>\",\n      \"type\": \"inbound\"\n    }\n  ],\n  \"enableIAMRole\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								},
								{
									"name": "Get supported VPN configs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/supportedVpnConfigs",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"supportedVpnConfigs"
											],
											"variable": [
												{
													"key": "orgId",
													"value": null
												}
											]
										},
										"description": "get supported vpn configs"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/supportedVpnConfigs",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"supportedVpnConfigs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get next set of available ports",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/ports?available=true&count=10000",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"privatespaces",
												"{{private_space_id}}",
												"ports"
											],
											"query": [
												{
													"key": "available",
													"value": "true"
												},
												{
													"key": "count",
													"value": "10000"
												}
											]
										},
										"description": "Get the next set of available ports."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/ports?available=false&count=1",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"ports"
													],
													"query": [
														{
															"key": "available",
															"value": "false",
															"description": "(Required) Return next free/available ports"
														},
														{
															"key": "count",
															"value": "1",
															"description": "(Required) Size of the available port list between 1 to 10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ports\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
										},
										{
											"name": "All the available ports for the space are in use.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/privatespaces/{{private_space_id}}/ports?available=false&count=1",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"privatespaces",
														"{{private_space_id}}",
														"ports"
													],
													"query": [
														{
															"key": "available",
															"value": "false",
															"description": "(Required) Return next free/available ports"
														},
														{
															"key": "count",
															"value": "1",
															"description": "(Required) Size of the available port list between 1 to 10"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Transit Gateways (Cloudhub 2.0)",
							"item": [
								{
									"name": "List TGW connections associated with an Organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"transitgateways"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												}
											]
										},
										"description": "get list of TGW connections assocated with an organization."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"transitgateways"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "ETag",
													"value": "<string>",
													"description": {
														"content": "The current value of the entity tag for the requested variant",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"spec\": {\n      \"resourceShare\": {\n        \"id\": \"<string>\",\n        \"account\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"spaceName\": \"<string>\"\n    },\n    \"status\": {\n      \"gateway\": \"<string>\",\n      \"attachment\": \"<string>\",\n      \"tgwResource\": \"<string>\",\n      \"routes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"spec\": {\n      \"resourceShare\": {\n        \"id\": \"<string>\",\n        \"account\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"spaceName\": \"<string>\"\n    },\n    \"status\": {\n      \"gateway\": \"<string>\",\n      \"attachment\": \"<string>\",\n      \"tgwResource\": \"<string>\",\n      \"routes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n]"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"transitgateways"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"transitgateways"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Retry-After",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove Transit gateway from an Organization",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways/{{transit_gateway_id}}",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"transitgateways",
												"{{transit_gateway_id}}"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "tgwId",
													"value": "<string>"
												}
											]
										},
										"description": "Remove the Transit gateway from your Anypoint Platform organization"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways/{{transit_gateway_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"transitgateways",
														"{{transit_gateway_id}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get TGW routes configured for a gateway",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways/{{transit_gateway_id}}/routes",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"transitgateways",
												"{{transit_gateway_id}}",
												"routes"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "tgwId",
													"value": "<string>"
												}
											]
										},
										"description": "get TGW routes configured for a gateway"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/transitgateways/{{transit_gateway_id}}/routes",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"transitgateways",
														"{{transit_gateway_id}}",
														"routes"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Deployment Target (Cloudhub 2.0 : Not in use)",
							"item": [
								{
									"name": "Get the target (Uncommon use)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/targets/{{target_id}}",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"targets",
												"{{target_id}}"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										},
										"description": "get the target"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/targets/{{target_id}}",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"targets",
														"{{target_id}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<string>\",\n  \"type\": \"<string>\",\n  \"runtimes\": [\n    {\n      \"type\": \"<string>\",\n      \"versions\": [\n        {\n          \"baseVersion\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"releaseDate\": \"<number>\",\n          \"minimumTag\": \"<string>\",\n          \"href\": \"<string>\"\n        },\n        {\n          \"baseVersion\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"releaseDate\": \"<number>\",\n          \"minimumTag\": \"<string>\",\n          \"href\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"versions\": [\n        {\n          \"baseVersion\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"releaseDate\": \"<number>\",\n          \"minimumTag\": \"<string>\",\n          \"href\": \"<string>\"\n        },\n        {\n          \"baseVersion\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"releaseDate\": \"<number>\",\n          \"minimumTag\": \"<string>\",\n          \"href\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"status\": \"<string>\",\n  \"isAvailableForDeployments\": \"<boolean>\",\n  \"nodes\": [\n    {\n      \"id\": \"<string>\",\n      \"location\": \"<string>\",\n      \"isAvailableForDeployments\": \"<boolean>\",\n      \"availability\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"location\": \"<string>\",\n      \"isAvailableForDeployments\": \"<boolean>\",\n      \"availability\": \"<string>\"\n    }\n  ],\n  \"region\": \"<string>\",\n  \"environments\": [\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"replicationStrategies\": {},\n  \"defaults\": {},\n  \"enhancedSecurity\": \"<boolean>\",\n  \"featureFlags\": {}\n}"
										}
									]
								},
								{
									"name": "List target deployments within an organization (Uncommon use)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/targets",
											"host": [
												"{{cloudhub2-url}}"
											],
											"path": [
												"organizations",
												"{{organization_id}}",
												"targets"
											],
											"variable": [
												{
													"key": "orgId",
													"value": null
												}
											]
										},
										"description": "get list of target deployments within an organization"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/targets",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"targets"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "ETag",
													"value": "<string>",
													"description": {
														"content": "The current value of the entity tag for the requested variant",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\",\n    \"type\": \"<string>\",\n    \"runtimes\": [\n      {\n        \"type\": \"<string>\",\n        \"versions\": [\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          },\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"type\": \"<string>\",\n        \"versions\": [\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          },\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"status\": \"<string>\",\n    \"isAvailableForDeployments\": \"<boolean>\",\n    \"nodes\": [\n      {\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"isAvailableForDeployments\": \"<boolean>\",\n        \"availability\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"isAvailableForDeployments\": \"<boolean>\",\n        \"availability\": \"<string>\"\n      }\n    ],\n    \"region\": \"<string>\",\n    \"environments\": [\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"replicationStrategies\": {},\n    \"defaults\": {},\n    \"enhancedSecurity\": \"<boolean>\",\n    \"featureFlags\": {}\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\",\n    \"type\": \"<string>\",\n    \"runtimes\": [\n      {\n        \"type\": \"<string>\",\n        \"versions\": [\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          },\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"type\": \"<string>\",\n        \"versions\": [\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          },\n          {\n            \"baseVersion\": \"<string>\",\n            \"tag\": \"<string>\",\n            \"releaseDate\": \"<number>\",\n            \"minimumTag\": \"<string>\",\n            \"href\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"status\": \"<string>\",\n    \"isAvailableForDeployments\": \"<boolean>\",\n    \"nodes\": [\n      {\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"isAvailableForDeployments\": \"<boolean>\",\n        \"availability\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"isAvailableForDeployments\": \"<boolean>\",\n        \"availability\": \"<string>\"\n      }\n    ],\n    \"region\": \"<string>\",\n    \"environments\": [\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"replicationStrategies\": {},\n    \"defaults\": {},\n    \"enhancedSecurity\": \"<boolean>\",\n    \"featureFlags\": {}\n  }\n]"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/targets",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"targets"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{cloudhub2-url}}/organizations/{{organization_id}}/targets",
													"host": [
														"{{cloudhub2-url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"targets"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Retry-After",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Visualizer",
					"item": [
						{
							"name": "Get settings for user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/visualizer/api/v4/organizations/{{organization_id}}/users/{{user_id}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"visualizer",
										"api",
										"v4",
										"organizations",
										"{{organization_id}}",
										"users",
										"{{user_id}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get application-info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/visualizer/api/v4/organizations/{{organization_id}}/applications-info",
									"host": [
										"{{url}}"
									],
									"path": [
										"visualizer",
										"api",
										"v4",
										"organizations",
										"{{organization_id}}",
										"applications-info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get policy-templates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/visualizer/api/v4/organizations/{{organization_id}}/policy-templates",
									"host": [
										"{{url}}"
									],
									"path": [
										"visualizer",
										"api",
										"v4",
										"organizations",
										"{{organization_id}}",
										"policy-templates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Secret Manager",
					"item": [
						{
							"name": "Keystores",
							"item": [
								{
									"name": "Check certificate content",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "type",
													"value": "JKS",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "/C:/Users/khanamir/abc.jks"
												},
												{
													"key": "storePassphrase",
													"value": "!Q2w3e4r5",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/details/store",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"details",
												"store"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get keystores for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/keystores",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"keystores"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add standard keystore",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "khanamir",
													"type": "text"
												},
												{
													"key": "type",
													"value": "PEM",
													"type": "text"
												},
												{
													"key": "certificate",
													"type": "file",
													"src": []
												},
												{
													"key": "key",
													"type": "file",
													"src": []
												},
												{
													"key": "keyPassphrase",
													"value": "123456",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/keystores",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"keystores"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single keystore by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/keystores/{{keystore_Id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"keystores",
												"{{keystore_Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change standard keystore",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "khanamir",
													"type": "text"
												},
												{
													"key": "type",
													"value": "PEM",
													"type": "text"
												},
												{
													"key": "certificate",
													"type": "file",
													"src": []
												},
												{
													"key": "key",
													"type": "file",
													"src": []
												},
												{
													"key": "keyPassphrase",
													"value": "123456",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/keystores/{{keystore_Id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"keystores",
												"{{keystore_Id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Truststore",
							"item": [
								{
									"name": "Get truststores for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/truststores",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"truststores"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Certificates",
							"item": [
								{
									"name": "Get certificates for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/certificates",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"certificates"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Certificate Pinset",
							"item": [
								{
									"name": "Get certificatepinsets for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/certificatePinsets",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"certificatePinsets"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Shared Secret",
							"item": [
								{
									"name": "Get sharedsecrets for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/sharedSecrets",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"sharedSecrets"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CRL Distributor Config",
							"item": [
								{
									"name": "Get crlDistributorConfigs for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/crlDistributorConfigs",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"crlDistributorConfigs"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TSL Context",
							"item": [
								{
									"name": "Get tlsContexts for secretgroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}/tlsContexts",
											"host": [
												"{{url}}"
											],
											"path": [
												"secrets-manager",
												"api",
												"v1",
												"organizations",
												"{{organization_id}}",
												"environments",
												"{{environment_id}}",
												"secretGroups",
												"{{secretgroup_Id}}",
												"tlsContexts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get all secretgroups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups",
									"host": [
										"{{url}}"
									],
									"path": [
										"secrets-manager",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"environments",
										"{{environment_id}}",
										"secretGroups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get single secretgroup",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"secrets-manager",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"environments",
										"{{environment_id}}",
										"secretGroups",
										"{{secretgroup_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete single secretgroup",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}?force=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"secrets-manager",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"environments",
										"{{environment_id}}",
										"secretGroups",
										"{{secretgroup_Id}}"
									],
									"query": [
										{
											"key": "force",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a secretgroup",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\":\"test22\",\r\n   \"downloadable\":true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups",
									"host": [
										"{{url}}"
									],
									"path": [
										"secrets-manager",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"environments",
										"{{environment_id}}",
										"secretGroups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Rename secretgroup",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ORG-ID",
										"value": "{{organization_id}}",
										"type": "text"
									},
									{
										"key": "X-ANYPNT-ENV-ID",
										"value": "{{environment_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\":\"test32\",\r\n   \"downloadable\":true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/secrets-manager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/secretGroups/{{secretgroup_Id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"secrets-manager",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"environments",
										"{{environment_id}}",
										"secretGroups",
										"{{secretgroup_Id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Automated Policies",
					"item": [
						{
							"name": "Get exchange policy-templates for environment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/exchange-policy-templates?environmentId={{environment_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apimanager",
										"xapi",
										"v1",
										"organizations",
										"{{organization_id}}",
										"exchange-policy-templates"
									],
									"query": [
										{
											"key": "environmentId",
											"value": "{{environment_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get exchange automated policies for environment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apimanager/xapi/v1/organizations/{{organization_id}}/automated-policies?environmentId={{environment_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apimanager",
										"xapi",
										"v1",
										"organizations",
										"{{organization_id}}",
										"automated-policies"
									],
									"query": [
										{
											"key": "environmentId",
											"value": "{{environment_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add automated policies (example spike-control)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"configurationData\":{\r\n      \"maximumRequests\":1,\r\n      \"timePeriodInMilliseconds\":1000,\r\n      \"delayTimeInMillis\":1000,\r\n      \"delayAttempts\":1,\r\n      \"queuingLimit\":5,\r\n      \"exposeHeaders\":false\r\n   },\r\n   \"id\":null,\r\n   \"pointcutData\":null,\r\n   \"ruleOfApplication\":{\r\n      \"environmentId\":\"{{environment_id}}\",\r\n      \"organizationId\":\"{{organization_id}}\",\r\n      \"range\":{\r\n         \"from\":\"4.1.1\"\r\n      }\r\n   },\r\n   \"groupId\":\"68ef9520-24e9-4cf2-b2f5-620025690913\",\r\n   \"assetId\":\"spike-control\",\r\n   \"assetVersion\":\"1.1.5\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apimanager/api/v1/organizations/{{organization_id}}/automated-policies",
									"host": [
										"{{url}}"
									],
									"path": [
										"apimanager",
										"api",
										"v1",
										"organizations",
										"{{organization_id}}",
										"automated-policies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Anypoint Monitoring",
					"item": [
						{
							"name": "Metric data for APIs",
							"item": [
								{
									"name": "{organization}/environments",
									"item": [
										{
											"name": "{environment}",
											"item": [
												{
													"name": "{entity Type}",
													"item": [
														{
															"name": "{entity ID}",
															"item": [
																{
																	"name": "{file Type}",
																	"item": [
																		{
																			"name": "{year}",
																			"item": [
																				{
																					"name": "{month}",
																					"item": [
																						{
																							"name": "{day Of Month}",
																							"item": [
																								{
																									"name": "/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth",
																									"request": {
																										"method": "GET",
																										"header": [],
																										"url": {
																											"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"organizations",
																												":organization",
																												"environments",
																												":environment",
																												":entityType",
																												":entityID",
																												":fileType",
																												":year",
																												":month",
																												":dayOfMonth"
																											],
																											"variable": [
																												{
																													"key": "version",
																													"value": "{{version}}"
																												},
																												{
																													"key": "organization",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "dayOfMonth",
																													"value": "08",
																													"description": "(Required) "
																												},
																												{
																													"key": "year",
																													"value": "4236",
																													"description": "(Required) "
																												},
																												{
																													"key": "fileType",
																													"value": "path",
																													"description": "(Required) "
																												},
																												{
																													"key": "entityType",
																													"value": "applications",
																													"description": "(Required) "
																												},
																												{
																													"key": "environment",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "entityID",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "month",
																													"value": "12",
																													"description": "(Required) "
																												}
																											]
																										},
																										"description": "Returns a list of data files under this node with each file containing archived metric data.\n"
																									},
																									"response": [
																										{
																											"name": "Untitled Example",
																											"originalRequest": {
																												"method": "GET",
																												"header": [],
																												"url": {
																													"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth",
																													"host": [
																														"{{baseUrl}}"
																													],
																													"path": [
																														"organizations",
																														":organization",
																														"environments",
																														":environment",
																														":entityType",
																														":entityID",
																														":fileType",
																														":year",
																														":month",
																														":dayOfMonth"
																													],
																													"variable": [
																														{
																															"key": "organization"
																														},
																														{
																															"key": "environment"
																														},
																														{
																															"key": "entityType"
																														},
																														{
																															"key": "entityID"
																														},
																														{
																															"key": "fileType"
																														},
																														{
																															"key": "year"
																														},
																														{
																															"key": "month"
																														},
																														{
																															"key": "dayOfMonth"
																														}
																													]
																												}
																											},
																											"status": "OK",
																											"code": 200,
																											"_postman_previewlanguage": "json",
																											"header": [
																												{
																													"key": "Content-Type",
																													"value": "application/json"
																												}
																											],
																											"cookie": [],
																											"body": "{\n \"resources\": [\n  {\n   \"id\": \"312bc026-2f5d-49bc-ae9f-5940cf4ad9a6.2013-04-18T10.00.tag_worker0.part0.txt\",\n   \"time\": \"2016-02-28T16:41:41.090Z\",\n   \"size\": 125423\n  },\n  {\n   \"id\": \"312bc026-2f5d-49bc-ae9f-5940cf4ad9a6.2013-04-18T10.00.tag_worker0.part0.txt\",\n   \"time\": \"2016-02-28T16:41:41.090Z\",\n   \"size\": 125423\n  }\n ]\n}"
																										},
																										{
																											"name": "The client is sending more than the allowed number of requests per unit time",
																											"originalRequest": {
																												"method": "GET",
																												"header": [],
																												"url": {
																													"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth",
																													"host": [
																														"{{baseUrl}}"
																													],
																													"path": [
																														"organizations",
																														":organization",
																														"environments",
																														":environment",
																														":entityType",
																														":entityID",
																														":fileType",
																														":year",
																														":month",
																														":dayOfMonth"
																													],
																													"variable": [
																														{
																															"key": "organization"
																														},
																														{
																															"key": "environment"
																														},
																														{
																															"key": "entityType"
																														},
																														{
																															"key": "entityID"
																														},
																														{
																															"key": "fileType"
																														},
																														{
																															"key": "year"
																														},
																														{
																															"key": "month"
																														},
																														{
																															"key": "dayOfMonth"
																														}
																													]
																												}
																											},
																											"status": "Too Many Requests",
																											"code": 429,
																											"_postman_previewlanguage": "text",
																											"header": [
																												{
																													"key": "Content-Type",
																													"value": "text/plain"
																												}
																											],
																											"cookie": [],
																											"body": ""
																										},
																										{
																											"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
																											"originalRequest": {
																												"method": "GET",
																												"header": [],
																												"url": {
																													"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth",
																													"host": [
																														"{{baseUrl}}"
																													],
																													"path": [
																														"organizations",
																														":organization",
																														"environments",
																														":environment",
																														":entityType",
																														":entityID",
																														":fileType",
																														":year",
																														":month",
																														":dayOfMonth"
																													],
																													"variable": [
																														{
																															"key": "organization"
																														},
																														{
																															"key": "environment"
																														},
																														{
																															"key": "entityType"
																														},
																														{
																															"key": "entityID"
																														},
																														{
																															"key": "fileType"
																														},
																														{
																															"key": "year"
																														},
																														{
																															"key": "month"
																														},
																														{
																															"key": "dayOfMonth"
																														}
																													]
																												}
																											},
																											"status": "Gateway Timeout",
																											"code": 504,
																											"_postman_previewlanguage": "text",
																											"header": [
																												{
																													"key": "Content-Type",
																													"value": "text/plain"
																												}
																											],
																											"cookie": [],
																											"body": ""
																										}
																									]
																								},
																								{
																									"name": "/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth/:fileName",
																									"request": {
																										"method": "GET",
																										"header": [],
																										"url": {
																											"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth/:fileName",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"organizations",
																												":organization",
																												"environments",
																												":environment",
																												":entityType",
																												":entityID",
																												":fileType",
																												":year",
																												":month",
																												":dayOfMonth",
																												":fileName"
																											],
																											"variable": [
																												{
																													"key": "version",
																													"value": "{{version}}"
																												},
																												{
																													"key": "organization",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "dayOfMonth",
																													"value": "08",
																													"description": "(Required) "
																												},
																												{
																													"key": "year",
																													"value": "4236",
																													"description": "(Required) "
																												},
																												{
																													"key": "fileName",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "fileType",
																													"value": "path",
																													"description": "(Required) "
																												},
																												{
																													"key": "entityType",
																													"value": "applications",
																													"description": "(Required) "
																												},
																												{
																													"key": "environment",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "entityID",
																													"value": "aute reprehenderit Lorem",
																													"description": "(Required) "
																												},
																												{
																													"key": "month",
																													"value": "12",
																													"description": "(Required) "
																												}
																											]
																										},
																										"description": "Retrieve the contents of the given data file.  A data file contains either metric data."
																									},
																									"response": [
																										{
																											"name": "Untitled Example",
																											"originalRequest": {
																												"method": "GET",
																												"header": [],
																												"url": {
																													"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth/:fileName",
																													"host": [
																														"{{baseUrl}}"
																													],
																													"path": [
																														"organizations",
																														":organization",
																														"environments",
																														":environment",
																														":entityType",
																														":entityID",
																														":fileType",
																														":year",
																														":month",
																														":dayOfMonth",
																														":fileName"
																													],
																													"variable": [
																														{
																															"key": "organization"
																														},
																														{
																															"key": "environment"
																														},
																														{
																															"key": "entityType"
																														},
																														{
																															"key": "entityID"
																														},
																														{
																															"key": "fileType"
																														},
																														{
																															"key": "year"
																														},
																														{
																															"key": "month"
																														},
																														{
																															"key": "dayOfMonth"
																														},
																														{
																															"key": "fileName"
																														}
																													]
																												}
																											},
																											"status": "OK",
																											"code": 200,
																											"_postman_previewlanguage": "json",
																											"header": [
																												{
																													"key": "Content-Type",
																													"value": "application/json"
																												}
																											],
																											"cookie": [],
																											"body": "\"voluptate laborum\""
																										},
																										{
																											"name": "The given file is not found.",
																											"originalRequest": {
																												"method": "GET",
																												"header": [],
																												"url": {
																													"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month/:dayOfMonth/:fileName",
																													"host": [
																														"{{baseUrl}}"
																													],
																													"path": [
																														"organizations",
																														":organization",
																														"environments",
																														":environment",
																														":entityType",
																														":entityID",
																														":fileType",
																														":year",
																														":month",
																														":dayOfMonth",
																														":fileName"
																													],
																													"variable": [
																														{
																															"key": "organization"
																														},
																														{
																															"key": "environment"
																														},
																														{
																															"key": "entityType"
																														},
																														{
																															"key": "entityID"
																														},
																														{
																															"key": "fileType"
																														},
																														{
																															"key": "year"
																														},
																														{
																															"key": "month"
																														},
																														{
																															"key": "dayOfMonth"
																														},
																														{
																															"key": "fileName"
																														}
																													]
																												}
																											},
																											"status": "Not Found",
																											"code": 404,
																											"_postman_previewlanguage": "text",
																											"header": [
																												{
																													"key": "Content-Type",
																													"value": "text/plain"
																												}
																											],
																											"cookie": [],
																											"body": ""
																										}
																									]
																								}
																							]
																						},
																						{
																							"name": "/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month",
																							"request": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organization",
																										"environments",
																										":environment",
																										":entityType",
																										":entityID",
																										":fileType",
																										":year",
																										":month"
																									],
																									"variable": [
																										{
																											"key": "version",
																											"value": "{{version}}"
																										},
																										{
																											"key": "organization",
																											"value": "aute reprehenderit Lorem",
																											"description": "(Required) "
																										},
																										{
																											"key": "year",
																											"value": "4236",
																											"description": "(Required) "
																										},
																										{
																											"key": "fileType",
																											"value": "path",
																											"description": "(Required) "
																										},
																										{
																											"key": "entityType",
																											"value": "applications",
																											"description": "(Required) "
																										},
																										{
																											"key": "environment",
																											"value": "aute reprehenderit Lorem",
																											"description": "(Required) "
																										},
																										{
																											"key": "entityID",
																											"value": "aute reprehenderit Lorem",
																											"description": "(Required) "
																										},
																										{
																											"key": "month",
																											"value": "12",
																											"description": "(Required) "
																										}
																									]
																								},
																								"description": "Returns a list of day identifiers for the days that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
																							},
																							"response": [
																								{
																									"name": "Untitled Example",
																									"originalRequest": {
																										"method": "GET",
																										"header": [],
																										"url": {
																											"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"organizations",
																												":organization",
																												"environments",
																												":environment",
																												":entityType",
																												":entityID",
																												":fileType",
																												":year",
																												":month"
																											],
																											"variable": [
																												{
																													"key": "organization"
																												},
																												{
																													"key": "environment"
																												},
																												{
																													"key": "entityType"
																												},
																												{
																													"key": "entityID"
																												},
																												{
																													"key": "fileType"
																												},
																												{
																													"key": "year"
																												},
																												{
																													"key": "month"
																												}
																											]
																										}
																									},
																									"status": "OK",
																									"code": 200,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n \"resources\": [\n  {\n   \"id\": \"09\"\n  },\n  {\n   \"id\": \"19\"\n  }\n ]\n}"
																								},
																								{
																									"name": "The client is sending more than the allowed number of requests per unit time",
																									"originalRequest": {
																										"method": "GET",
																										"header": [],
																										"url": {
																											"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"organizations",
																												":organization",
																												"environments",
																												":environment",
																												":entityType",
																												":entityID",
																												":fileType",
																												":year",
																												":month"
																											],
																											"variable": [
																												{
																													"key": "organization"
																												},
																												{
																													"key": "environment"
																												},
																												{
																													"key": "entityType"
																												},
																												{
																													"key": "entityID"
																												},
																												{
																													"key": "fileType"
																												},
																												{
																													"key": "year"
																												},
																												{
																													"key": "month"
																												}
																											]
																										}
																									},
																									"status": "Too Many Requests",
																									"code": 429,
																									"_postman_previewlanguage": "text",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "text/plain"
																										}
																									],
																									"cookie": [],
																									"body": ""
																								},
																								{
																									"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
																									"originalRequest": {
																										"method": "GET",
																										"header": [],
																										"url": {
																											"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year/:month",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"organizations",
																												":organization",
																												"environments",
																												":environment",
																												":entityType",
																												":entityID",
																												":fileType",
																												":year",
																												":month"
																											],
																											"variable": [
																												{
																													"key": "organization"
																												},
																												{
																													"key": "environment"
																												},
																												{
																													"key": "entityType"
																												},
																												{
																													"key": "entityID"
																												},
																												{
																													"key": "fileType"
																												},
																												{
																													"key": "year"
																												},
																												{
																													"key": "month"
																												}
																											]
																										}
																									},
																									"status": "Gateway Timeout",
																									"code": 504,
																									"_postman_previewlanguage": "text",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "text/plain"
																										}
																									],
																									"cookie": [],
																									"body": ""
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year",
																					"request": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organization",
																								"environments",
																								":environment",
																								":entityType",
																								":entityID",
																								":fileType",
																								":year"
																							],
																							"variable": [
																								{
																									"key": "version",
																									"value": "{{version}}"
																								},
																								{
																									"key": "organization",
																									"value": "aute reprehenderit Lorem",
																									"description": "(Required) "
																								},
																								{
																									"key": "year",
																									"value": "4236",
																									"description": "(Required) "
																								},
																								{
																									"key": "fileType",
																									"value": "path",
																									"description": "(Required) "
																								},
																								{
																									"key": "entityType",
																									"value": "applications",
																									"description": "(Required) "
																								},
																								{
																									"key": "environment",
																									"value": "aute reprehenderit Lorem",
																									"description": "(Required) "
																								},
																								{
																									"key": "entityID",
																									"value": "aute reprehenderit Lorem",
																									"description": "(Required) "
																								}
																							]
																						},
																						"description": "Returns a list of month identifiers for the months that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
																					},
																					"response": [
																						{
																							"name": "Untitled Example",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organization",
																										"environments",
																										":environment",
																										":entityType",
																										":entityID",
																										":fileType",
																										":year"
																									],
																									"variable": [
																										{
																											"key": "organization"
																										},
																										{
																											"key": "environment"
																										},
																										{
																											"key": "entityType"
																										},
																										{
																											"key": "entityID"
																										},
																										{
																											"key": "fileType"
																										},
																										{
																											"key": "year"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n \"resources\": [\n  {\n   \"id\": \"07\"\n  },\n  {\n   \"id\": \"03\"\n  }\n ]\n}"
																						},
																						{
																							"name": "The client is sending more than the allowed number of requests per unit time",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organization",
																										"environments",
																										":environment",
																										":entityType",
																										":entityID",
																										":fileType",
																										":year"
																									],
																									"variable": [
																										{
																											"key": "organization"
																										},
																										{
																											"key": "environment"
																										},
																										{
																											"key": "entityType"
																										},
																										{
																											"key": "entityID"
																										},
																										{
																											"key": "fileType"
																										},
																										{
																											"key": "year"
																										}
																									]
																								}
																							},
																							"status": "Too Many Requests",
																							"code": 429,
																							"_postman_previewlanguage": "text",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "text/plain"
																								}
																							],
																							"cookie": [],
																							"body": ""
																						},
																						{
																							"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType/:year",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organization",
																										"environments",
																										":environment",
																										":entityType",
																										":entityID",
																										":fileType",
																										":year"
																									],
																									"variable": [
																										{
																											"key": "organization"
																										},
																										{
																											"key": "environment"
																										},
																										{
																											"key": "entityType"
																										},
																										{
																											"key": "entityID"
																										},
																										{
																											"key": "fileType"
																										},
																										{
																											"key": "year"
																										}
																									]
																								}
																							},
																							"status": "Gateway Timeout",
																							"code": 504,
																							"_postman_previewlanguage": "text",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "text/plain"
																								}
																							],
																							"cookie": [],
																							"body": ""
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType",
																			"request": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organization",
																						"environments",
																						":environment",
																						":entityType",
																						":entityID",
																						":fileType"
																					],
																					"variable": [
																						{
																							"key": "version",
																							"value": "{{version}}"
																						},
																						{
																							"key": "organization",
																							"value": "aute reprehenderit Lorem",
																							"description": "(Required) "
																						},
																						{
																							"key": "fileType",
																							"value": "path",
																							"description": "(Required) "
																						},
																						{
																							"key": "entityType",
																							"value": "applications",
																							"description": "(Required) "
																						},
																						{
																							"key": "environment",
																							"value": "aute reprehenderit Lorem",
																							"description": "(Required) "
																						},
																						{
																							"key": "entityID",
																							"value": "aute reprehenderit Lorem",
																							"description": "(Required) "
																						}
																					]
																				},
																				"description": "Returns a list of year identifiers for the years that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
																			},
																			"response": [
																				{
																					"name": "Untitled Example",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organization",
																								"environments",
																								":environment",
																								":entityType",
																								":entityID",
																								":fileType"
																							],
																							"variable": [
																								{
																									"key": "organization"
																								},
																								{
																									"key": "environment"
																								},
																								{
																									"key": "entityType"
																								},
																								{
																									"key": "entityID"
																								},
																								{
																									"key": "fileType"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n \"resources\": [\n  {\n   \"id\": 2019\n  },\n  {\n   \"id\": 2020\n  }\n ]\n}"
																				},
																				{
																					"name": "The client is sending more than the allowed number of requests per unit time",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organization",
																								"environments",
																								":environment",
																								":entityType",
																								":entityID",
																								":fileType"
																							],
																							"variable": [
																								{
																									"key": "organization"
																								},
																								{
																									"key": "environment"
																								},
																								{
																									"key": "entityType"
																								},
																								{
																									"key": "entityID"
																								},
																								{
																									"key": "fileType"
																								}
																							]
																						}
																					},
																					"status": "Too Many Requests",
																					"code": 429,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				},
																				{
																					"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID/:fileType",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organization",
																								"environments",
																								":environment",
																								":entityType",
																								":entityID",
																								":fileType"
																							],
																							"variable": [
																								{
																									"key": "organization"
																								},
																								{
																									"key": "environment"
																								},
																								{
																									"key": "entityType"
																								},
																								{
																									"key": "entityID"
																								},
																								{
																									"key": "fileType"
																								}
																							]
																						}
																					},
																					"status": "Gateway Timeout",
																					"code": 504,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	]
																},
																{
																	"name": "/organizations/:organization/environments/:environment/:entityType/:entityID",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organization",
																				"environments",
																				":environment",
																				":entityType",
																				":entityID"
																			],
																			"variable": [
																				{
																					"key": "version",
																					"value": "{{version}}"
																				},
																				{
																					"key": "organization",
																					"value": "aute reprehenderit Lorem",
																					"description": "(Required) "
																				},
																				{
																					"key": "environment",
																					"value": "aute reprehenderit Lorem",
																					"description": "(Required) "
																				},
																				{
																					"key": "entityType",
																					"value": "applications",
																					"description": "(Required) "
																				},
																				{
																					"key": "entityID",
																					"value": "aute reprehenderit Lorem",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Returns a list of file type identifiers for the file types that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
																	},
																	"response": [
																		{
																			"name": "The returned list of available file types for this entity.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organization",
																						"environments",
																						":environment",
																						":entityType",
																						":entityID"
																					],
																					"variable": [
																						{
																							"key": "organization"
																						},
																						{
																							"key": "environment"
																						},
																						{
																							"key": "entityType"
																						},
																						{
																							"key": "entityID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"resources\": [\n  {\n   \"id\": \"ip\"\n  },\n  {\n   \"id\": \"ip\"\n  }\n ]\n}"
																		},
																		{
																			"name": "The client is sending more than the allowed number of requests per unit time",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organization",
																						"environments",
																						":environment",
																						":entityType",
																						":entityID"
																					],
																					"variable": [
																						{
																							"key": "organization"
																						},
																						{
																							"key": "environment"
																						},
																						{
																							"key": "entityType"
																						},
																						{
																							"key": "entityID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType/:entityID",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organization",
																						"environments",
																						":environment",
																						":entityType",
																						":entityID"
																					],
																					"variable": [
																						{
																							"key": "organization"
																						},
																						{
																							"key": "environment"
																						},
																						{
																							"key": "entityType"
																						},
																						{
																							"key": "entityID"
																						}
																					]
																				}
																			},
																			"status": "Gateway Timeout",
																			"code": 504,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "/organizations/:organization/environments/:environment/:entityType",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization",
																		"environments",
																		":environment",
																		":entityType"
																	],
																	"variable": [
																		{
																			"key": "version",
																			"value": "{{version}}"
																		},
																		{
																			"key": "organization",
																			"value": "aute reprehenderit Lorem",
																			"description": "(Required) "
																		},
																		{
																			"key": "environment",
																			"value": "aute reprehenderit Lorem",
																			"description": "(Required) "
																		},
																		{
																			"key": "entityType",
																			"value": "applications",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Returns a list of entity identifiers for the entities that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
															},
															"response": [
																{
																	"name": "The returned list of entity identifiers is for the provided entity type.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organization",
																				"environments",
																				":environment",
																				":entityType"
																			],
																			"variable": [
																				{
																					"key": "organization"
																				},
																				{
																					"key": "environment"
																				},
																				{
																					"key": "entityType"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"resources\": [\n  {\n   \"id\": \"cupida\"\n  },\n  {\n   \"id\": \"in non aute\"\n  }\n ]\n}"
																},
																{
																	"name": "The client is sending more than the allowed number of requests per unit time",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organization",
																				"environments",
																				":environment",
																				":entityType"
																			],
																			"variable": [
																				{
																					"key": "organization"
																				},
																				{
																					"key": "environment"
																				},
																				{
																					"key": "entityType"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organization/environments/:environment/:entityType",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organization",
																				"environments",
																				":environment",
																				":entityType"
																			],
																			"variable": [
																				{
																					"key": "organization"
																				},
																				{
																					"key": "environment"
																				},
																				{
																					"key": "entityType"
																				}
																			]
																		}
																	},
																	"status": "Gateway Timeout",
																	"code": 504,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "/organizations/:organization/environments/:environment",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization/environments/:environment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization",
																"environments",
																":environment"
															],
															"variable": [
																{
																	"key": "version",
																	"value": "{{version}}"
																},
																{
																	"key": "organization",
																	"value": "aute reprehenderit Lorem",
																	"description": "(Required) "
																},
																{
																	"key": "environment",
																	"value": "aute reprehenderit Lorem",
																	"description": "(Required) "
																}
															]
														},
														"description": "Returns a list of entity type identifiers for the entity types that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization/environments/:environment",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization",
																		"environments",
																		":environment"
																	],
																	"variable": [
																		{
																			"key": "organization"
																		},
																		{
																			"key": "environment"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"resources\": [\n  {\n   \"id\": \"apis\"\n  },\n  {\n   \"id\": \"apis\"\n  }\n ]\n}"
														},
														{
															"name": "The client is sending more than the allowed number of requests per unit time",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization/environments/:environment",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization",
																		"environments",
																		":environment"
																	],
																	"variable": [
																		{
																			"key": "organization"
																		},
																		{
																			"key": "environment"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization/environments/:environment",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization",
																		"environments",
																		":environment"
																	],
																	"variable": [
																		{
																			"key": "organization"
																		},
																		{
																			"key": "environment"
																		}
																	]
																}
															},
															"status": "Gateway Timeout",
															"code": 504,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "/organizations/:organization/environments",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ORG-ID",
														"value": "{{organization_id}}",
														"type": "text"
													},
													{
														"key": "X-ANYPNT-ENV-ID",
														"value": "{{environment_id}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/organizations/{{organization_id}}/environments",
													"host": [
														"{{url}}"
													],
													"path": [
														"organizations",
														"{{organization_id}}",
														"environments"
													]
												},
												"description": "Returns a list of environment identifiers for the environments that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization",
																"environments"
															],
															"variable": [
																{
																	"key": "organization"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"resources\": [\n  {\n   \"id\": \"proident aute\"\n  },\n  {\n   \"id\": \"in nisi adipisicing enim\"\n  }\n ]\n}"
												},
												{
													"name": "The client is sending more than the allowed number of requests per unit time",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization",
																"environments"
															],
															"variable": [
																{
																	"key": "organization"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization",
																"environments"
															],
															"variable": [
																{
																	"key": "organization"
																}
															]
														}
													},
													"status": "Gateway Timeout",
													"code": 504,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/organizations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ORG-ID",
												"value": "{{organization_id}}",
												"type": "text"
											},
											{
												"key": "X-ANYPNT-ENV-ID",
												"value": "{{environment_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://monitoring.anypoint.mulesoft.com/monitoring/archive/api/v1/organizations",
											"protocol": "https",
											"host": [
												"monitoring",
												"anypoint",
												"mulesoft",
												"com"
											],
											"path": [
												"monitoring",
												"archive",
												"api",
												"v1",
												"organizations"
											]
										},
										"description": "Returns a list of organization identifiers for the organizations that have archived data.  If this path contains no\ndata, then an empty list is returned.\n"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"resources\": [\n  {\n   \"id\": \"in incididu\"\n  },\n  {\n   \"id\": \"cillum culpa\"\n  }\n ]\n}"
										},
										{
											"name": "The client is sending more than the allowed number of requests per unit time",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The API service is temporarily unreachable.  Please try again later.  Contact support if problem persists.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations"
													]
												}
											},
											"status": "Gateway Timeout",
											"code": 504,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"description": "This API lists and retrieves Anypoint Monitoring archived API metrics and logs.  Archived data is organized by organizations and environments.  Within organization and environments, archived data is further divided by runtime entities that generated the data as well as creation data of the data files.\n\nA caller with proper permission must authenticate in order to access this API.  See [Anypoint Monitoring Archive API](https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/anypoint-monitoring-archive-api/) for more information on caller authentication and permissions. See [Authentication Service API](https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/access-management-api/minor/1.0/pages/Authentication/) for details on obtaining a bearer token for accessing this API."
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "alert_id",
			"value": "02213013-10f2-4bbb-b399-718c0a543e18"
		}
	]
}